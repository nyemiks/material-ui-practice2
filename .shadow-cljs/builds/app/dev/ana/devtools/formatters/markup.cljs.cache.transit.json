["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.markup');\r\ndevtools.formatters.markup.print_with = (function devtools$formatters$markup$print_with(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19750 = arguments.length;\r\nvar i__5727__auto___19751 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19751 < len__5726__auto___19750)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19751]));\r\n\r\nvar G__19752 = (i__5727__auto___19751 + (1));\r\ni__5727__auto___19751 = G__19752;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((3) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((3)),(0),null)):null);\r\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic = (function (method,value,tag,p__19633){\r\nvar vec__19634 = p__19633;\r\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19634,(0),null);\r\nvar job_fn = (function (){\r\nvar G__19637 = value;\r\nvar G__19638 = tag;\r\nvar G__19639 = (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null, ));\r\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__19637,G__19638,G__19639) : method.call(null, G__19637,G__19638,G__19639));\r\n});\r\nif((!((max_level == null)))){\r\nvar _STAR_print_level_STAR__orig_val__19640 = cljs.core._STAR_print_level_STAR_;\r\nvar _STAR_print_level_STAR__temp_val__19641 = (max_level + (1));\r\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__19641);\r\n\r\ntry{return job_fn();\r\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__19640);\r\n}} else {\r\nreturn job_fn();\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup.print_with.cljs$lang$maxFixedArity = (3));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup.print_with.cljs$lang$applyTo = (function (seq19629){\r\nvar G__19630 = cljs.core.first(seq19629);\r\nvar seq19629__$1 = cljs.core.next(seq19629);\r\nvar G__19631 = cljs.core.first(seq19629__$1);\r\nvar seq19629__$2 = cljs.core.next(seq19629__$1);\r\nvar G__19632 = cljs.core.first(seq19629__$2);\r\nvar seq19629__$3 = cljs.core.next(seq19629__$2);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19630,G__19631,G__19632,seq19629__$3);\r\n}));\r\n\r\ndevtools.formatters.markup.print_via_writer = (function devtools$formatters$markup$print_via_writer(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19755 = arguments.length;\r\nvar i__5727__auto___19756 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19756 < len__5726__auto___19755)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19756]));\r\n\r\nvar G__19757 = (i__5727__auto___19756 + (1));\r\ni__5727__auto___19756 = G__19757;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__19645){\r\nvar vec__19646 = p__19645;\r\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19646,(0),null);\r\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\r\n}));\r\n\r\n(devtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup.print_via_writer.cljs$lang$applyTo = (function (seq19642){\r\nvar G__19643 = cljs.core.first(seq19642);\r\nvar seq19642__$1 = cljs.core.next(seq19642);\r\nvar G__19644 = cljs.core.first(seq19642__$1);\r\nvar seq19642__$2 = cljs.core.next(seq19642__$1);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19643,G__19644,seq19642__$2);\r\n}));\r\n\r\ndevtools.formatters.markup.print_via_protocol = (function devtools$formatters$markup$print_via_protocol(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19758 = arguments.length;\r\nvar i__5727__auto___19759 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19759 < len__5726__auto___19758)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19759]));\r\n\r\nvar G__19760 = (i__5727__auto___19759 + (1));\r\ni__5727__auto___19759 = G__19760;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__19652){\r\nvar vec__19653 = p__19652;\r\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19653,(0),null);\r\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\r\n}));\r\n\r\n(devtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup.print_via_protocol.cljs$lang$applyTo = (function (seq19649){\r\nvar G__19650 = cljs.core.first(seq19649);\r\nvar seq19649__$1 = cljs.core.next(seq19649);\r\nvar G__19651 = cljs.core.first(seq19649__$1);\r\nvar seq19649__$2 = cljs.core.next(seq19649__$1);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19650,G__19651,seq19649__$2);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_expandable_GT_ = (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19761 = arguments.length;\r\nvar i__5727__auto___19762 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19762 < len__5726__auto___19761)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19762]));\r\n\r\nvar G__19763 = (i__5727__auto___19762 + (1));\r\ni__5727__auto___19762 = G__19763;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\r\nvar inner_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-inner-tag\",\"expandable-inner-tag\",-799648560)], null),children);\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-tag\",\"expandable-tag\",151027578),new cljs.core.Keyword(null,\"expandable-symbol\",\"expandable-symbol\",1644611290),inner_markup], null);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo = (function (seq19656){\r\nvar self__5712__auto__ = this;\r\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19656));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_raw_surrogate_GT_ = (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19764 = arguments.length;\r\nvar i__5727__auto___19765 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19765 < len__5726__auto___19764)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19765]));\r\n\r\nvar G__19766 = (i__5727__auto___19765 + (1));\r\ni__5727__auto___19765 = G__19766;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"surrogate\"], null),args);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo = (function (seq19657){\r\nvar self__5712__auto__ = this;\r\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19657));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_surrogate_GT_ = (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19767 = arguments.length;\r\nvar i__5727__auto___19768 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19768 < len__5726__auto___19767)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19768]));\r\n\r\nvar G__19769 = (i__5727__auto___19768 + (1));\r\ni__5727__auto___19768 = G__19769;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (p__19661){\r\nvar vec__19662 = p__19661;\r\nvar object = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19662,(0),null);\r\nvar header = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19662,(1),null);\r\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19662,(2),null);\r\nvar start_index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19662,(3),null);\r\nvar header__$1 = (((!((body == null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\r\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo = (function (seq19660){\r\nvar self__5712__auto__ = this;\r\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19660));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_reference_GT_ = (function devtools$formatters$markup$_LT_reference_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19770 = arguments.length;\r\nvar i__5727__auto___19771 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19771 < len__5726__auto___19770)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19771]));\r\n\r\nvar G__19772 = (i__5727__auto___19771 + (1));\r\ni__5727__auto___19771 = G__19772;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reference\"], null),args);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo = (function (seq19665){\r\nvar self__5712__auto__ = this;\r\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19665));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_reference_surrogate_GT_ = (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19773 = arguments.length;\r\nvar i__5727__auto___19774 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19774 < len__5726__auto___19773)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19774]));\r\n\r\nvar G__19775 = (i__5727__auto___19774 + (1));\r\ni__5727__auto___19774 = G__19775;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo = (function (seq19666){\r\nvar self__5712__auto__ = this;\r\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19666));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_circular_reference_GT_ = (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19776 = arguments.length;\r\nvar i__5727__auto___19777 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19777 < len__5726__auto___19776)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19777]));\r\n\r\nvar G__19778 = (i__5727__auto___19777 + (1));\r\ni__5727__auto___19777 = G__19778;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-tag\",\"circular-reference-tag\",858973471),new cljs.core.Keyword(null,\"circular-ref-icon\",\"circular-ref-icon\",-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-body-tag\",\"circular-reference-body-tag\",-1301830023)], null),children)], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo = (function (seq19667){\r\nvar self__5712__auto__ = this;\r\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19667));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_native_reference_GT_ = (function devtools$formatters$markup$_LT_native_reference_GT_(object){\r\nvar reference = devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__19668_SHARP_){\r\nreturn devtools.formatters.state.set_prevent_recursion(p1__19668_SHARP_,true);\r\n})], 0));\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-wrapper-tag\",\"native-reference-wrapper-tag\",2047690940),new cljs.core.Keyword(null,\"native-reference-background\",\"native-reference-background\",-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-tag\",\"native-reference-tag\",-1516119079),reference], null)], null);\r\n});\r\ndevtools.formatters.markup._LT_header_expander_GT_ = (function devtools$formatters$markup$_LT_header_expander_GT_(object){\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\"header-expander-symbol\",\"header-expander-symbol\",907531743),new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\r\n});\r\ndevtools.formatters.markup._LT_cljs_land_GT_ = (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19779 = arguments.length;\r\nvar i__5727__auto___19780 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19780 < len__5726__auto___19779)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19780]));\r\n\r\nvar G__19781 = (i__5727__auto___19780 + (1));\r\ni__5727__auto___19780 = G__19781;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cljs-land-tag\",\"cljs-land-tag\",-7524377)], null),children);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo = (function (seq19669){\r\nvar self__5712__auto__ = this;\r\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq19669));\r\n}));\r\n\r\ndevtools.formatters.markup._LT_nil_GT_ = (function devtools$formatters$markup$_LT_nil_GT_(){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil-tag\",\"nil-tag\",-1587449115),new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], null);\r\n});\r\ndevtools.formatters.markup._LT_bool_GT_ = (function devtools$formatters$markup$_LT_bool_GT_(bool){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bool-tag\",\"bool-tag\",-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\r\n});\r\ndevtools.formatters.markup._LT_keyword_GT_ = (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword-tag\",\"keyword-tag\",1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\r\n});\r\ndevtools.formatters.markup._LT_symbol_GT_ = (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"symbol-tag\",\"symbol-tag\",-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\r\n});\r\ndevtools.formatters.markup._LT_number_GT_ = (function devtools$formatters$markup$_LT_number_GT_(number){\r\nif(cljs.core.truth_(isFinite(number))){\r\nif(cljs.core.integer_QMARK_(number)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"integer-tag\",\"integer-tag\",698000472),number], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-tag\",\"float-tag\",-390834106),number], null);\r\n}\r\n} else {\r\nif(cljs.core.truth_(isNaN(number))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-nan-tag\",\"float-nan-tag\",557403379),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-infinity-tag\",\"float-infinity-tag\",-289254297),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\r\n}\r\n}\r\n});\r\ndevtools.formatters.markup._LT_string_GT_ = (function devtools$formatters$markup$_LT_string_GT_(string){\r\nvar dq = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"dq\",\"dq\",-1690275860));\r\nvar re_nl = (new RegExp(\"\\n\",\"g\"));\r\nvar nl_marker = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"new-line-string-replacer\",\"new-line-string-replacer\",-753206206));\r\nvar inline_string = string.replace(re_nl,nl_marker);\r\nvar max_inline_string_size = (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\r\nvar quote_string = (function (s){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join('');\r\n});\r\nvar should_abbreviate_QMARK_ = (cljs.core.count(inline_string) > max_inline_string_size);\r\nif(should_abbreviate_QMARK_){\r\nvar abbreviated_string = devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-abbreviation-marker\",\"string-abbreviation-marker\",-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\r\nvar abbreviated_string_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(abbreviated_string)], null);\r\nvar string_with_nl_markers = string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\"\\n\"].join(''));\r\nvar details_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expanded-string-tag\",\"expanded-string-tag\",-2125162127),string_with_nl_markers], null);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(inline_string)], null);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_preview_GT_ = (function devtools$formatters$markup$_LT_preview_GT_(value){\r\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"header-tag\",\"header-tag\",1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-print-level\",\"max-print-level\",-462237413))], 0));\r\n});\r\ndevtools.formatters.markup._LT_body_GT_ = (function devtools$formatters$markup$_LT_body_GT_(markup){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-tag\",\"body-tag\",433527431),markup], null);\r\n});\r\ndevtools.formatters.markup._LT_aligned_body_GT_ = (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\r\nvar prepend_li_tag = (function (line){\r\nif(cljs.core.truth_(line)){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aligned-li-tag\",\"aligned-li-tag\",1727029722)], null),line);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nvar aligned_lines = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\r\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747)], null),aligned_lines));\r\n});\r\ndevtools.formatters.markup._LT_standard_body_GT_ = (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19782 = arguments.length;\r\nvar i__5727__auto___19783 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19783 < len__5726__auto___19782)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19783]));\r\n\r\nvar G__19785 = (i__5727__auto___19783 + (1));\r\ni__5727__auto___19783 = G__19785;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (markups_lists,p__19672){\r\nvar vec__19673 = p__19672;\r\nvar no_margin_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19673,(0),null);\r\nvar ol_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747):new cljs.core.Keyword(null,\"standard-ol-tag\",\"standard-ol-tag\",1120081433));\r\nvar li_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-li-no-margin-tag\",\"standard-li-no-margin-tag\",-844555468):new cljs.core.Keyword(null,\"standard-li-tag\",\"standard-li-tag\",-932749876));\r\nvar prepend_li_tag = (function (line){\r\nif(cljs.core.truth_(line)){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nvar lines_markups = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo = (function (seq19670){\r\nvar G__19671 = cljs.core.first(seq19670);\r\nvar seq19670__$1 = cljs.core.next(seq19670);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19671,seq19670__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_standard_body_reference_GT_ = (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\r\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\r\n});\r\ndevtools.formatters.markup._LT_index_GT_ = (function devtools$formatters$markup$_LT_index_GT_(value){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"index-tag\",\"index-tag\",693492486),value,new cljs.core.Keyword(null,\"line-index-separator\",\"line-index-separator\",-1735989246)], null);\r\n});\r\ndevtools.formatters.markup.body_line = (function devtools$formatters$markup$body_line(index,value){\r\nvar index_markup = devtools.formatters.markup._LT_index_GT_(index);\r\nvar value_markup = devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"item-tag\",\"item-tag\",-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"body-line-max-print-level\",\"body-line-max-print-level\",571158623))], 0));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\r\n});\r\ndevtools.formatters.markup.prepare_body_lines = (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\r\nvar work = data;\r\nvar index = starting_index;\r\nvar lines = cljs.core.PersistentVector.EMPTY;\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(work)){\r\nreturn lines;\r\n} else {\r\nvar G__19786 = cljs.core.rest(work);\r\nvar G__19787 = (index + (1));\r\nvar G__19788 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\r\nwork = G__19786;\r\nindex = G__19787;\r\nlines = G__19788;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ndevtools.formatters.markup.body_lines = (function devtools$formatters$markup$body_lines(value,starting_index){\r\nvar seq = cljs.core.seq(value);\r\nvar max_number_body_items = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-number-body-items\",\"max-number-body-items\",299914624));\r\nvar chunk = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\r\nvar rest = cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\r\nvar lines = devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\r\nvar continue_QMARK_ = (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\r\nif((!(continue_QMARK_))){\r\nreturn lines;\r\n} else {\r\nvar more_label_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-items-more-tag\",\"body-items-more-tag\",867141569),new cljs.core.Keyword(null,\"body-items-more-label\",\"body-items-more-label\",-1561152123)], null);\r\nvar start_index = (starting_index + max_number_body_items);\r\nvar more_markup = devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721),start_index], 0));\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\r\n}\r\n});\r\ndevtools.formatters.markup._LT_details_GT_ = (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\r\ndevtools.formatters.state.push_object_to_current_history_BANG_(cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),starting_index], null)));\r\n\r\nvar has_continuation_QMARK_ = (starting_index > (0));\r\nvar body_markup = devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\r\nif(has_continuation_QMARK_){\r\nreturn body_markup;\r\n} else {\r\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_list_details_GT_ = (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\r\n});\r\ndevtools.formatters.markup._LT_list_GT_ = (function devtools$formatters$markup$_LT_list_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19793 = arguments.length;\r\nvar i__5727__auto___19794 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19794 < len__5726__auto___19793)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19794]));\r\n\r\nvar G__19795 = (i__5727__auto___19794 + (1));\r\ni__5727__auto___19794 = G__19795;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (items,max_count,p__19681){\r\nvar vec__19682 = p__19681;\r\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19682,(0),null);\r\nvar items_markups = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\r\nvar more_count = (cljs.core.count(items) - max_count);\r\nvar more_QMARK_ = (more_count > (0));\r\nvar separator = (function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-separator\",\"list-separator\",900562185);\r\n}\r\n})();\r\nvar more_symbol = ((more_QMARK_)?(function (){var temp__5802__auto__ = new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(temp__5802__auto__)){\r\nvar more_symbol = temp__5802__auto__;\r\nif(cljs.core.fn_QMARK_(more_symbol)){\r\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null, more_count));\r\n} else {\r\nreturn more_symbol;\r\n}\r\n} else {\r\nreturn devtools.formatters.helpers.get_more_marker(more_count);\r\n}\r\n})():null);\r\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-tag\",\"list-tag\",1555796884);\r\n}\r\n})(),(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-open-symbol\",\"list-open-symbol\",-1162287443);\r\n}\r\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-close-symbol\",\"list-close-symbol\",-1120016586);\r\n}\r\n})()], null)], 0));\r\nif(more_QMARK_){\r\nvar details_markup = new cljs.core.Keyword(null,\"details\",\"details\",1956795411).cljs$core$IFn$_invoke$arity$1(opts);\r\nvar default_details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__5002__auto__ = details_markup;\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn default_details_fn;\r\n}\r\n})()], 0));\r\n} else {\r\nreturn preview_markup;\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo = (function (seq19678){\r\nvar G__19679 = cljs.core.first(seq19678);\r\nvar seq19678__$1 = cljs.core.next(seq19678);\r\nvar G__19680 = cljs.core.first(seq19678__$1);\r\nvar seq19678__$2 = cljs.core.next(seq19678__$1);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19679,G__19680,seq19678__$2);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_meta_GT_ = (function devtools$formatters$markup$_LT_meta_GT_(metadata){\r\nvar body_fn = (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-body-tag\",\"meta-body-tag\",1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\r\n});\r\nvar header = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-header-tag\",\"meta-header-tag\",-1207812581),\"meta\"], null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-reference-tag\",\"meta-reference-tag\",914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\r\n});\r\ndevtools.formatters.markup._LT_meta_wrapper_GT_ = (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19832 = arguments.length;\r\nvar i__5727__auto___19833 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19833 < len__5726__auto___19832)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19833]));\r\n\r\nvar G__19834 = (i__5727__auto___19833 + (1));\r\ni__5727__auto___19833 = G__19834;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (metadata,children){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-wrapper-tag\",\"meta-wrapper-tag\",1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo = (function (seq19685){\r\nvar G__19686 = cljs.core.first(seq19685);\r\nvar seq19685__$1 = cljs.core.next(seq19685);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19686,seq19685__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_function_details_GT_ = (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\r\nif(cljs.core.fn_QMARK_(fn_obj)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\r\n}\r\n\r\nvar arities__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\r\nvar make_arity_markup_list = (function (arity){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-multi-arity-args-indent-tag\",\"fn-multi-arity-args-indent-tag\",-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),arity], null)], null);\r\n});\r\nvar arities_markupts_lists = (((cljs.core.count(arities__$1) > (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\r\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\r\nvar native_markups_list = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\r\n});\r\ndevtools.formatters.markup._LT_arities_GT_ = (function devtools$formatters$markup$_LT_arities_GT_(arities){\r\nvar multi_arity_QMARK_ = (cljs.core.count(arities) > (1));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653)):cljs.core.first(arities)))], null);\r\n});\r\ndevtools.formatters.markup._LT_function_GT_ = (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\r\nif(cljs.core.fn_QMARK_(fn_obj)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\r\n}\r\n\r\nvar vec__19687 = devtools.munging.parse_fn_info(fn_obj);\r\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19687,(0),null);\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19687,(1),null);\r\nvar lambda_QMARK_ = cljs.core.empty_QMARK_(name);\r\nvar spacer_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"spacer\",\"spacer\",2067425139));\r\nvar rest_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"rest-symbol\",\"rest-symbol\",1021371174));\r\nvar multi_arity_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653));\r\nvar arities = devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\r\nvar arities_markup = devtools.formatters.markup._LT_arities_GT_(arities);\r\nvar name_markup = (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-name-tag\",\"fn-name-tag\",555823755),name], null):null);\r\nvar icon_markup = ((lambda_QMARK_)?new cljs.core.Keyword(null,\"lambda-icon\",\"lambda-icon\",980753546):new cljs.core.Keyword(null,\"fn-icon\",\"fn-icon\",-1412665288));\r\nvar prefix_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-prefix-tag\",\"fn-prefix-tag\",1947411856),icon_markup,name_markup], null);\r\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-header-tag\",\"fn-header-tag\",-1262068349),prefix_markup,arities_markup], null);\r\nvar details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\r\n});\r\ndevtools.formatters.markup._LT_type_basis_item_GT_ = (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-item-tag\",\"type-basis-item-tag\",50612816),cljs.core.name(basis_item)], null);\r\n});\r\ndevtools.formatters.markup._LT_type_basis_GT_ = (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\r\nvar item_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\r\nvar children_markups = cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type-basis-item-separator\",\"type-basis-item-separator\",-2029193896),item_markups);\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-tag\",\"type-basis-tag\",-2122159204)], null),children_markups);\r\n});\r\ndevtools.formatters.markup._LT_type_details_GT_ = (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\r\nvar ns_markup = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\r\nvar basis_markup = ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"empty-basis-symbol\",\"empty-basis-symbol\",-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"basis-icon\",\"basis-icon\",1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\r\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\r\n});\r\ndevtools.formatters.markup._LT_type_GT_ = (function devtools$formatters$markup$_LT_type_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19836 = arguments.length;\r\nvar i__5727__auto___19837 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19837 < len__5726__auto___19836)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19837]));\r\n\r\nvar G__19838 = (i__5727__auto___19837 + (1));\r\ni__5727__auto___19837 = G__19838;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__19692){\r\nvar vec__19693 = p__19692;\r\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19693,(0),null);\r\nvar vec__19696 = devtools.munging.parse_constructor_info(constructor_fn);\r\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19696,(0),null);\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19696,(1),null);\r\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19696,(2),null);\r\nvar name_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-name-tag\",\"type-name-tag\",-1317275511),name], null);\r\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = header_tag;\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"type-header-tag\",\"type-header-tag\",1645372265);\r\n}\r\n})(),new cljs.core.Keyword(null,\"type-symbol\",\"type-symbol\",-941894755),name_markup], null);\r\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-wrapper-tag\",\"type-wrapper-tag\",-1732366004),new cljs.core.Keyword(null,\"type-header-background\",\"type-header-background\",-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-ref-tag\",\"type-ref-tag\",2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo = (function (seq19690){\r\nvar G__19691 = cljs.core.first(seq19690);\r\nvar seq19690__$1 = cljs.core.next(seq19690);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19691,seq19690__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_standalone_type_GT_ = (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19839 = arguments.length;\r\nvar i__5727__auto___19840 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19840 < len__5726__auto___19839)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19840]));\r\n\r\nvar G__19841 = (i__5727__auto___19840 + (1));\r\ni__5727__auto___19840 = G__19841;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__19701){\r\nvar vec__19702 = p__19701;\r\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19702,(0),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standalone-type-tag\",\"standalone-type-tag\",-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\r\n}));\r\n\r\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo = (function (seq19699){\r\nvar G__19700 = cljs.core.first(seq19699);\r\nvar seq19699__$1 = cljs.core.next(seq19699);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19700,seq19699__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\r\n});\r\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\r\n});\r\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19842 = arguments.length;\r\nvar i__5727__auto___19843 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19843 < len__5726__auto___19842)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19843]));\r\n\r\nvar G__19844 = (i__5727__auto___19843 + (1));\r\ni__5727__auto___19843 = G__19844;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fns,p__19707){\r\nvar vec__19708 = p__19707;\r\nvar max_fns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19708,(0),null);\r\nvar max_fns__$1 = (function (){var or__5002__auto__ = max_fns;\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-protocol-method-arities-list\",\"max-protocol-method-arities-list\",-45936465));\r\n}\r\n})();\r\nvar more_QMARK_ = (cljs.core.count(fns) > max_fns__$1);\r\nvar aritites_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\r\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-tag\",\"protocol-method-arities-header-tag\",734407707),new cljs.core.Keyword(null,\"protocol-method-arities-header-open-symbol\",\"protocol-method-arities-header-open-symbol\",1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"protocol-method-arities-list-header-separator\",\"protocol-method-arities-list-header-separator\",-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-more-symbol\",\"protocol-method-arities-more-symbol\",-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-close-symbol\",\"protocol-method-arities-header-close-symbol\",-1375237120)], null)], 0));\r\nif(more_QMARK_){\r\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\r\n} else {\r\nreturn preview_markup;\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo = (function (seq19705){\r\nvar G__19706 = cljs.core.first(seq19705);\r\nvar seq19705__$1 = cljs.core.next(seq19705);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19706,seq19705__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_protocol_method_GT_ = (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-tag\",\"protocol-method-tag\",2032279830),new cljs.core.Keyword(null,\"method-icon\",\"method-icon\",-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-name-tag\",\"protocol-method-name-tag\",-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\r\n});\r\ndevtools.formatters.markup._LT_protocol_details_GT_ = (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\r\nvar protocol_obj = devtools.munging.get_protocol_object(selector);\r\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-ns-name-tag\",\"protocol-ns-name-tag\",1832081510),ns], null)], null):null);\r\nvar native_markups_list = (((!((protocol_obj == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\r\nvar methods$ = devtools.munging.collect_protocol_methods(obj,selector);\r\nvar methods_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__19711){\r\nvar vec__19712 = p__19711;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19712,(0),null);\r\nvar arities = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19712,(1),null);\r\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\r\n}),methods$);\r\nvar methods_markups_lists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\r\n});\r\ndevtools.formatters.markup._LT_protocol_GT_ = (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19845 = arguments.length;\r\nvar i__5727__auto___19846 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19846 < len__5726__auto___19845)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19846]));\r\n\r\nvar G__19847 = (i__5727__auto___19846 + (1));\r\ni__5727__auto___19846 = G__19847;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocol,p__19718){\r\nvar vec__19719 = p__19718;\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19719,(0),null);\r\nvar map__19722 = protocol;\r\nvar map__19722__$1 = cljs.core.__destructure_map(map__19722);\r\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19722__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\r\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19722__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\r\nvar selector = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19722__$1,new cljs.core.Keyword(null,\"selector\",\"selector\",762528866));\r\nvar fast_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__19722__$1,new cljs.core.Keyword(null,\"fast?\",\"fast?\",-1813307150));\r\nvar preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = tag;\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"protocol-name-tag\",\"protocol-name-tag\",1508238310);\r\n}\r\n})(),name], null);\r\nvar prefix_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\"fast-protocol-tag\",\"fast-protocol-tag\",2066025065):new cljs.core.Keyword(null,\"slow-protocol-tag\",\"slow-protocol-tag\",2061129467)),new cljs.core.Keyword(null,\"protocol-background\",\"protocol-background\",1111513794)], null);\r\nif((!((obj == null)))){\r\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo = (function (seq19715){\r\nvar G__19716 = cljs.core.first(seq19715);\r\nvar seq19715__$1 = cljs.core.next(seq19715);\r\nvar G__19717 = cljs.core.first(seq19715__$1);\r\nvar seq19715__$2 = cljs.core.next(seq19715__$1);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19716,G__19717,seq19715__$2);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_more_protocols_GT_ = (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\r\nvar fake_protocol = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\r\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocol-more-tag\",\"protocol-more-tag\",2098702865)], 0));\r\n});\r\ndevtools.formatters.markup._LT_protocols_list_GT_ = (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19848 = arguments.length;\r\nvar i__5727__auto___19849 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19849 < len__5726__auto___19848)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19849]));\r\n\r\nvar G__19850 = (i__5727__auto___19849 + (1));\r\ni__5727__auto___19849 = G__19850;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocols,p__19726){\r\nvar vec__19727 = p__19726;\r\nvar max_protocols = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19727,(0),null);\r\nvar max_protocols__$1 = (function (){var or__5002__auto__ = max_protocols;\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-list-protocols\",\"max-list-protocols\",-537135129));\r\n}\r\n})();\r\nvar protocols_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\r\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"protocols-header-tag\",\"protocols-header-tag\",-734413384),new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825),new cljs.core.Keyword(null,\"protocols-list-open-symbol\",\"protocols-list-open-symbol\",-729713043),new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165),new cljs.core.Keyword(null,\"protocols-list-close-symbol\",\"protocols-list-close-symbol\",652072902),new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125),new cljs.core.Keyword(null,\"header-protocol-separator\",\"header-protocol-separator\",445531439),new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\r\n}));\r\n\r\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity = (2));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo = (function (seq19723){\r\nvar G__19724 = cljs.core.first(seq19723);\r\nvar seq19723__$1 = cljs.core.next(seq19723);\r\nvar G__19725 = cljs.core.first(seq19723__$1);\r\nvar seq19723__$2 = cljs.core.next(seq19723__$1);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19724,G__19725,seq19723__$2);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_field_GT_ = (function devtools$formatters$markup$_LT_field_GT_(name,value){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-tag\",\"header-field-tag\",-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-name-tag\",\"header-field-name-tag\",82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\"header-field-value-spacer\",\"header-field-value-spacer\",-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-value-tag\",\"header-field-value-tag\",-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__19730_SHARP_){\r\nreturn devtools.formatters.state.set_managed_print_level(p1__19730_SHARP_,(1));\r\n})], 0))], null),new cljs.core.Keyword(null,\"header-field-separator\",\"header-field-separator\",-774444018)], null);\r\n});\r\ndevtools.formatters.markup._LT_fields_details_row_GT_ = (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\r\nvar vec__19731 = field;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19731,(0),null);\r\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19731,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-tr-tag\",\"body-field-tr-tag\",37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td1-tag\",\"body-field-td1-tag\",256357429),new cljs.core.Keyword(null,\"body-field-symbol\",\"body-field-symbol\",256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-name-tag\",\"body-field-name-tag\",917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td2-tag\",\"body-field-td2-tag\",94501500),new cljs.core.Keyword(null,\"body-field-value-spacer\",\"body-field-value-spacer\",1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td3-tag\",\"body-field-td3-tag\",-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-value-tag\",\"body-field-value-tag\",800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\r\n});\r\ndevtools.formatters.markup._LT_fields_GT_ = (function devtools$formatters$markup$_LT_fields_GT_(var_args){\r\nvar args__5732__auto__ = [];\r\nvar len__5726__auto___19851 = arguments.length;\r\nvar i__5727__auto___19852 = (0);\r\nwhile(true){\r\nif((i__5727__auto___19852 < len__5726__auto___19851)){\r\nargs__5732__auto__.push((arguments[i__5727__auto___19852]));\r\n\r\nvar G__19853 = (i__5727__auto___19852 + (1));\r\ni__5727__auto___19852 = G__19853;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\r\n});\r\n\r\n(devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fields,p__19738){\r\nvar vec__19739 = p__19738;\r\nvar max_fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19739,(0),null);\r\nif((cljs.core.count(fields) === (0))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-no-fields-symbol\",\"fields-header-no-fields-symbol\",-1749204979)], null);\r\n} else {\r\nvar max_fields__$1 = (function (){var or__5002__auto__ = max_fields;\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-instance-header-fields\",\"max-instance-header-fields\",-126007269));\r\n}\r\n})();\r\nvar more_QMARK_ = (cljs.core.count(fields) > max_fields__$1);\r\nvar fields_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__19742){\r\nvar vec__19743 = p__19742;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19743,(0),null);\r\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19743,(1),null);\r\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\r\n}),cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-open-symbol\",\"fields-header-open-symbol\",-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\"more-fields-symbol\",\"more-fields-symbol\",720022882):null),new cljs.core.Keyword(null,\"fields-header-close-symbol\",\"fields-header-close-symbol\",1615181116)], null)], 0));\r\n}\r\n}));\r\n\r\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo = (function (seq19736){\r\nvar G__19737 = cljs.core.first(seq19736);\r\nvar seq19736__$1 = cljs.core.next(seq19736);\r\nvar self__5711__auto__ = this;\r\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__19737,seq19736__$1);\r\n}));\r\n\r\ndevtools.formatters.markup._LT_fields_details_GT_ = (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\r\nvar protocols = devtools.munging.scan_protocols(obj);\r\nvar has_protocols_QMARK_ = (!(cljs.core.empty_QMARK_(protocols)));\r\nvar fields_markup = (((!((cljs.core.count(fields) === (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-icon\",\"fields-icon\",-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-body-fields-table-tag\",\"instance-body-fields-table-tag\",1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\r\nvar protocols_list_markup = ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols-icon\",\"protocols-icon\",-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\r\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\r\n});\r\ndevtools.formatters.markup._LT_instance_GT_ = (function devtools$formatters$markup$_LT_instance_GT_(value){\r\nvar constructor_fn = devtools.formatters.helpers.get_constructor(value);\r\nvar vec__19746 = devtools.munging.parse_constructor_info(constructor_fn);\r\nvar _ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19746,(0),null);\r\nvar _name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19746,(1),null);\r\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19746,(2),null);\r\nvar custom_printing_QMARK_ = (((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IPrintWithWriter$))))?true:false):false);\r\nvar type_markup = devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"instance-type-header-tag\",\"instance-type-header-tag\",-1015702989)], 0));\r\nvar fields = devtools.formatters.helpers.fetch_fields_values(value,basis);\r\nvar fields_markup = devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\r\nvar fields_details_markup_fn = (function (){\r\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\r\n});\r\nvar fields_preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-value-tag\",\"instance-value-tag\",-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\r\nvar custom_printing_markup = ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-custom-printing-wrapper-tag\",\"instance-custom-printing-wrapper-tag\",1461890684),new cljs.core.Keyword(null,\"instance-custom-printing-background\",\"instance-custom-printing-background\",-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\"instance-custom-printing-tag\",\"instance-custom-printing-tag\",-67034432))], null):null);\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-header-tag\",\"instance-header-tag\",903623870),new cljs.core.Keyword(null,\"instance-header-background\",\"instance-header-background\",1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\r\n});\r\ndevtools.formatters.markup._LT_header_GT_ = (function devtools$formatters$markup$_LT_header_GT_(value){\r\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\r\n});\r\ndevtools.formatters.markup._LT_surrogate_header_GT_ = (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\r\nvar or__5002__auto__ = devtools.formatters.templating.get_surrogate_header(surrogate);\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\r\n}\r\n});\r\ndevtools.formatters.markup._LT_surrogate_target_GT_ = (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\r\nvar target = devtools.formatters.templating.get_surrogate_target(surrogate);\r\nif(cljs.core.seqable_QMARK_(target)){\r\nvar starting_index = devtools.formatters.templating.get_surrogate_start_index(surrogate);\r\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\r\n} else {\r\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_surrogate_body_GT_ = (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\r\nvar temp__5802__auto__ = devtools.formatters.templating.get_surrogate_body(surrogate);\r\nif(cljs.core.truth_(temp__5802__auto__)){\r\nvar body = temp__5802__auto__;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"target\",\"target\",253001721),body)){\r\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\r\n} else {\r\nreturn body;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ndevtools.formatters.markup._LT_atomic_GT_ = (function devtools$formatters$markup$_LT_atomic_GT_(value){\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-nils\",\"render-nils\",1360008699),value,cljs.core.nil_QMARK_))){\r\nreturn devtools.formatters.markup._LT_nil_GT_();\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-bools\",\"render-bools\",1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\r\nreturn devtools.formatters.markup._LT_bool_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-strings\",\"render-strings\",-1497177335),value,cljs.core.string_QMARK_))){\r\nreturn devtools.formatters.markup._LT_string_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-numbers\",\"render-numbers\",-1385392009),value,cljs.core.number_QMARK_))){\r\nreturn devtools.formatters.markup._LT_number_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-keywords\",\"render-keywords\",1200455875),value,cljs.core.keyword_QMARK_))){\r\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-symbols\",\"render-symbols\",-887705016),value,cljs.core.symbol_QMARK_))){\r\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-instances\",\"render-instances\",-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\r\nreturn devtools.formatters.markup._LT_instance_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-types\",\"render-types\",-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\r\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-functions\",\"render-functions\",1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\r\nreturn devtools.formatters.markup._LT_function_GT_(value);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\ndevtools.formatters.markup.get_markup_db = (function devtools$formatters$markup$get_markup_db(){\r\nif((devtools.formatters.markup._STAR_markup_db_STAR_ == null)){\r\n(devtools.formatters.markup._STAR_markup_db_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"aligned-body\",\"aligned-body\",-2124118747),new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"protocol-method-arities\",\"protocol-method-arities\",-545542044),new cljs.core.Keyword(null,\"surrogate-header\",\"surrogate-header\",1705524526),new cljs.core.Keyword(null,\"details\",\"details\",1956795411),new cljs.core.Keyword(null,\"more-protocols\",\"more-protocols\",359555207),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),new cljs.core.Keyword(null,\"fields-details\",\"fields-details\",-269572714),new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),new cljs.core.Keyword(null,\"standard-body\",\"standard-body\",-1563020798),new cljs.core.Keyword(null,\"type-basis\",\"type-basis\",-1825246054),new cljs.core.Keyword(null,\"bool\",\"bool\",1444635321),new cljs.core.Keyword(null,\"standalone-type\",\"standalone-type\",-802565278),new cljs.core.Keyword(null,\"preview\",\"preview\",451279890),new cljs.core.Keyword(null,\"header\",\"header\",119441134),new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206),new cljs.core.Keyword(null,\"cljs-land\",\"cljs-land\",1255896927),new cljs.core.Keyword(null,\"type-basis-item\",\"type-basis-item\",-1662150132),new cljs.core.Keyword(null,\"protocol-method-arities-details\",\"protocol-method-arities-details\",1944702118),new cljs.core.Keyword(null,\"fields-details-row\",\"fields-details-row\",2066344936),new cljs.core.Keyword(null,\"standard-body-reference\",\"standard-body-reference\",1513301561),new cljs.core.Keyword(null,\"surrogate-body\",\"surrogate-body\",-1618569585),new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"protocol-method-arity\",\"protocol-method-arity\",-1861927833),new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),new cljs.core.Keyword(null,\"type-details\",\"type-details\",477755178),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587),new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),new cljs.core.Keyword(null,\"surrogate\",\"surrogate\",2122284260),new cljs.core.Keyword(null,\"protocols-list\",\"protocols-list\",371434187),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"instance\",\"instance\",-2121349050),new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),new cljs.core.Keyword(null,\"function-details\",\"function-details\",1501147310),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),new cljs.core.Keyword(null,\"arities\",\"arities\",-1781122917),new cljs.core.Keyword(null,\"header-expander\",\"header-expander\",-1606368578),new cljs.core.Keyword(null,\"list-details\",\"list-details\",46031799),new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),new cljs.core.Keyword(null,\"surrogate-target\",\"surrogate-target\",-1262730220),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"number\",\"number\",1570378438),new cljs.core.Keyword(null,\"protocol-details\",\"protocol-details\",-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]));\r\n} else {\r\n}\r\n\r\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/markup.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$emit-markup-db","~$devtools.formatters.markup"],"~:excludes",["~#set",[]],"~:macros",["^ ","^G",["^ ","~:arglists",["~#list",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","~:name","~$devtools.formatters.markup/emit-markup-db","~:ns","^H","~:macro",true]],"^N","^H","~:reader-aliases",["^ "],"~:op","^P","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^V","~$devtools.formatters.printing","^W","~$devtools.formatters.state","^X","~$devtools.formatters.templating","^Y","~$devtools.munging","^Z","~$munging","^Z","~$cljs.core","^10","~$goog","^11"],"~:seen",["^J",["~:require","~:require-macros"]],"~:uses",["^ ","~$expandable?","^V","~$should-render?","^V","~$set-managed-print-level","^X","~$bool?","^V","~$cljs-instance?","^V","~$get-surrogate-body","^Y","~$get-constructor","^V","~$managed-print-via-writer","^W","~$pref","^V","~$wrap-arity","^V","~$cljs-function?","^V","~$get-more-marker","^V","~$fetch-fields-values","^V","~$managed-print-via-protocol","^W","~$abbreviated?","^V","~$get-surrogate-header","^Y","~$reset-depth-limits","^X","~$get-surrogate-target","^Y","~$set-prevent-recursion","^X","~$get-surrogate-start-index","^Y","~$abbreviate-long-string","^V","~$cljs-type?","^V","~$should-render-instance?","^V"],"^14",["^ ","^H","^H","^10","^10","^Z","^Z","^[","^Z"],"~:form",["^M",["~$ns","^H",["^M",["^14",["^H","~:refer",["^G"]]]],["^M",["^13",["^V","^1O",["^19","^1@","^1K","^1:","^1L","^16","^1D","^1J","^1<","^1>","^17","^1A","^1?","^1B"]],["^W","^1O",["^1=","^1C"]],["^X","^1O",["^1H","^18","^1F"]],["^Y","^1O",["^1;","^1G","^1I","^1E"]],["^Z","~:as","^["]]]]],"~:flags",["^ ","^14",["^J",[]],"^13",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^11","^10","^V","^W","^X","^Y","^Z"]],"^P","^H","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/markup.cljs"],"~:compiled-at",1712152378191,"^R",["^ ","^V","^V","^H","^H","^W","^W","^Y","^Y","^[","^Z","^X","^X","^10","^10","^11","^11","^Z","^Z"],"~:resource-name","devtools/formatters/markup.cljs","~:warnings",[],"~:source","(ns devtools.formatters.markup\n  (:require-macros [devtools.formatters.markup :refer [emit-markup-db]])\n  (:require [devtools.formatters.helpers :refer [bool? cljs-function? cljs-type? cljs-instance?\n                                                 should-render-instance? expandable? abbreviated?\n                                                 abbreviate-long-string get-constructor pref should-render?\n                                                 get-more-marker wrap-arity fetch-fields-values]]\n            [devtools.formatters.printing :refer [managed-print-via-writer managed-print-via-protocol]]\n            [devtools.formatters.state :refer [set-prevent-recursion set-managed-print-level reset-depth-limits]]\n            [devtools.formatters.templating :refer [get-surrogate-body\n                                                    get-surrogate-target\n                                                    get-surrogate-start-index\n                                                    get-surrogate-header]]\n            [devtools.munging :as munging]))\n\n; reusable hiccup-like templates\n\n(declare get-markup-db)\n\n; -- cljs printing  ---------------------------------------------------------------------------------------------------------\n\n(defn print-with [method value tag & [max-level]]\n  (let [job-fn #(method value tag (get-markup-db))]\n    (if (some? max-level)\n      (binding [*print-level* (inc max-level)]                                                                                ; when printing do at most print-level deep recursion\n        (job-fn))\n      (job-fn))))\n\n(defn print-via-writer [value tag & [max-level]]\n  (print-with managed-print-via-writer value tag max-level))\n\n(defn print-via-protocol [value tag & [max-level]]\n  (print-with managed-print-via-protocol value tag max-level))\n\n; -- references -------------------------------------------------------------------------------------------------------------\n\n(defn <expandable> [& children]\n  (let [inner-markup (concat [:expandable-inner-tag] children)]\n    [:expandable-tag :expandable-symbol inner-markup]))\n\n(defn <raw-surrogate> [& args]\n  (concat [\"surrogate\"] args))\n\n(defn <surrogate> [& [object header body start-index]]\n  (let [header (if (some? body) (<expandable> header) header)]\n    (<raw-surrogate> object header body start-index)))\n\n(defn <reference> [& args]\n  (concat [\"reference\"] args))\n\n(defn <reference-surrogate> [& args]\n  (<reference> (apply <surrogate> args)))\n\n(defn <circular-reference> [& children]\n  (<reference-surrogate> nil [:circular-reference-tag :circular-ref-icon] (concat [:circular-reference-body-tag] children)))\n\n(defn <native-reference> [object]\n  (let [reference (<reference> object #(set-prevent-recursion % true))]\n    [:native-reference-wrapper-tag :native-reference-background [:native-reference-tag reference]]))\n\n(defn <header-expander> [object]\n  (<reference> (<raw-surrogate> object :header-expander-symbol :target) reset-depth-limits))\n\n; -- simple markup ----------------------------------------------------------------------------------------------------------\n\n(defn <cljs-land> [& children]\n  (concat [:cljs-land-tag] children))\n\n(defn <nil> []\n  ; this code is duplicated in templating.cljs, see make-reference\n  [:nil-tag :nil-label])\n\n(defn <bool> [bool]\n  [:bool-tag (str bool)])\n\n(defn <keyword> [keyword]\n  [:keyword-tag (str keyword)])\n\n(defn <symbol> [symbol]\n  [:symbol-tag (str symbol)])\n\n(defn <number> [number]\n  (if (js/isFinite number)\n    (if (integer? number)\n      [:integer-tag number]\n      [:float-tag number])\n    (if (js/isNaN number)\n      [:float-nan-tag (pr-str number)]\n      [:float-infinity-tag (pr-str number)])))\n\n; -- string markup ----------------------------------------------------------------------------------------------------------\n\n(defn <string> [string]\n  (let [dq (pref :dq)\n        re-nl (js/RegExp. \"\\n\" \"g\")\n        nl-marker (pref :new-line-string-replacer)\n        inline-string (.replace string re-nl nl-marker)\n        max-inline-string-size (+ (pref :string-prefix-limit) (pref :string-postfix-limit))\n        quote-string (fn [s] (str dq s dq))\n        should-abbreviate? (> (count inline-string) max-inline-string-size)]\n    (if should-abbreviate?\n      (let [abbreviated-string (abbreviate-long-string inline-string\n                                                       (pref :string-abbreviation-marker)\n                                                       (pref :string-prefix-limit)\n                                                       (pref :string-postfix-limit))\n            abbreviated-string-markup [:string-tag (quote-string abbreviated-string)]\n            string-with-nl-markers (.replace string re-nl (str nl-marker \"\\n\"))\n            details-markup [:expanded-string-tag string-with-nl-markers]]\n        (<reference-surrogate> string abbreviated-string-markup details-markup))\n      [:string-tag (quote-string inline-string)])))\n\n; -- generic preview markup -------------------------------------------------------------------------------------------------\n\n(defn <preview> [value]\n  (print-via-writer value :header-tag (pref :max-print-level)))\n\n; -- body-related templates -------------------------------------------------------------------------------------------------\n\n(defn <body> [markup]\n  [:body-tag markup])\n\n(defn <aligned-body> [markups-lists]\n  (let [prepend-li-tag (fn [line]\n                         (if line\n                           (concat [:aligned-li-tag] line)))\n        aligned-lines (keep prepend-li-tag markups-lists)]\n    (<body> (concat [:standard-ol-no-margin-tag] aligned-lines))))\n\n(defn <standard-body> [markups-lists & [no-margin?]]\n  (let [ol-tag (if no-margin? :standard-ol-no-margin-tag :standard-ol-tag)\n        li-tag (if no-margin? :standard-li-no-margin-tag :standard-li-tag)\n        prepend-li-tag (fn [line]\n                         (if line\n                           (concat [li-tag] line)))\n        lines-markups (keep prepend-li-tag markups-lists)]\n    (concat [ol-tag] lines-markups)))\n\n(defn <standard-body-reference> [o]\n  (<standard-body> [[(<reference> o)]]))\n\n; -- generic details markup -------------------------------------------------------------------------------------------------\n\n(defn <index> [value]\n  [:index-tag value :line-index-separator])\n\n(defn- body-line [index value]\n  (let [index-markup (<index> index)\n        value-markup (print-via-writer value :item-tag (pref :body-line-max-print-level))]\n    [index-markup value-markup]))\n\n; TODO: this fn is screaming for rewrite\n(defn- prepare-body-lines [data starting-index]\n  (loop [work data\n         index starting-index\n         lines []]\n    (if (empty? work)\n      lines\n      (recur (rest work) (inc index) (conj lines (body-line index (first work)))))))\n\n(defn- body-lines [value starting-index]\n  (let [seq (seq value)\n        max-number-body-items (pref :max-number-body-items)\n        chunk (take max-number-body-items seq)\n        rest (drop max-number-body-items seq)\n        lines (prepare-body-lines chunk starting-index)\n        continue? (not (empty? (take 1 rest)))]\n    (if-not continue?\n      lines\n      (let [more-label-markup [:body-items-more-tag :body-items-more-label]\n            start-index (+ starting-index max-number-body-items)\n            more-markup (<reference-surrogate> rest more-label-markup :target start-index)]\n        (conj lines [more-markup])))))\n\n(defn <details> [value starting-index]\n  ;; This is very important when the value is a map\n  ;; we need to push the object to history so that we can be able to get the paths (i.e keys)\n  ;; the other option to this is ignoring this and then when generating paths, assume that all\n  ;; vectors that have two children which are\n  ;; a keyword as the first item and\n  ;; a sequence or map as the second item when the path info is not nil.\n  ;; are all just seq'd maps and that the first item in the vector is a key in the map.\n  ;; The seq'd map is a result of `(seq value)` done in `body-lines` above\n  (devtools.formatters.state/push-object-to-current-history! (with-meta value {:index starting-index}))\n  (let [has-continuation? (pos? starting-index)\n        body-markup (<standard-body> (body-lines value starting-index) has-continuation?)]\n    (if has-continuation?\n      body-markup\n      (<body> body-markup))))\n\n; -- generic list template --------------------------------------------------------------------------------------------------\n\n(defn <list-details> [items _opts]\n  (<aligned-body> (map list items)))\n\n(defn <list> [items max-count & [opts]]\n  (let [items-markups (take max-count items)\n        more-count (- (count items) max-count)\n        more? (pos? more-count)\n        separator (or (:separator opts) :list-separator)\n        more-symbol (if more?\n                      (if-let [more-symbol (:more-symbol opts)]\n                        (if (fn? more-symbol)\n                          (more-symbol more-count)\n                          more-symbol)\n                        (get-more-marker more-count)))\n        preview-markup (concat [(or (:tag opts) :list-tag)\n                                (or (:open-symbol opts) :list-open-symbol)]\n                               (interpose separator items-markups)\n                               (if more? [separator more-symbol])\n                               [(or (:close-symbol opts) :list-close-symbol)])]\n    (if more?\n      (let [details-markup (:details opts)\n            default-details-fn (partial <list-details> items opts)]\n        (<reference-surrogate> nil preview-markup (or details-markup default-details-fn)))\n      preview-markup)))\n\n; -- mete-related markup ----------------------------------------------------------------------------------------------------\n\n(defn <meta> [metadata]\n  (let [body-fn (fn [] [:meta-body-tag (<preview> metadata)])\n        header [:meta-header-tag \"meta\"]]\n    [:meta-reference-tag (<reference-surrogate> metadata header body-fn)]))                                                   ; body must be lazy, see #35\n\n(defn <meta-wrapper> [metadata & children]\n  (concat [:meta-wrapper-tag] children [(<meta> metadata)]))\n\n; -- function markup --------------------------------------------------------------------------------------------------------\n\n(defn <function-details> [fn-obj ns _name arities prefix]\n  {:pre [(fn? fn-obj)]}\n  (let [arities (map wrap-arity arities)\n        make-arity-markup-list (fn [arity]\n                                 [[:fn-multi-arity-args-indent-tag prefix]\n                                  [:fn-args-tag arity]])\n        arities-markupts-lists (if (> (count arities) 1) (map make-arity-markup-list arities))\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        native-markups-list [:native-icon (<native-reference> fn-obj)]]\n    (<aligned-body> (concat arities-markupts-lists [ns-markups-list native-markups-list]))))\n\n(defn <arities> [arities]\n  (let [multi-arity? (> (count arities) 1)]\n    [:fn-args-tag (wrap-arity (if multi-arity?\n                                (pref :multi-arity-symbol)\n                                (first arities)))]))\n\n(defn <function> [fn-obj]\n  {:pre [(fn? fn-obj)]}\n  (let [[ns name] (munging/parse-fn-info fn-obj)\n        lambda? (empty? name)\n        spacer-symbol (pref :spacer)\n        rest-symbol (pref :rest-symbol)\n        multi-arity-symbol (pref :multi-arity-symbol)\n        arities (munging/extract-arities fn-obj true spacer-symbol multi-arity-symbol rest-symbol)\n        arities-markup (<arities> arities)\n        name-markup (if-not lambda? [:fn-name-tag name])\n        icon-markup (if lambda? :lambda-icon :fn-icon)\n        prefix-markup [:fn-prefix-tag icon-markup name-markup]\n        preview-markup [:fn-header-tag prefix-markup arities-markup]\n        details-fn (partial <function-details> fn-obj ns name arities prefix-markup)]\n    (<reference-surrogate> fn-obj preview-markup details-fn)))\n\n; -- type markup ------------------------------------------------------------------------------------------------------------\n\n(defn <type-basis-item> [basis-item]\n  [:type-basis-item-tag (name basis-item)])\n\n(defn <type-basis> [basis]\n  (let [item-markups (map <type-basis-item> basis)\n        children-markups (interpose :type-basis-item-separator item-markups)]\n    (concat [:type-basis-tag] children-markups)))\n\n(defn <type-details> [constructor-fn ns _name basis]\n  (let [ns-markup (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        basis-markup (if (empty? basis)\n                       [:empty-basis-symbol]\n                       [:basis-icon (<type-basis> basis)])\n        native-markup [:native-icon (<native-reference> constructor-fn)]]\n    (<aligned-body> [basis-markup ns-markup native-markup])))\n\n(defn <type> [constructor-fn & [header-tag]]\n  (let [[ns name basis] (munging/parse-constructor-info constructor-fn)\n        name-markup [:type-name-tag name]\n        preview-markup [(or header-tag :type-header-tag) :type-symbol name-markup]\n        details-markup-fn (partial <type-details> constructor-fn ns name basis)]\n    [:type-wrapper-tag\n     :type-header-background\n     [:type-ref-tag (<reference-surrogate> constructor-fn preview-markup details-markup-fn)]]))\n\n(defn <standalone-type> [constructor-fn & [header-tag]]\n  [:standalone-type-tag (<type> constructor-fn header-tag)])\n\n; -- protocols markup -------------------------------------------------------------------------------------------------------\n\n(defn <protocol-method-arity> [arity-fn]\n  (<reference> arity-fn))\n\n(defn <protocol-method-arities-details> [fns]\n  (<aligned-body> (map <protocol-method-arity> fns)))\n\n(defn <protocol-method-arities> [fns & [max-fns]]\n  (let [max-fns (or max-fns (pref :max-protocol-method-arities-list))\n        more? (> (count fns) max-fns)\n        aritites-markups (map <protocol-method-arity> (take max-fns fns))\n        preview-markup (concat [:protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol]\n                               (interpose :protocol-method-arities-list-header-separator aritites-markups)\n                               (if more? [:protocol-method-arities-more-symbol])\n                               [:protocol-method-arities-header-close-symbol])]\n    (if more?\n      (let [details-markup-fn (partial <protocol-method-arities-details> fns)]\n        (<reference-surrogate> nil preview-markup details-markup-fn))\n      preview-markup)))\n\n(defn <protocol-method> [name arities]\n  [:protocol-method-tag\n   :method-icon\n   [:protocol-method-name-tag name]\n   (<protocol-method-arities> arities)])\n\n(defn <protocol-details> [obj ns _name selector _fast?]\n  (let [protocol-obj (munging/get-protocol-object selector)\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:protocol-ns-name-tag ns]])\n        native-markups-list (if (some? protocol-obj) [:native-icon (<native-reference> protocol-obj)])\n        methods (munging/collect-protocol-methods obj selector)\n        methods-markups (map (fn [[name arities]] (<protocol-method> name arities)) methods)\n        methods-markups-lists (map list methods-markups)]\n    (<aligned-body> (concat methods-markups-lists [ns-markups-list native-markups-list]))))\n\n(defn <protocol> [obj protocol & [tag]]\n  (let [{:keys [ns name selector fast?]} protocol\n        preview-markup [(or tag :protocol-name-tag) name]\n        prefix-markup [(if fast? :fast-protocol-tag :slow-protocol-tag) :protocol-background]]\n    (if (some? obj)\n      (let [details-markup-fn (partial <protocol-details> obj ns name selector fast?)]\n        (conj prefix-markup (<reference-surrogate> obj preview-markup details-markup-fn)))\n      (conj prefix-markup preview-markup))))\n\n(defn <more-protocols> [more-count]\n  (let [fake-protocol {:name (get-more-marker more-count)}]\n    (<protocol> nil fake-protocol :protocol-more-tag)))\n\n(defn <protocols-list> [obj protocols & [max-protocols]]\n  (let [max-protocols (or max-protocols (pref :max-list-protocols))\n        protocols-markups (map (partial <protocol> obj) protocols)]\n    (<list> protocols-markups max-protocols {:tag          :protocols-header-tag\n                                             :open-symbol  :protocols-list-open-symbol\n                                             :close-symbol :protocols-list-close-symbol\n                                             :separator    :header-protocol-separator\n                                             :more-symbol  <more-protocols>})))\n\n; -- instance fields markup -------------------------------------------------------------------------------------------------\n\n(defn <field> [name value]\n  [:header-field-tag\n   [:header-field-name-tag (str name)]\n   :header-field-value-spacer\n   [:header-field-value-tag (<reference> (<surrogate> value) #(set-managed-print-level % 1))]\n   :header-field-separator])\n\n(defn <fields-details-row> [field]\n  (let [[name value] field]\n    [:body-field-tr-tag\n     [:body-field-td1-tag\n      :body-field-symbol\n      [:body-field-name-tag (str name)]]\n     [:body-field-td2-tag\n      :body-field-value-spacer]\n     [:body-field-td3-tag\n      [:body-field-value-tag (<reference-surrogate> value)]]]))\n\n(defn <fields> [fields & [max-fields]]\n  (if (zero? (count fields))\n    [:fields-header-tag :fields-header-no-fields-symbol]\n    (let [max-fields (or max-fields (pref :max-instance-header-fields))\n          more? (> (count fields) max-fields)\n          fields-markups (map (fn [[name value]] (<field> name value)) (take max-fields fields))]\n      (concat [:fields-header-tag\n               :fields-header-open-symbol]\n              fields-markups\n              [(if more? :more-fields-symbol)\n               :fields-header-close-symbol]))))\n\n(defn <fields-details> [fields obj]\n  (let [protocols (munging/scan-protocols obj)\n        has-protocols? (not (empty? protocols))\n        fields-markup (if-not (zero? (count fields))\n                        [:fields-icon (concat [:instance-body-fields-table-tag] (map <fields-details-row> fields))])\n        protocols-list-markup (if has-protocols? [:protocols-icon (<protocols-list> obj protocols)])\n        native-markup [:native-icon (<native-reference> obj)]]\n    (<aligned-body> [fields-markup protocols-list-markup native-markup])))\n\n; -- type/record instance markup --------------------------------------------------------------------------------------------\n\n(defn <instance> [value]\n  (let [constructor-fn (get-constructor value)\n        [_ns _name basis] (munging/parse-constructor-info constructor-fn)\n        custom-printing? (implements? IPrintWithWriter value)\n        type-markup (<type> constructor-fn :instance-type-header-tag)\n        fields (fetch-fields-values value basis)\n        fields-markup (<fields> fields (if custom-printing? 0))\n        fields-details-markup-fn #(<fields-details> fields value)\n        fields-preview-markup [:instance-value-tag (<reference-surrogate> value fields-markup fields-details-markup-fn)]\n        custom-printing-markup (if custom-printing?\n                                 [:instance-custom-printing-wrapper-tag\n                                  :instance-custom-printing-background\n                                  (print-via-protocol value :instance-custom-printing-tag)])]\n    [:instance-header-tag\n     :instance-header-background\n     fields-preview-markup\n     custom-printing-markup\n     type-markup]))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <header> [value]\n  (<cljs-land> (<preview> value)))\n\n(defn <surrogate-header> [surrogate]\n  (or (get-surrogate-header surrogate)\n      (<preview> (get-surrogate-target surrogate))))\n\n(defn <surrogate-target> [surrogate]\n  (let [target (get-surrogate-target surrogate)]\n    (if (seqable? target)\n      (let [starting-index (get-surrogate-start-index surrogate)]\n        (<details> target starting-index))\n      (<standard-body-reference> target))))\n\n(defn <surrogate-body> [surrogate]\n  (if-let [body (get-surrogate-body surrogate)]\n    (if (= :target body)\n      (<surrogate-target> surrogate)\n      body)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <atomic> [value]\n  (cond\n    (should-render? :render-nils value nil?) (<nil>)\n    (should-render? :render-bools value bool?) (<bool> value)\n    (should-render? :render-strings value string?) (<string> value)\n    (should-render? :render-numbers value number?) (<number> value)\n    (should-render? :render-keywords value keyword?) (<keyword> value)\n    (should-render? :render-symbols value symbol?) (<symbol> value)\n    (should-render? :render-instances value should-render-instance?) (<instance> value)\n    (should-render? :render-types value cljs-type?) (<standalone-type> value)\n    (should-render? :render-functions value cljs-function?) (<function> value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *markup-db*)\n\n; emit-markup-db macro will generate a map of all markup <functions> in this namespace:\n;\n;    {:atomic              <atomic>\n;     :reference           <reference>\n;     :native-reference    <native-reference>\n;     ...}\n;\n; we generate it only on first call and cache it in *markup-db*\n; emitting markup db statically into def would prevent dead-code elimination\n;\n(defn get-markup-db []\n  (if (nil? *markup-db*)\n    (set! *markup-db* (emit-markup-db)))\n  *markup-db*)\n","~:reader-features",["^J",["~:cljs"]],"~:used-var-namespaces",["^J",["^V","^H","^W","^Y","^X","^10","~$js","^Z"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAgBA,AAAA,AAIA,AAAA,wCAAA,gDAAAA,xFAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,2EAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,6EAAA,4BAAAG,zGAAMD,wFAAYW,OAAOC,MAAMC;AAA/B,AAAA,IAAAX,aAAAD;gBAAA,AAAAE,4CAAAD,WAAA,IAAA,vEAAsCY;AAAtC,AACE,aAAA,TAAMC;AAAN,AAAc,IAAAC,WAAQJ;IAARK,WAAcJ;IAAdK,WAAkB,CAACC,yEAAAA,2EAAAA;AAAnB,AAAA,oFAAAH,SAAAC,SAAAC,8BAAAF,SAAAC,SAAAC,9IAACP,uCAAAA,mEAAAA;;AAAf,AACE,GAAI,GAAA,cAAA,bAAOG;AACT,IAAAM,0CAAUE;IAAVD,0CAAwB,aAAA,ZAAKP;AAA7B,AAAA,qCAAAO,pCAAUC;;AAAV,IAAA,AACE,OAACP;UADH,AAAA,qCAAAK,pCAAUE;;AAEV,OAACP;;;;AALP,CAAA,gEAAA,hEAAMf;;AAAN;AAAA,CAAA,0DAAA,WAAAI,rEAAMJ;AAAN,AAAA,IAAAK,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;IAAAI,WAAA,AAAAF,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;IAAAK,WAAA,AAAAH,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAM,qBAAA;AAAA,AAAA,OAAAA,wDAAAL,SAAAG,SAAAC,SAAAL;;;AAAA,AAOA,AAAA,8CAAA,sDAAAV,pGAAM6B;AAAN,AAAA,IAAA5B,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA4B,iFAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAAzB;;;AAAA,AAAA,CAAA,mFAAA,qBAAA0B,xGAAMD,8FAAkBX,MAAMC;AAA9B,AAAA,IAAAY,aAAAD;gBAAA,AAAArB,4CAAAsB,WAAA,IAAA,vEAAqCX;AAArC,AACE,OAACe,2EAAWC,sDAAyBlB,MAAMC,sDAAIC;;;AADjD,CAAA,sEAAA,tEAAMS;;AAAN;AAAA,CAAA,gEAAA,WAAAG,3EAAMH;AAAN,AAAA,IAAAI,WAAA,AAAArB,gBAAAoB;IAAAA,eAAA,AAAAnB,eAAAmB;IAAAE,WAAA,AAAAtB,gBAAAoB;IAAAA,eAAA,AAAAnB,eAAAmB;AAAA,AAAA,IAAAhB,qBAAA;AAAA,AAAA,OAAAA,wDAAAiB,SAAAC,SAAAF;;;AAAA,AAGA,AAAA,gDAAA,wDAAAhC,xGAAMqC;AAAN,AAAA,IAAApC,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAoC,mFAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAAjC;;;AAAA,AAAA,CAAA,qFAAA,qBAAAkC,1GAAMD,gGAAoBnB,MAAMC;AAAhC,AAAA,IAAAoB,aAAAD;gBAAA,AAAA7B,4CAAA8B,WAAA,IAAA,vEAAuCnB;AAAvC,AACE,OAACe,2EAAWQ,wDAA2BzB,MAAMC,sDAAIC;;;AADnD,CAAA,wEAAA,xEAAMiB;;AAAN;AAAA,CAAA,kEAAA,WAAAG,7EAAMH;AAAN,AAAA,IAAAI,WAAA,AAAA7B,gBAAA4B;IAAAA,eAAA,AAAA3B,eAAA2B;IAAAE,WAAA,AAAA9B,gBAAA4B;IAAAA,eAAA,AAAA3B,eAAA2B;AAAA,AAAA,IAAAxB,qBAAA;AAAA,AAAA,OAAAA,wDAAAyB,SAAAC,SAAAF;;;AAAA,AAKA,AAAA,gDAAA,wDAAAxC,xGAAM4C;AAAN,AAAA,IAAA3C,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA2C,mFAAAxC;;;AAAA,AAAA,CAAA,qFAAA,rFAAMwC,gGAAgBI;AAAtB,AACE,IAAMC,eAAa,+CAAA,mFAAA,lIAACC,+NAA+BF;AAAnD,AAAA,0FAAA,wEAAA,+EACsCC;;;AAFxC,CAAA,wEAAA,xEAAML;;AAAN;AAAA,CAAA,kEAAA,WAAAC,7EAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAIA,AAAA,mDAAA,2DAAA7C,9GAAMmD;AAAN,AAAA,IAAAlD,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAkD,sFAAA/C;;;AAAA,AAAA,CAAA,wFAAA,xFAAM+C,mGAAmBE;AAAzB,AACE,sDAAA,mFAAA,lIAACH,sJAAqBG;;;AADxB,CAAA,2EAAA,3EAAMF;;AAAN;AAAA,CAAA,qEAAA,WAAAC,hFAAMD;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAK;;;AAAA,AAGA,AAAA,+CAAA,uDAAApD,tGAAMsD;AAAN,AAAA,IAAArD,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAqD,kFAAAlD;;;AAAA,AAAA,CAAA,oFAAA,WAAAmD,/FAAMD;AAAN,AAAA,IAAAE,aAAAD;aAAA,AAAA9C,4CAAA+C,WAAA,IAAA,pEAAsBE;aAAtB,AAAAjD,4CAAA+C,WAAA,IAAA,pEAA6BG;WAA7B,AAAAlD,4CAAA+C,WAAA,IAAA,lEAAoCI;kBAApC,AAAAnD,4CAAA+C,WAAA,IAAA,zEAAyCK;AAAzC,AACE,IAAMF,aAAO,EAAI,GAAA,SAAA,RAAOC,iBAAM,AAACE,qIAAaH,aAAQA;AAApD,AACE,OAACI,wIAAgBL,OAAOC,WAAOC,KAAKC;;;AAFxC,CAAA,uEAAA,vEAAMP;;AAAN;AAAA,CAAA,iEAAA,WAAAG,5EAAMH;AAAN,AAAA,IAAAR,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAU;;;AAAA,AAIA,AAAA,+CAAA,uDAAAzD,tGAAMgE;AAAN,AAAA,IAAA/D,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA+D,kFAAA5D;;;AAAA,AAAA,CAAA,oFAAA,pFAAM4D,+FAAeX;AAArB,AACE,sDAAA,mFAAA,lIAACH,sJAAqBG;;;AADxB,CAAA,uEAAA,vEAAMW;;AAAN;AAAA,CAAA,iEAAA,WAAAC,5EAAMD;AAAN,AAAA,IAAAlB,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAkB;;;AAAA,AAGA,AAAA,yDAAA,iEAAAjE,1HAAMkE;AAAN,AAAA,IAAAjE,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAiE,4FAAA9D;;;AAAA,AAAA,CAAA,8FAAA,9FAAM8D,yGAAyBb;AAA/B,AACE,OAACe,oIAAY,AAACC,8CAAMf,6CAAYD;;;AADlC,CAAA,iFAAA,jFAAMa;;AAAN;AAAA,CAAA,2EAAA,WAAAC,tFAAMD;AAAN,AAAA,IAAApB,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAoB;;;AAAA,AAGA,AAAA,wDAAA,gEAAAnE,xHAAMsE;AAAN,AAAA,IAAArE,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAqE,2FAAAlE;;;AAAA,AAAA,CAAA,6FAAA,7FAAMkE,wGAAwBtB;AAA9B,AACE,qJAAA,KAAA,mFAAA,wFAAA,9TAACwB,sZAAuE,+CAAA,mFAAA,lIAACtB,8OAAsCF;;;AADjH,CAAA,gFAAA,hFAAMsB;;AAAN;AAAA,CAAA,0EAAA,WAAAC,rFAAMD;AAAN,AAAA,IAAAxB,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAwB;;;AAAA,AAGA,sDAAA,tDAAME,oHAAoBf;AAA1B,AACE,IAAMgB,YAAU,2IAAA,WAAAC,tJAACP,oIAAYV;AAAb,AAAqB,uDAAAiB,iBAAA,jEAACC;;AAAtC,AAAA,0FAAA,qGAAA,mGAAA,mFAAA,sFACqFF;;AAEvF,qDAAA,rDAAMG,kHAAmBnB;AAAzB,AACE,OAACU,oIAAY,+IAAA,wFAAA,vOAACL,wIAAgBL,6JAAwCoB;;AAIxE,AAAA,+CAAA,uDAAA9E,tGAAM+E;AAAN,AAAA,IAAA9E,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA8E,kFAAA3E;;;AAAA,AAAA,CAAA,oFAAA,pFAAM2E,+FAAe/B;AAArB,AACE,sDAAA,mFAAA,lIAACE,+MAAwBF;;;AAD3B,CAAA,uEAAA,vEAAM+B;;AAAN;AAAA,CAAA,iEAAA,WAAAC,5EAAMD;AAAN,AAAA,IAAAjC,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAiC;;;AAAA,AAGA,yCAAA,zCAAMC;AAAN,AAAA,0FAAA,4DAAA;;AAIA,0CAAA,1CAAMC,4FAAQC;AAAd,AAAA,0FAAA,4DACa,4CAAKA;;AAElB,6CAAA,7CAAMC,kGAAWC;AAAjB,AAAA,0FAAA,mEACgB,4CAAKA;;AAErB,4CAAA,5CAAMC,gGAAUC;AAAhB,AAAA,0FAAA,iEACe,4CAAKA;;AAEpB,4CAAA,5CAAMC,gGAAUC;AAAhB,AACE,oBAAI,AAACC,SAAYD;AACf,GAAI,AAACE,yBAASF;AAAd,0FAAA,kEACgBA;;AADhB,0FAAA,+DAEcA;;;AACd,oBAAI,AAACG,MAASH;AAAd,0FAAA,sEACkB,AAACI,wGAAOJ;;AAD1B,0FAAA,iFAEuB,AAACI,wGAAOJ;;;;AAInC,4CAAA,5CAAMK,gGAAUC;AAAhB,AACE,IAAMC,KAAG,iCAAA,jCAACC;IACJC,QAAM,KAAAC,OAAA,KAAA;IACNC,YAAU,iCAAA,jCAACH;IACXI,gBAAc,AAAUN,eAAOG,MAAME;IACrCE,yBAAuB,CAAG,iCAAA,jCAACL,uHAA2B,iCAAA,jCAACA;IACvDM,eAAa,WAAKC;AAAL,AAAQ,oDAAKR,gDAAGQ,+CAAER;;IAC/BS,2BAAmB,CAAG,AAACC,gBAAML,iBAAeC;AANlD,AAOE,GAAIG;AACF,IAAME,qBAAmB,AAACC,mDAAuBP,cACA,iCAAA,jCAACJ,mIACD,iCAAA,jCAACA,qHACD,iCAAA,jCAACA;gCAHlD,mFAAA,/GAIMY,gLAAuC,AAACN,aAAaI;IACrDG,yBAAuB,AAAUf,eAAOG,MAAM,wDAAA,XAAKE;qBALzD,mFAAA,pGAMMW,wLAAqCD;AAN3C,AAOE,OAACtC,8IAAsBuB,OAAOc,0BAA0BE;;AAR5D,0FAAA,iEASe,AAACR,aAAaF;;;AAIjC,6CAAA,7CAAMW,kGAAW9F;AAAjB,AACE,8FAAA,vFAAC+F,iFAAiB/F,yHAAkB,iCAAA,jCAAC+E;;AAIvC,0CAAA,1CAAMiB,4FAAQC;AAAd,AAAA,0FAAA,4DACaA;;AAEb,kDAAA,lDAAMC,4GAAgBC;AAAtB,AACE,IAAMC,iBAAe,WAAKC;AAAL,AACE,oBAAIA;AACF,sDAAA,mFAAA,lIAACrE,mNAAyBqE;;AAD5B;;;IAEjBC,gBAAc,AAACC,6CAAKH,eAAeD;AAHzC,AAIE,OAACH,wCAAO,+CAAA,mFAAA,lIAAChE,wOAAoCsE;;AAEjD,AAAA,mDAAA,2DAAAxH,9GAAM0H;AAAN,AAAA,IAAAzH,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAyH,sFAAA,CAAA,UAAA,MAAAtH;;;AAAA,AAAA,CAAA,wFAAA,yBAAAuH,jHAAMD,mGAAiBL;AAAvB,AAAA,IAAAO,aAAAD;uBAAA,AAAAlH,4CAAAmH,WAAA,IAAA,9EAAwCG;AAAxC,AACE,IAAMC,SAAO,oCAAA,8FAAA,hHAAID;IACXE,SAAO,oCAAA,+FAAA,jHAAIF;IACXT,iBAAe,WAAKC;AAAL,AACE,oBAAIA;AACF,sDAAA,/CAACrE,kIAAQ+E,eAAQV;;AADnB;;;IAEjBW,gBAAc,AAACT,6CAAKH,eAAeD;AALzC,AAME,sDAAA,/CAACnE,kIAAQ8E,eAAQE;;;AAPrB,CAAA,2EAAA,3EAAMR;;AAAN;AAAA,CAAA,qEAAA,WAAAG,hFAAMH;AAAN,AAAA,IAAAI,WAAA,AAAAlH,gBAAAiH;IAAAA,eAAA,AAAAhH,eAAAgH;AAAA,AAAA,IAAA7G,qBAAA;AAAA,AAAA,OAAAA,wDAAA8G,SAAAD;;;AAAA,AASA,6DAAA,7DAAMM,kIAA2BC;AAAjC,AACE,wDAAA,mFAAA,pIAACV,uNAAkB,AAACtD,oIAAYgE;;AAIlC,2CAAA,3CAAMC,8FAASnH;AAAf,AAAA,0FAAA,oEAAA,NACcA;;AAEd,uCAAA,vCAAOoH,sFAAWC,MAAMrH;AAAxB,AACE,IAAMsH,eAAa,AAACH,yCAAQE;IACtBE,eAAa,uFAAA,vFAACxB,iFAAiB/F,qHAAgB,iCAAA,jCAAC+E;AADtD,AAAA,0FAEGuC,aAAaC;;AAGlB,gDAAA,hDAAOC,wGAAoBC,KAAKC;AAAhC,AACE,IAAOC,OAAKF;IACLJ,QAAMK;YADb,RAEOE;;AAFP,AAGE,GAAI,AAACC,uBAAOF;AACVC;;AACA,eAAO,AAACE,eAAKH;eAAM,SAAA,RAAKN;eAAO,AAACU,6CAAKH,MAAM,AAACR,qCAAUC,MAAM,AAAC3H,gBAAMiI;;;;;;;;;AAEzE,wCAAA,xCAAOK,wFAAYhI,MAAM0H;AAAzB,AACE,IAAMO,MAAI,AAACpG,cAAI7B;IACTkI,wBAAsB,iCAAA,jCAACnD;IACvBoD,QAAM,AAACC,6CAAKF,sBAAsBD;IAClCI,OAAK,AAACC,6CAAKJ,sBAAsBD;IACjCL,QAAM,AAACJ,8CAAmBW,MAAMT;IAChCa,kBAAU,GAAK,AAACV,uBAAO,6CAAA,7CAACO,iDAAOC;AALrC,AAME,GAAA,GAAQE;AACNX;;AACA,wBAAA,mFAAA,kFAAA,zLAAMY;IACA7F,cAAY,CAAG+E,iBAAeQ;IAC9BO,cAAY,qKAAA,rKAACnF,8IAAsB+E,KAAKG,0EAA0B7F;AAFxE,AAGE,0DAAA,nDAACoF,6CAAKH,yFAAOa;;;AAErB,6CAAA,7CAAMC,kGAAW1I,MAAM0H;AAAvB,AASE,AAACiB,+DAA0D,0BAAA,2CAAA,rEAACC,oBAAU5I,yGAAc0H;;AACpF,IAAMmB,0BAAkB,kBAAA,jBAAMnB;IACxBoB,cAAY,AAACC,sFAAgB,AAACf,sCAAWhI,MAAM0H,kEAAgBmB;AADrE,AAEE,GAAIA;AACFC;;AACA,OAAC9C,wCAAO8C;;;AAId,kDAAA,lDAAME,4GAAgBC,MAAMC;AAA5B,AACE,OAAChD,gDAAe,AAACiD,4CAAIC,eAAKH;;AAE5B,AAAA,0CAAA,kDAAAnK,5FAAMuK;AAAN,AAAA,IAAAtK,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAsK,6EAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAAnK;;;AAAA,AAAA,CAAA,+EAAA,2BAAAoK,1GAAMD,0FAAQJ,MAAMU;AAApB,AAAA,IAAAJ,aAAAD;WAAA,AAAA/J,4CAAAgK,WAAA,IAAA,lEAAiCK;AAAjC,AACE,IAAMC,gBAAc,AAACzB,6CAAKuB,UAAUV;IAC9Ba,aAAW,CAAG,AAACtE,gBAAMyD,SAAOU;IAC5BI,cAAM,cAAA,bAAMD;IACZE,YAAU,iBAAAC,mBAAI,AAAA,8FAAYL;AAAhB,AAAA,oBAAAK;AAAAA;;AAAA;;;IACVC,cAAY,EAAIH,aACF,iBAAAI,qBAAqB,AAAA,kGAAcP;AAAnC,AAAA,oBAAAO;AAAA,kBAAAA,dAASD;AAAT,AACE,GAAI,AAACE,oBAAIF;AACP,QAACA,4CAAAA,wDAAAA,dAAYJ,qCAAAA;;AACbI;;;AACF,OAACG,4CAAgBP;;KALrB;IAMZQ,iBAAe,sDAAA,tDAACtI,yIAAQ,iBAAAiI,mBAAI,AAAA,kFAAML;AAAV,AAAA,oBAAAK;AAAAA;;AAAA;;KACA,iBAAAA,mBAAI,AAAA,gGAAcL;AAAlB,AAAA,oBAAAK;AAAAA;;AAAA;;gRADT,nQAEQ,AAACM,kDAAUP,UAAUH,iEACrB,eAAA,iHAAA,9HAAIE,gGAAOC,UAAUE,6GACpB,iBAAAD,mBAAI,AAAA,mGAAeL;AAAnB,AAAA,oBAAAK;AAAAA;;AAAA;;;AAd9B,AAeE,GAAIF;AACF,IAAMlE,iBAAe,AAAA,yFAAU+D;IACzBY,qBAAmB,AAACC,gDAAQzB,gDAAeC,MAAMW;AADvD,AAEE,qJAAA,9IAACtG,mJAA0BgH,eAAe,iBAAAL,mBAAIpE;AAAJ,AAAA,oBAAAoE;AAAAA;;AAAmBO;;;;AAC/DF;;;;AApBN,CAAA,kEAAA,lEAAMjB;;AAAN;AAAA,CAAA,4DAAA,WAAAG,vEAAMH;AAAN,AAAA,IAAAI,WAAA,AAAA/J,gBAAA8J;IAAAA,eAAA,AAAA7J,eAAA6J;IAAAE,WAAA,AAAAhK,gBAAA8J;IAAAA,eAAA,AAAA7J,eAAA6J;AAAA,AAAA,IAAA1J,qBAAA;AAAA,AAAA,OAAAA,wDAAA2J,SAAAC,SAAAF;;;AAAA,AAwBA,0CAAA,1CAAMkB,4FAAQC;AAAd,AACE,IAAMC,UAAQ;AAAA,AAAA,0FAAA,uEAAuB,AAAC9E,2CAAU6E;;aAAhD,mFAAA,4EAAA,xKACMlI;AADN,AAAA,0FAAA,gFAEuB,AAACa,8IAAsBqH,SAASlI,OAAOmI;;AAEhE,AAAA,kDAAA,0DAAA9L,5GAAM+L;AAAN,AAAA,IAAA9L,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA8L,qFAAA,CAAA,UAAA,MAAA3L;;;AAAA,AAAA,CAAA,uFAAA,vFAAM2L,kGAAgBF,SAAW7I;AAAjC,AACE,6DAAA,mFAAA,gJAAA,zRAACE,8NAA2BF,8IAAU,AAAC4I,wCAAOC;;;AADhD,CAAA,0EAAA,1EAAME;;AAAN;AAAA,CAAA,oEAAA,WAAAC,/EAAMD;AAAN,AAAA,IAAAE,WAAA,AAAArL,gBAAAoL;IAAAA,eAAA,AAAAnL,eAAAmL;AAAA,AAAA,IAAAhL,qBAAA;AAAA,AAAA,OAAAA,wDAAAiL,SAAAD;;;AAAA,AAKA,sDAAA,tDAAMG,oHAAoBC,OAAOC,GAAGC,MAAMC,QAAQC;AAAlD,AAAA,GACS,AAAClB,oBAAIc;AADd;AAAA,AAAA,MAAA,KAAAF,MAAA;;;AAEE,IAAMK,cAAQ,AAAClC,4CAAIoC,uCAAWF;IACxBG,yBAAuB,WAAKC;AAAL,AAAA,0FAAA,mFAAA,yHAAA,mFAAA,lGACoCH,oKACnBG;;IACxCC,yBAAuB,wHAAA,tHAAI,gCAAA,/BAAG,AAAClG,gBAAM6F,qBAAY,AAAClC,4CAAIqC,uBAAuBH;IAC7EM,kBAAgB,EAAA,iCAAA,mFAAA,0DAAA,mFAAA,4FAAA,1VAAQ,AAAC9D,uBAAOsD,gTAA+BA;0BALrE,mFAAA,zGAMMS,4KAAkC,AAACrI,oDAAmB2H;AAN5D,AAOE,OAAChF,gDAAe,sEAAA,tEAAClE,+CAAO0J,0GAAwBC,gBAAgBC;;AAEpE,6CAAA,7CAAMC,kGAAWR;AAAjB,AACE,IAAMS,qBAAa,4BAAA,3BAAG,AAACtG,gBAAM6F;AAA7B,AAAA,0FAAA,kEACgB,AAACE,uCAAW,EAAIO,oBACF,iCAAA,jCAAC/G,mHACD,AAACrF,gBAAM2L;;AAEvC,8CAAA,9CAAMU,oGAAYb;AAAlB,AAAA,GACS,AAACd,oBAAIc;AADd;AAAA,AAAA,MAAA,KAAAF,MAAA;;;AAEE,IAAAgB,aAAgB,AAACE,+BAAsBhB;SAAvC,AAAA3L,4CAAAyM,WAAA,IAAA,hEAAOb;WAAP,AAAA5L,4CAAAyM,WAAA,IAAA,lEAAUC;IACJE,gBAAQ,AAACtE,uBAAOoE;IAChBG,gBAAc,iCAAA,jCAACrH;IACfsH,cAAY,iCAAA,jCAACtH;IACbuH,qBAAmB,iCAAA,jCAACvH;IACpBsG,UAAQ,wCAAA,xCAACkB,iCAAwBrB,YAAYkB,cAAcE,mBAAmBD;IAC9EG,iBAAe,AAACX,2CAAUR;IAC1BoB,cAAY,EAAA,oBAAA,mFAAA,+EAAA,nLAAQN,sKAAsBF;IAC1CS,cAAY,iBAAA,kEAAA,jFAAIP;oBARtB,mFAAA,nGASMQ,0KAA8BD,YAAYD;qBAThD,mFAAA,pGAUMnC,4KAA+BqC,cAAcH;IAC7CI,aAAW,AAACnC,uDAAQQ,oDAAmBC,OAAOC,GAAGc,uDAAKZ,QAAQsB;AAXpE,AAYE,OAACrJ,8IAAsB4H,OAAOZ,eAAesC;;AAIjD,qDAAA,rDAAMC,kHAAmBC;AAAzB,AAAA,0FAAA,iFACwB,AAACC,eAAKD;;AAE9B,gDAAA,hDAAME,wGAAcC;AAApB,AACE,IAAMC,eAAa,AAAC/D,4CAAI0D,mDAAkBI;IACpCE,mBAAiB,kDAAA,lDAAC5C,kJAAqC2C;AAD7D,AAEE,sDAAA,mFAAA,lIAAClL,oNAAyBmL;;AAE9B,kDAAA,lDAAMC,4GAAgBC,eAAelC,GAAGC,MAAM6B;AAA9C,AACE,IAAMK,YAAU,EAAA,iCAAA,mFAAA,0DAAA,mFAAA,4FAAA,1VAAQ,AAACzF,uBAAOsD,gTAA+BA;IACzDoC,eAAa,iCAAA,mFAAA,0FAAA,mFAAA,/RAAI,AAAC1F,uBAAOoF,yUAEG,AAACD,8CAAaC;oBAHhD,mFAAA,nGAIMO,sKAA4B,AAACjK,oDAAmB8J;AAJtD,AAKE,uDAAA,hDAACnH,mIAAgBqH,aAAaD,UAAUE;;AAE5C,AAAA,0CAAA,kDAAA1O,5FAAM2O;AAAN,AAAA,IAAA1O,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA0O,6EAAA,CAAA,UAAA,MAAAvO;;;AAAA,AAAA,CAAA,+EAAA,0BAAAwO,zGAAMD,0FAAQJ;AAAd,AAAA,IAAAM,aAAAD;iBAAA,AAAAnO,4CAAAoO,WAAA,IAAA,xEAAgCG;AAAhC,AACE,IAAAC,aAAsB,AAACC,wCAA+BX;SAAtD,AAAA9N,4CAAAwO,WAAA,IAAA,hEAAO5C;WAAP,AAAA5L,4CAAAwO,WAAA,IAAA,lEAAU9B;YAAV,AAAA1M,4CAAAwO,WAAA,IAAA,nEAAed;kBAAf,mFAAA,jGACMR,yKAA4BR;qBADlC,jBAEM3B,oGAAgB,iBAAAL,mBAAI6D;AAAJ,AAAA,oBAAA7D;AAAAA;;AAAA;;KAFtB,mEAEoEwC;IAC9DwB,oBAAkB,AAACxD,uDAAQ2C,gDAAeC,eAAelC,GAAGc,uDAAKgB;AAHvE,AAAA,0FAAA,8EAAA,yFAAA,mFAAA,qEAMkB,AAAC3J,8IAAsB+J,eAAe/C,eAAe2D;;;AAPzE,CAAA,kEAAA,lEAAMR;;AAAN;AAAA,CAAA,4DAAA,WAAAG,vEAAMH;AAAN,AAAA,IAAAI,WAAA,AAAAnO,gBAAAkO;IAAAA,eAAA,AAAAjO,eAAAiO;AAAA,AAAA,IAAA9N,qBAAA;AAAA,AAAA,OAAAA,wDAAA+N,SAAAD;;;AAAA,AASA,AAAA,qDAAA,6DAAA9O,lHAAMoP;AAAN,AAAA,IAAAnP,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAmP,wFAAA,CAAA,UAAA,MAAAhP;;;AAAA,AAAA,CAAA,0FAAA,0BAAAiP,pHAAMD,qGAAmBb;AAAzB,AAAA,IAAAe,aAAAD;iBAAA,AAAA5O,4CAAA6O,WAAA,IAAA,xEAA2CN;AAA3C,AAAA,0FAAA,oFACwB,AAACS,6EAAOlB,iEAAeS;;;AAD/C,CAAA,6EAAA,7EAAMI;;AAAN;AAAA,CAAA,uEAAA,WAAAG,lFAAMH;AAAN,AAAA,IAAAI,WAAA,AAAA5O,gBAAA2O;IAAAA,eAAA,AAAA1O,eAAA0O;AAAA,AAAA,IAAAvO,qBAAA;AAAA,AAAA,OAAAA,wDAAAwO,SAAAD;;;AAAA,AAKA,2DAAA,3DAAMG,8HAAyBC;AAA/B,AACE,OAACvL,oIAAYuL;;AAEf,qEAAA,rEAAMC,kJAAmCC;AAAzC,AACE,OAACzI,gDAAe,AAACiD,4CAAIqF,yDAAwBG;;AAE/C,AAAA,6DAAA,qEAAA7P,lIAAM8P;AAAN,AAAA,IAAA7P,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA6P,gGAAA,CAAA,UAAA,MAAA1P;;;AAAA,AAAA,CAAA,kGAAA,eAAA2P,jHAAMD,6GAA2BD;AAAjC,AAAA,IAAAG,aAAAD;cAAA,AAAAtP,4CAAAuP,WAAA,IAAA,rEAAwCG;AAAxC,AACE,IAAMA,cAAQ,iBAAAhF,mBAAIgF;AAAJ,AAAA,oBAAAhF;AAAAA;;AAAY,wCAAA,jCAAClF;;;IACrBgF,cAAM,CAAG,AAACvE,gBAAMmJ,OAAKM;IACrBC,mBAAiB,AAAC/F,4CAAIqF,yDAAwB,AAACpG,6CAAK6G,YAAQN;IAC5DrE,iBAAe,sDAAA,mFAAA,gHAAA,ymBAAA,mFAAA,r7BAACtI,kYACO,kDAAA,lDAACuI,yLAAyD2E,oEAC1D,eAAA,mFAAA,2HAAA,3NAAInF;AALjC,AAOE,GAAIA;AACF,IAAMkE,oBAAkB,AAACxD,gDAAQiE,mEAAkCC;AAAnE,AACE,qJAAA,9IAACrL,mJAA0BgH,eAAe2D;;AAC5C3D;;;;AAXN,CAAA,qFAAA,rFAAMsE;;AAAN;AAAA,CAAA,+EAAA,WAAAG,1FAAMH;AAAN,AAAA,IAAAI,WAAA,AAAAtP,gBAAAqP;IAAAA,eAAA,AAAApP,eAAAoP;AAAA,AAAA,IAAAjP,qBAAA;AAAA,AAAA,OAAAA,wDAAAkP,SAAAD;;;AAAA,AAaA,qDAAA,rDAAMI,kHAAmBlD,KAAKZ;AAA9B,AAAA,0FAAA,mFAAA,oEAAA,mFAAA,8FAG8BY,aAC3B,AAAC2C,2DAA0BvD;;AAE9B,sDAAA,tDAAM+D,oHAAoBC,IAAIlE,GAAGC,MAAMkE,SAASC;AAAhD,AACE,IAAMC,eAAa,AAACC,qCAA4BH;IAC1C3D,kBAAgB,EAAA,iCAAA,mFAAA,0DAAA,mFAAA,wGAAA,tWAAQ,AAAC9D,uBAAOsD,4TAAqCA;IACrES,sBAAoB,+BAAA,mFAAA,6IAAA,7PAAI,GAAA,iBAAA,hBAAO4D,+KAA4B,AAACjM,oDAAmBiM;IAC/EE,WAAQ,AAACC,0CAAiCN,IAAIC;IAC9CM,kBAAgB,AAACzG,4CAAI,WAAA0G;AAAA,AAAA,IAAAC,aAAAD;WAAA,AAAAtQ,4CAAAuQ,WAAA,IAAA,lEAAM7D;cAAN,AAAA1M,4CAAAuQ,WAAA,IAAA,rEAAWzE;AAAX,AAAqB,OAAC8D,mDAAkBlD,KAAKZ;GAAUqE;IAC5EK,wBAAsB,AAAC5G,4CAAIC,eAAKwG;AALtC,AAME,OAAC1J,gDAAe,qEAAA,rEAAClE,+CAAO+N,yGAAuBpE,gBAAgBC;;AAEnE,AAAA,8CAAA,sDAAA9M,pGAAMkR;AAAN,AAAA,IAAAjR,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAiR,iFAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA9Q;;;AAAA,AAAA,CAAA,mFAAA,wBAAA+Q,3GAAMD,8FAAYX,IAAIiB;AAAtB,AAAA,IAAAJ,aAAAD;UAAA,AAAA1Q,4CAAA2Q,WAAA,IAAA,jEAAkCjQ;AAAlC,AACE,IAAAsQ,aAAuCD;IAAvCC,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAcpF;WAAd,AAAAsF,4CAAAF,eAAA,lEAAiBtE;eAAjB,AAAAwE,4CAAAF,eAAA,tEAAsBjB;kBAAtB,AAAAmB,4CAAAF,eAAA,zEAA+BG;qBAA/B,jBACMpG,oGAAgB,iBAAAL,mBAAIhK;AAAJ,AAAA,oBAAAgK;AAAAA;;AAAA;;KAA4BgC;oBADlD,iRAAA,jSAEMU,mGAAe,+BAAA,+EAAA,5FAAI+D;AAFzB,AAGE,GAAI,GAAA,QAAA,PAAOrB;AACT,IAAMpB,oBAAkB,AAACxD,uDAAQ2E,oDAAmBC,IAAIlE,GAAGc,uDAAKqD,SAASoB;AAAzE,AACE,OAAC3I,6CAAK4E,cAAc,AAACrJ,8IAAsB+L,IAAI/E,eAAe2D;;AAChE,OAAClG,6CAAK4E,cAAcrC;;;;AAP1B,CAAA,sEAAA,tEAAM0F;;AAAN;AAAA,CAAA,gEAAA,WAAAG,3EAAMH;AAAN,AAAA,IAAAI,WAAA,AAAA1Q,gBAAAyQ;IAAAA,eAAA,AAAAxQ,eAAAwQ;IAAAE,WAAA,AAAA3Q,gBAAAyQ;IAAAA,eAAA,AAAAxQ,eAAAwQ;AAAA,AAAA,IAAArQ,qBAAA;AAAA,AAAA,OAAAA,wDAAAsQ,SAAAC,SAAAF;;;AAAA,AASA,oDAAA,pDAAMQ,gHAAkB7G;AAAxB,AACE,oBAAA,2CAAA,3DAAM8G,gHAAqB,AAACvG,4CAAgBP;AAA5C,AACE,wFAAA,qEAAA,tJAAC+G,sFAAeD;;AAEpB,AAAA,oDAAA,4DAAA9R,hHAAMgS;AAAN,AAAA,IAAA/R,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA+R,uFAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA5R;;;AAAA,AAAA,CAAA,yFAAA,yBAAA6R,lHAAMD,oGAAkBzB,IAAI+B;AAA5B,AAAA,IAAAJ,aAAAD;oBAAA,AAAAxR,4CAAAyR,WAAA,IAAA,3EAAyCK;AAAzC,AACE,IAAMA,oBAAc,iBAAApH,mBAAIoH;AAAJ,AAAA,oBAAApH;AAAAA;;AAAkB,wCAAA,jCAAClF;;;IACjCuM,oBAAkB,AAACnI,4CAAI,AAACsB,gDAAQuF,4CAAWX,KAAK+B;AADtD,AAEE,0KAAA,2CAAA,oDAAA,qFAAA,kEAAA,iGAAA,qEAAA,kGAAA,gEAAA,8FAAA,/zBAACG,6EAAOD,kBAAkBD,oyBAI6BV;;;AAP3D,CAAA,4EAAA,5EAAMG;;AAAN;AAAA,CAAA,sEAAA,WAAAG,jFAAMH;AAAN,AAAA,IAAAI,WAAA,AAAAxR,gBAAAuR;IAAAA,eAAA,AAAAtR,eAAAsR;IAAAE,WAAA,AAAAzR,gBAAAuR;IAAAA,eAAA,AAAAtR,eAAAsR;AAAA,AAAA,IAAAnR,qBAAA;AAAA,AAAA,OAAAA,wDAAAoR,SAAAC,SAAAF;;;AAAA,AAWA,2CAAA,3CAAMO,8FAASvF,KAAKjM;AAApB,AAAA,0FAAA,8EAAA,mFAAA,+IAAA,gGAAA,mFAAA,7OAE2B,4CAAKiM,2RAEJ,oRAAA,WAAAwF,/RAACvO,oIAAY,AAACwO,oIAAY1R;AAA1B,AAAkC,yDAAAyR,iBAAA,nEAACE;iBAJ/D;;AAOA,wDAAA,xDAAMC,wHAAsBC;AAA5B,AACE,IAAAC,aAAmBD;WAAnB,AAAAtS,4CAAAuS,WAAA,IAAA,lEAAO7F;YAAP,AAAA1M,4CAAAuS,WAAA,IAAA,nEAAY9R;AAAZ,AAAA,0FAAA,6EAAA,mFAAA,gFAAA,8EAAA,mFAAA,oJAAA,mFAAA,+EAAA,mGAAA,mFAAA,iFAAA,mFAAA,9jBAI0B,4CAAKiM,smBAIJ,AAAC3I,8IAAsBtD;;AAEpD,AAAA,4CAAA,oDAAAlB,hGAAMiT;AAAN,AAAA,IAAAhT,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAgT,+EAAA,CAAA,UAAA,MAAA7S;;;AAAA,AAAA,CAAA,iFAAA,kBAAA8S,nGAAMD,4FAAUK;AAAhB,AAAA,IAAAH,aAAAD;iBAAA,AAAAzS,4CAAA0S,WAAA,IAAA,xEAA0BI;AAA1B,AACE,GAAI,6BAAA,5BAAO,AAAC7M,gBAAM4M;AAAlB,0FAAA,+EAAA;;AAEE,IAAMC,iBAAW,iBAAApI,mBAAIoI;AAAJ,AAAA,oBAAApI;AAAAA;;AAAe,wCAAA,jCAAClF;;;IAC3BgF,cAAM,CAAG,AAACvE,gBAAM4M,UAAQC;IACxBC,iBAAe,AAACnJ,4CAAI,WAAAoJ;AAAA,AAAA,IAAAC,aAAAD;WAAA,AAAAhT,4CAAAiT,WAAA,IAAA,lEAAMvG;YAAN,AAAA1M,4CAAAiT,WAAA,IAAA,nEAAWxS;AAAX,AAAmB,OAACwR,yCAAQvF,KAAKjM;GAAQ,AAACoI,6CAAKiK,eAAWD;AAFpF,AAGE,6DAAA,mFAAA,+EAAA,uKAAA,wLAAA,vjBAACpQ,8TAEOsQ,oJACC,eAAA,gFAAA,7FAAIvI;;;;AATnB,CAAA,oEAAA,pEAAMgI;;AAAN;AAAA,CAAA,8DAAA,WAAAG,zEAAMH;AAAN,AAAA,IAAAI,WAAA,AAAAzS,gBAAAwS;IAAAA,eAAA,AAAAvS,eAAAuS;AAAA,AAAA,IAAApS,qBAAA;AAAA,AAAA,OAAAA,wDAAAqS,SAAAD;;;AAAA,AAYA,oDAAA,pDAAMO,gHAAkBL,OAAO/C;AAA/B,AACE,IAAM+B,YAAU,AAACsB,gCAAuBrD;IAClCsD,uBAAe,GAAK,AAAC9K,uBAAOuJ;IAC5BwB,gBAAc,EAAA,wCAAA,mFAAA,yaAAA,jiBAAQ,6BAAA,5BAAO,AAACpN,gBAAM4M,0KACN,+CAAA,mFAAA,lIAACpQ,mPAAyC,AAACmH,4CAAIyI,sDAAqBQ;IAClGS,wBAAsB,wBAAA,mFAAA,kJAAA,3PAAIF,kLAAgC,AAAC7B,kDAAiBzB,IAAI+B;oBAJtF,mFAAA,nGAKM5D,sKAA4B,AAACjK,oDAAmB8L;AALtD,AAME,uDAAA,hDAACnJ,mIAAgB0M,cAAcC,sBAAsBrF;;AAIzD,8CAAA,9CAAMsF,oGAAY9S;AAAlB,AACE,IAAMqN,iBAAe,AAAC2F,4CAAgBhT;IAAtC+S,aACwB,AAAC/E,wCAA+BX;UADxD,AAAA9N,4CAAAwT,WAAA,IAAA,jEACOE;YADP,AAAA1T,4CAAAwT,WAAA,IAAA,nEACW3H;YADX,AAAA7L,4CAAAwT,WAAA,IAAA,nEACiB9F;IACXiG,yBAAiB,EAAA,GAAA,UAAA,SAAA,EAAA,EAAA,CAAA,4CAAA,mBAAA,CAAAC,gCAAA,sCAAA,KAAA,OAAA,zKAA8BnT,uBAAAA,gGAAAA;IAC/CoT,cAAY,8IAAA,9IAAC7E,6EAAOlB;IACpB+E,SAAO,AAACiB,gDAAoBrT,MAAMiN;IAClC2F,gBAAc,AAACU,+EAASlB,yDAAO,0BAAA,IAAA,5BAAIc;+BALzC,3BAMMK;AANN,AAMgC,OAACd,kDAAiBL,OAAOpS;;4BANzD,mFAAA,3GAOMwT,6LAA2C,AAAClQ,8IAAsBtD,MAAM4S,cAAcW;IACtFE,yBAAuB,0BAAA,mFAAA,qHAAA,oRAAA,pfAAIP,mVAGD,oDAAA,pDAAC/R,8CAAmBnB;AAXpD,AAAA,0FAAA,kFAAA,iGAcGwT,sBACAC,uBACAL;;AAIL,4CAAA,5CAAMM,gGAAU1T;AAAhB,AACE,OAAC2T,oIAAY,AAAC7N,2CAAU9F;;AAE1B,sDAAA,tDAAM4T,oHAAoBC;AAA1B,AACE,IAAA5J,mBAAI,AAAC6J,oDAAqBD;AAA1B,AAAA,oBAAA5J;AAAAA;;AACI,OAACnE,2CAAU,AAACiO,oDAAqBF;;;AAEvC,sDAAA,tDAAMG,oHAAoBH;AAA1B,AACE,IAAMI,SAAO,AAACF,oDAAqBF;AAAnC,AACE,GAAI,AAACK,yBAASD;AACZ,IAAMvM,iBAAe,AAACyM,yDAA0BN;AAAhD,AACE,OAACnL,2CAAUuL,OAAOvM;;AACpB,OAACT,2DAA0BgN;;;AAEjC,oDAAA,pDAAMG,gHAAkBP;AAAxB,AACE,IAAA1J,qBAAc,AAACkK,kDAAmBR;AAAlC,AAAA,oBAAA1J;AAAA,WAAAA,PAASzH;AAAT,AACE,GAAI,6CAAA,7CAAC4R,qGAAU5R;AACb,OAACsR,oDAAmBH;;AACpBnR;;;AAHJ;;;AAOF,4CAAA,5CAAM6R,gGAAUvU;AAAhB,AACE,oBACE,iDAAA,jDAACwU,oHAA4BxU,MAAMyU;AAAM,OAAC1Q;;AAD5C,oBAEE,iDAAA,jDAACyQ,sHAA6BxU,MAAM0U;AAAO,OAAC1Q,wCAAOhE;;AAFrD,oBAGE,iDAAA,jDAACwU,2HAA+BxU,MAAM2U;AAAS,OAAC/P,0CAAS5E;;AAH3D,oBAIE,iDAAA,jDAACwU,2HAA+BxU,MAAM4U;AAAS,OAACtQ,0CAAStE;;AAJ3D,oBAKE,iDAAA,jDAACwU,4HAAgCxU,MAAM6U;AAAU,OAAC3Q,2CAAUlE;;AAL9D,oBAME,iDAAA,jDAACwU,0HAA+BxU,MAAM8U;AAAS,OAAC1Q,0CAASpE;;AAN3D,oBAOE,iDAAA,jDAACwU,+HAAiCxU,MAAM+U;AAAyB,OAACjC,4CAAW9S;;AAP/E,oBAQE,iDAAA,jDAACwU,sHAA6BxU,MAAMgV;AAAY,OAAC9G,mDAAkBlO;;AARrE,oBASE,iDAAA,jDAACwU,8HAAiCxU,MAAMiV;AAAgB,OAAClJ,4CAAW/L;;AATtE;;;;;;;;;;;AAaF,AAYA,2CAAA,3CAAMO;AAAN,AACE,GAAI,qDAAA,pDAAM2U;wxJA1aNxT,+IAIAO,8QAGAG,mLAIAU,/tDAGAE,0/DAGAI,9iEAGAG,28DAIAI,9kCAKAE,q0CAGAE,xiDAIAC,/iBAGAE,gSAGAE,s4DAGAE,hwDAWAM,oOAqBAkB,o/CAKAE,zxEAGAE,2mBAOAM,2hBASAS,ieAKAE,lzCA+BAuB,yvDAkBAM,3kBAGAK,4QAwBAqB,pOAKAG,qWAKAI,gGAWAY,5CAMAE,18BAkBAc,9TAGAG,uxBAKAI,lJAQAK,/iBASAS,ulBAKAM,5TAGAE,v0BAGAE,orBAaAO,i/CAMAC,hzBASAY,3tCASAW,61CAIAG,3yCAWAU,8rBAOAI,wnCAWAG,nuDAYAU,kzCAWAK,v8BAqBAY,/kBAGAE,m5DAIAI,n9BAOAI,1qBAQAG,5jIA4BF,CAAMW,mDAAY,AAAAC,uCAAA,CAAA,sEAAA,8EAAA,kFAAA,0DAAA,2FAAA,6EAAA,2DAAA,wEAAA,wDAAA,0DAAA,yEAAA,yDAAA,0DAAA,wEAAA,kEAAA,qDAAA,2EAAA,0DAAA,wDAAA,2EAAA,+DAAA,4EAAA,2GAAA,iFAAA,2FAAA,0EAAA,iEAAA,qDAAA,wFAAA,sEAAA,oEAAA,oDAAA,sEAAA,4DAAA,wDAAA,+DAAA,wEAAA,qDAAA,8DAAA,gEAAA,6EAAA,8DAAA,4DAAA,4EAAA,mEAAA,gFAAA,8EAAA,0DAAA,iDAAA,sDAAA,yDAAA,8EAAA;;AADpB;;AAEAD","names",["var_args","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","devtools.formatters.markup/print-with","p__19633","vec__19634","cljs.core.nth","seq19629","G__19630","cljs.core/first","cljs.core/next","G__19631","G__19632","self__5711__auto__","method","value","tag","max-level","job-fn","G__19637","G__19638","G__19639","devtools.formatters.markup/get-markup-db","*print-level*-orig-val__19640","*print-level*-temp-val__19641","cljs.core/*print-level*","devtools.formatters.markup/print-via-writer","p__19645","vec__19646","seq19642","G__19643","G__19644","devtools.formatters.markup.print_with","devtools.formatters.printing/managed-print-via-writer","devtools.formatters.markup/print-via-protocol","p__19652","vec__19653","seq19649","G__19650","G__19651","devtools.formatters.printing/managed-print-via-protocol","devtools.formatters.markup/<expandable>","seq19656","self__5712__auto__","cljs.core/seq","children","inner-markup","cljs.core.concat","devtools.formatters.markup/<raw-surrogate>","seq19657","args","devtools.formatters.markup/<surrogate>","p__19661","vec__19662","seq19660","object","header","body","start-index","devtools.formatters.markup._LT_expandable_GT_","devtools.formatters.markup._LT_raw_surrogate_GT_","devtools.formatters.markup/<reference>","seq19665","devtools.formatters.markup/<reference-surrogate>","seq19666","devtools.formatters.markup._LT_reference_GT_","cljs.core.apply","devtools.formatters.markup/<circular-reference>","seq19667","devtools.formatters.markup._LT_reference_surrogate_GT_","devtools.formatters.markup/<native-reference>","reference","p1__19668#","devtools.formatters.state/set-prevent-recursion","devtools.formatters.markup/<header-expander>","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<cljs-land>","seq19669","devtools.formatters.markup/<nil>","devtools.formatters.markup/<bool>","bool","devtools.formatters.markup/<keyword>","keyword","devtools.formatters.markup/<symbol>","symbol","devtools.formatters.markup/<number>","number","js/isFinite","cljs.core/integer?","js/isNaN","cljs.core.pr_str","devtools.formatters.markup/<string>","string","dq","devtools.formatters.helpers/pref","re-nl","js/RegExp","nl-marker","inline-string","max-inline-string-size","quote-string","s","should-abbreviate?","cljs.core/count","abbreviated-string","devtools.formatters.helpers/abbreviate-long-string","abbreviated-string-markup","string-with-nl-markers","details-markup","devtools.formatters.markup/<preview>","devtools.formatters.markup.print_via_writer","devtools.formatters.markup/<body>","markup","devtools.formatters.markup/<aligned-body>","markups-lists","prepend-li-tag","line","aligned-lines","cljs.core.keep","devtools.formatters.markup/<standard-body>","p__19672","vec__19673","seq19670","G__19671","no-margin?","ol-tag","li-tag","lines-markups","devtools.formatters.markup/<standard-body-reference>","o","devtools.formatters.markup/<index>","devtools.formatters.markup/body-line","index","index-markup","value-markup","devtools.formatters.markup/prepare-body-lines","data","starting-index","work","lines","cljs.core/empty?","cljs.core/rest","cljs.core.conj","devtools.formatters.markup/body-lines","seq","max-number-body-items","chunk","cljs.core.take","rest","cljs.core.drop","continue?","more-label-markup","more-markup","devtools.formatters.markup/<details>","devtools.formatters.state/push-object-to-current-history!","cljs.core/with-meta","has-continuation?","body-markup","devtools.formatters.markup._LT_standard_body_GT_","devtools.formatters.markup/<list-details>","items","_opts","cljs.core.map","cljs.core/list","devtools.formatters.markup/<list>","p__19681","vec__19682","seq19678","G__19679","G__19680","max-count","opts","items-markups","more-count","more?","separator","or__5002__auto__","more-symbol","temp__5802__auto__","cljs.core/fn?","devtools.formatters.helpers/get-more-marker","preview-markup","cljs.core.interpose","default-details-fn","cljs.core.partial","devtools.formatters.markup/<meta>","metadata","body-fn","devtools.formatters.markup/<meta-wrapper>","seq19685","G__19686","js/Error","devtools.formatters.markup/<function-details>","fn-obj","ns","_name","arities","prefix","devtools.formatters.helpers/wrap-arity","make-arity-markup-list","arity","arities-markupts-lists","ns-markups-list","native-markups-list","devtools.formatters.markup/<arities>","multi-arity?","devtools.formatters.markup/<function>","vec__19687","name","devtools.munging/parse-fn-info","lambda?","spacer-symbol","rest-symbol","multi-arity-symbol","devtools.munging/extract-arities","arities-markup","name-markup","icon-markup","prefix-markup","details-fn","devtools.formatters.markup/<type-basis-item>","basis-item","cljs.core/name","devtools.formatters.markup/<type-basis>","basis","item-markups","children-markups","devtools.formatters.markup/<type-details>","constructor-fn","ns-markup","basis-markup","native-markup","devtools.formatters.markup/<type>","p__19692","vec__19693","seq19690","G__19691","header-tag","vec__19696","devtools.munging/parse-constructor-info","details-markup-fn","devtools.formatters.markup/<standalone-type>","p__19701","vec__19702","seq19699","G__19700","devtools.formatters.markup._LT_type_GT_","devtools.formatters.markup/<protocol-method-arity>","arity-fn","devtools.formatters.markup/<protocol-method-arities-details>","fns","devtools.formatters.markup/<protocol-method-arities>","p__19707","vec__19708","seq19705","G__19706","max-fns","aritites-markups","devtools.formatters.markup/<protocol-method>","devtools.formatters.markup/<protocol-details>","obj","selector","_fast?","protocol-obj","devtools.munging/get-protocol-object","methods","devtools.munging/collect-protocol-methods","methods-markups","p__19711","vec__19712","methods-markups-lists","devtools.formatters.markup/<protocol>","p__19718","vec__19719","seq19715","G__19716","G__19717","protocol","map__19722","cljs.core/--destructure-map","cljs.core.get","fast?","devtools.formatters.markup/<more-protocols>","fake-protocol","devtools.formatters.markup._LT_protocol_GT_","devtools.formatters.markup/<protocols-list>","p__19726","vec__19727","seq19723","G__19724","G__19725","protocols","max-protocols","protocols-markups","devtools.formatters.markup._LT_list_GT_","devtools.formatters.markup/<field>","p1__19730#","devtools.formatters.markup._LT_surrogate_GT_","devtools.formatters.state/set-managed-print-level","devtools.formatters.markup/<fields-details-row>","field","vec__19731","devtools.formatters.markup/<fields>","p__19738","vec__19739","seq19736","G__19737","fields","max-fields","fields-markups","p__19742","vec__19743","devtools.formatters.markup/<fields-details>","devtools.munging/scan-protocols","has-protocols?","fields-markup","protocols-list-markup","devtools.formatters.markup/<instance>","vec__19746","devtools.formatters.helpers/get-constructor","_ns","custom-printing?","cljs.core/PROTOCOL_SENTINEL","type-markup","devtools.formatters.helpers/fetch-fields-values","devtools.formatters.markup._LT_fields_GT_","fields-details-markup-fn","fields-preview-markup","custom-printing-markup","devtools.formatters.markup/<header>","devtools.formatters.markup._LT_cljs_land_GT_","devtools.formatters.markup/<surrogate-header>","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-target","devtools.formatters.markup/<surrogate-target>","target","cljs.core/seqable?","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.markup/<surrogate-body>","devtools.formatters.templating/get-surrogate-body","cljs.core._EQ_","devtools.formatters.markup/<atomic>","devtools.formatters.helpers/should-render?","cljs.core/nil?","devtools.formatters.helpers/bool?","cljs.core/string?","cljs.core/number?","cljs.core/keyword?","cljs.core/symbol?","devtools.formatters.helpers/should-render-instance?","devtools.formatters.helpers/cljs-type?","devtools.formatters.helpers/cljs-function?","devtools.formatters.markup/*markup-db*","cljs.core/PersistentHashMap"]],"~:used-vars",["^J",["~$cljs.core/--destructure-map","~$cljs.core/keep","~$devtools.formatters.markup/<type-basis-item>","~$devtools.formatters.markup/<cljs-land>","~$devtools.formatters.printing/managed-print-via-protocol","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$cljs.core/PersistentHashMap","~$devtools.formatters.markup/<standalone-type>","~$cljs.core/*print-level*","~$js/RegExp","~$cljs.core/keyword?","~$devtools.formatters.markup/<string>","~$devtools.formatters.markup/body-lines","~$devtools.formatters.markup/<atomic>","~$devtools.formatters.markup/body-line","~$devtools.formatters.markup/<fields-details>","~$devtools.formatters.markup/<surrogate-body>","~$devtools.formatters.markup/<header-expander>","~$cljs.core/=","~$devtools.formatters.printing/managed-print-via-writer","~$devtools.formatters.markup/<type-basis>","~$devtools.formatters.markup/<fields-details-row>","~$devtools.formatters.markup/<standard-body>","~$cljs.core/partial","~$devtools.formatters.markup/<arities>","~$devtools.formatters.helpers/abbreviate-long-string","~$devtools.formatters.helpers/should-render-instance?","~$cljs.core/IndexedSeq","~$devtools.munging/get-protocol-object","~$devtools.formatters.helpers/cljs-type?","~$cljs.core/count","~$cljs.core/seq","~$cljs.core/apply","~$devtools.formatters.markup/<preview>","~$cljs.core/take","~$devtools.formatters.templating/get-surrogate-start-index","~$devtools.formatters.helpers/cljs-function?","~$devtools.formatters.markup/<surrogate>","~$cljs.core/string?","~$js/isFinite","~$devtools.formatters.markup/get-markup-db","~$cljs.core/concat","~$cljs.core/pr-str","~$devtools.formatters.markup/<symbol>","~$devtools.formatters.markup/<protocol-method-arities-details>","~$devtools.formatters.markup/<standard-body-reference>","~$devtools.formatters.markup/<type-details>","~$devtools.formatters.markup/<protocol-method-arity>","~$devtools.formatters.markup/<type>","~$devtools.formatters.markup/<surrogate-header>","~$cljs.core/empty?","~$devtools.munging/parse-constructor-info","~$devtools.formatters.state/reset-depth-limits","~$cljs.core/conj","~$devtools.munging/parse-fn-info","~$devtools.formatters.markup/<more-protocols>","~$cljs.core/with-meta","~$devtools.formatters.markup/*markup-db*","~$devtools.formatters.markup/<protocols-list>","~$cljs.core/map","~$devtools.formatters.markup/<index>","~$cljs.core/fn?","~$devtools.formatters.markup/<protocol>","~$devtools.formatters.templating/get-surrogate-target","~$devtools.formatters.markup/<instance>","~$devtools.formatters.helpers/bool?","~$devtools.formatters.state/set-prevent-recursion","~$devtools.formatters.markup/<meta>","~$cljs.core/number?","~$devtools.munging/extract-arities","~$devtools.formatters.helpers/get-constructor","~$cljs.core/get","~$cljs.core/integer?","~$devtools.formatters.state/push-object-to-current-history!","~$devtools.formatters.markup/<reference>","~$devtools.formatters.helpers/pref","~$devtools.formatters.markup/<function-details>","~$js/isNaN","~$devtools.formatters.markup/<bool>","~$devtools.formatters.markup/print-with","~$devtools.formatters.helpers/wrap-arity","~$devtools.formatters.markup/print-via-protocol","~$cljs.core/nil?","~$devtools.formatters.markup/<function>","~$cljs.core/nth","~$devtools.munging/scan-protocols","~$devtools.formatters.markup/<nil>","~$devtools.formatters.markup/<circular-reference>","~$devtools.formatters.markup/<header>","~$devtools.formatters.markup/<protocol-method>","~$devtools.formatters.markup/<expandable>","~$cljs.core/next","~$devtools.formatters.markup/<body>","~$devtools.formatters.markup/<fields>","~$cljs.core/not","~$devtools.formatters.helpers/get-more-marker","~$devtools.formatters.markup/<surrogate-target>","~$cljs.core/interpose","~$devtools.formatters.templating/get-surrogate-header","~$devtools.formatters.markup/prepare-body-lines","~$cljs.core/seqable?","~$cljs.core/symbol?","~$devtools.formatters.helpers/fetch-fields-values","~$devtools.formatters.markup/<protocol-details>","~$devtools.formatters.markup/<native-reference>","~$devtools.formatters.state/set-managed-print-level","~$devtools.formatters.markup/<number>","~$devtools.formatters.markup/<reference-surrogate>","~$devtools.formatters.markup/<keyword>","~$devtools.formatters.markup/<list>","~$devtools.formatters.markup/<meta-wrapper>","~$cljs.core/first","~$devtools.formatters.markup/<protocol-method-arities>","~$devtools.formatters.markup/<raw-surrogate>","~$devtools.formatters.markup/<list-details>","~$devtools.formatters.templating/get-surrogate-body","~$cljs.core/list","~$devtools.formatters.markup/print-via-writer","~$devtools.formatters.markup/<aligned-body>","~$cljs.core/name","~$devtools.munging/collect-protocol-methods","~$js/Error","~$devtools.formatters.helpers/should-render?","~$cljs.core/drop","~$devtools.formatters.markup/<details>","~$devtools.formatters.markup/<field>"]]],"~:cache-keys",["~#cmap",[["^1U","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^11","~$goog.dom.HtmlElement"]]],["^1U","devtools/formatters/printing.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","~$devtools.prefs","~$devtools.format","~$devtools.protocols","^X","^V"]]],["^1U","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1U","devtools/formatters/markup.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","^V","^W","^X","^Y","^Z"]]],["^1U","devtools/formatters/helpers.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","^59","^Z","^5:","^5;"]]],["^1U","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5=","^5>","~$goog.asserts","^5<","^5?","^5@"]]],["^1U","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5A","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^5<"]]],["^1U","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5A"]]],["^1U","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^5=","~$goog.reflect","^5<"]]],["^1U","devtools/formatters/templating.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","~$clojure.walk","~$devtools.util","^5;","^V","^X","~$clojure.string"]]],["^1U","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5=","^5<"]]],["^1U","cljs/pprint.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","^5L","~$goog.string","~$goog.string.StringBuffer"]]],["^1U","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5A"]]],"~:SHADOW-TIMESTAMP",[1712152237000,1712152237000,1707229049000],["^1U","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5A","^5I"]]],["^1U","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5A","~$goog.fs.blob","^5B","~$goog.html.SafeScript","~$goog.html.trustedtypes","^5D","^5E"]]],["^1U","devtools/version.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10"]]],["^1U","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5D","~$goog.html.SafeUrl","^5E","^5A","^5<"]]],["^1U","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5A","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^5Q","~$goog.html.SafeStyle","^5S","^5C","~$goog.html.uncheckedconversions","^5D","^5<"]]],["^1U","devtools/prefs.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","~$devtools.defaults"]]],["^1U","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","~$goog.dom.TagName","^5A","~$goog.dom.element"]]],["^1U","clojure/walk.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10"]]],["^1U","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5D","^5Q","^5X","~$goog.html.SafeStyleSheet","^5S","^5[","^5C","^5E","^5A","^5F","~$goog.array","~$goog.object","^5<","~$goog.dom.tags","^5R"]]],["^1U","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^63"]]],["^1U","devtools/munging.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","^5L","~$devtools.context","^63","^5N"]]],["^1U","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^62","^5<","^5="]]],["^1U","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1U","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^62","^5A","~$goog.collections.maps","^5M","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1U","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5>"]]],["^1U","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",[]]],["^1U","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^62","^63"]]],["^1U","clojure/string.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","^5M","^5N"]]],["^1U","devtools/formatters/state.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10"]]],["^1U","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","~$goog.dom.safe","^5Y","^5D","^5<"]]],["^1U","clojure/data.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","~$clojure.set"]]],["^1U","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5<","^5@"]]],["^1U","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","~$goog.flags"]]],["^1U","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^67","^5["]]],["^1U","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5A","^5W","^5Q","^5X","^61","^5S","^5C","^5D","^5<"]]],["^1U","devtools/defaults.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10"]]],["^1U","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11"]]],["^1U","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","~$goog.math.Long","~$goog.math.Integer","^5M","^63","^62","~$goog.Uri","^5N"]]],["^1U","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5D","^5E","^5R","^5A"]]],["^1U","devtools/context.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10"]]],["^1U","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5D","^5X","^5E","^63","^5A","^5<"]]],["^1U","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5I"]]],["^1U","devtools/format.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","^65"]]],["^1U","clojure/set.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10"]]],["^1U","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5A","^5M"]]],["^1U","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^5A","^5E"]]],["^1U","devtools/protocols.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10"]]],["^1U","devtools/util.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^54",["^ ","^55",null,"^56",["^J",[]],"^57",["^11","^10","~$goog.userAgent","~$clojure.data","~$devtools.version","^65","^?","^59"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/nyemi/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/formatters/markup.clj",1707229057000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/munging.clj",1707229057000,"jar:file:/C:/Users/nyemi/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/version.clj",1707229057000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/pprint.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/oops.clj",1707229057000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/prefs.clj",1707229057000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/compiler.clj",1707229057000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1707229057000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1707229049000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H"],"^I",["^J",[]],"^K",["^ ","^G",["^ ","^L",["^M",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","^N","^O","^P","^H","^Q",true]],"^N","^H","^R",["^ "],"^T",null,"^U",["^ ","^V","^V","^W","^W","^X","^X","^Y","^Y","^Z","^Z","^[","^Z","^10","^10","^11","^11"],"^12",["^J",["^13","^14"]],"~:shadow/js-access-global",["^J",["isNaN","RegExp","isFinite","Error"]],"^15",["^ ","^16","^V","^17","^V","^18","^X","^19","^V","^1:","^V","^1;","^Y","^1<","^V","^1=","^W","^1>","^V","^1?","^V","^1@","^V","^1A","^V","^1B","^V","^1C","^W","^1D","^V","^1E","^Y","^1F","^X","^1G","^Y","^1H","^X","^1I","^Y","^1J","^V","^1K","^V","^1L","^V"],"~:defs",["^ ","~$<aligned-body>",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",121,"^8",7,"^9",121,"^:",21,"^L",["^M",["~$quote",["^M",[["~$markups-lists"]]]]]],"^N","^4V","^6","devtools/formatters/markup.cljs","^:",21,"~:method-params",["^M",[["^7G"]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^8",1,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["^M",["~$defn","^7D",["^7G"],["^M",["~$let",["~$prepend-li-tag",["^M",["~$fn",["~$line"],["^M",["~$if","^7S",["^M",["~$concat",["~:aligned-li-tag"],"^7S"]]]]]],"~$aligned-lines",["^M",["~$keep","^7Q","^7G"]]],["^M",["~$<body>",["^M",["^7U",["~:standard-ol-no-margin-tag"],"^7W"]]]]]]]]],"~:variadic?",false,"^7",121,"~:ret-tag","~$cljs.core/IVector","^9",121,"~:max-fixed-arity",1,"~:fn-var",true,"^L",["^M",["^7F",["^M",[["^7G"]]]]]],"~$<native-reference>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",56,"^8",7,"^9",56,"^:",25,"^L",["^M",["^7F",["^M",[["~$object"]]]]]],"^N","^4H","^6","devtools/formatters/markup.cljs","^:",25,"^7H",["^M",[["^85"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^84",["^85"],["^M",["^7P",["~$reference",["^M",["~$<reference>","^85",["^M",["~$fn*",["~$p1__19668#"],["^M",["^1H","^89",true]]]]]]],["~:native-reference-wrapper-tag","~:native-reference-background",["~:native-reference-tag","^86"]]]]]]],"^7[",false,"^7",56,"^80","^81","^9",56,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^85"]]]]]],"~$<reference-surrogate>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",50,"^8",7,"^9",50,"^:",28,"^L",["^M",["^7F",["^M",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^7[",true,"~:fixed-arity",0,"^82",0,"^7H",[["^M",["^8>"]]],"^L",["^M",[["~$&","^8>"]]],"^7J",["^M",[null]]]],"^N","^4K","^6","devtools/formatters/markup.cljs","^:",28,"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^8>"]]],"^L",["^M",[["~$&","^8>"]]],"^7J",["^M",[null]]],"^7H",[["^M",["^8>"]]],"^7I",null,"^8@",0,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^8=",["~$&","^8>"],["^M",["^87",["^M",["~$apply","~$<surrogate>","^8>"]]]]]]],"^7[",true,"~:methods",[["^ ","^8@",0,"^7[",true,"~:tag","~$cljs.core/LazySeq"]],"^7",50,"^80","~$any","^9",50,"^82",0,"^83",true,"^L",["^M",[["~$&","^8>"]]]],"~$<keyword>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",75,"^8",7,"^9",75,"^:",16,"^L",["^M",["^7F",["^M",[["~$keyword"]]]]]],"^N","^4L","^6","devtools/formatters/markup.cljs","^:",16,"^7H",["^M",[["^8H"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^8G",["^8H"],["~:keyword-tag",["^M",["~$str","^8H"]]]]]],"^7[",false,"^7",75,"^80","^81","^9",75,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^8H"]]]]]],"~$print-via-writer",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",28,"^8",7,"^9",28,"^:",23,"^L",["^M",["^7F",["^M",[["~$value","~$tag","~$&",["~$max-level"]]]]]],"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^8L","^8M",["^8N"]]]],"^L",["^M",[["^8L","^8M","~$&",["^8N"]]]],"^7J",["^M",[null]]]],"^N","^4U","^6","devtools/formatters/markup.cljs","^:",23,"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^8L","^8M",["^8N"]]]],"^L",["^M",[["^8L","^8M","~$&",["^8N"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^8L","^8M",["^8N"]]]],"^7I",null,"^8@",2,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^8K",["^8L","^8M","~$&",["^8N"]],["^M",["~$print-with","^1=","^8L","^8M","^8N"]]]]],"^7[",true,"^8C",[["^ ","^8@",2,"^7[",true,"^8D",["^J",[null,"^8F"]]]],"^7",28,"^80","^8F","^9",28,"^82",2,"^83",true,"^L",["^M",[["^8L","^8M","~$&",["^8N"]]]]],"~$<protocol-method-arities>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",299,"^8",7,"^9",299,"^:",32,"^L",["^M",["^7F",["^M",[["~$fns","~$&",["~$max-fns"]]]]]],"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^8Q",["^8R"]]]],"^L",["^M",[["^8Q","~$&",["^8R"]]]],"^7J",["^M",[null]]]],"^N","^4P","^6","devtools/formatters/markup.cljs","^:",32,"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^8Q",["^8R"]]]],"^L",["^M",[["^8Q","~$&",["^8R"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^8Q",["^8R"]]]],"^7I",null,"^8@",1,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^8P",["^8Q","~$&",["^8R"]],["^M",["^7P",["^8R",["^M",["~$or","^8R",["^M",["^1>","~:max-protocol-method-arities-list"]]]],"~$more?",["^M",["~$>",["^M",["~$count","^8Q"]],"^8R"]],"~$aritites-markups",["^M",["~$map","~$<protocol-method-arity>",["^M",["~$take","^8R","^8Q"]]]],"~$preview-markup",["^M",["^7U",["~:protocol-method-arities-header-tag","~:protocol-method-arities-header-open-symbol"],["^M",["~$interpose","~:protocol-method-arities-list-header-separator","^8W"]],["^M",["^7T","^8U",["~:protocol-method-arities-more-symbol"]]],["~:protocol-method-arities-header-close-symbol"]]]],["^M",["^7T","^8U",["^M",["^7P",["~$details-markup-fn",["^M",["~$partial","~$<protocol-method-arities-details>","^8Q"]]],["^M",["^8=",null,"^8[","^96"]]]],"^8["]]]]]]],"^7[",true,"^8C",[["^ ","^8@",1,"^7[",true,"^8D","^8E"]],"^7",299,"^80","^8F","^9",299,"^82",1,"^83",true,"^L",["^M",[["^8Q","~$&",["^8R"]]]]],"~$<surrogate-header>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",416,"^8",7,"^9",416,"^:",25,"^L",["^M",["^7F",["^M",[["~$surrogate"]]]]]],"^N","^3=","^6","devtools/formatters/markup.cljs","^:",25,"^7H",["^M",[["^9:"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^99",["^9:"],["^M",["^8S",["^M",["^1E","^9:"]],["^M",["~$<preview>",["^M",["^1G","^9:"]]]]]]]]],"^7[",false,"^7",416,"^80",["^J",[null,"^8F"]],"^9",416,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^9:"]]]]]],"~$<details>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",173,"^8",7,"^9",173,"^:",16,"^L",["^M",["^7F",["^M",[["^8L","~$starting-index"]]]]]],"^N","^50","^6","devtools/formatters/markup.cljs","^:",16,"^7H",["^M",[["^8L","^9="]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^9<",["^8L","^9="],["^M",["^3U",["^M",["~$with-meta","^8L",["^ ","~:index","^9="]]]]],["^M",["^7P",["~$has-continuation?",["^M",["~$pos?","^9="]],"~$body-markup",["^M",["~$<standard-body>",["^M",["~$body-lines","^8L","^9="]],"^9@"]]],["^M",["^7T","^9@","^9B",["^M",["^7Y","^9B"]]]]]]]]],"^7[",false,"^7",173,"^80","~$clj","^9",173,"^82",2,"^83",true,"^L",["^M",["^7F",["^M",[["^8L","^9="]]]]]],"~$<more-protocols>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",336,"^8",7,"^9",336,"^:",23,"^L",["^M",["^7F",["^M",[["~$more-count"]]]]]],"^N","^3C","^6","devtools/formatters/markup.cljs","^:",23,"^7H",["^M",[["^9G"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^9F",["^9G"],["^M",["^7P",["~$fake-protocol",["^ ","^N",["^M",["^1A","^9G"]]]],["^M",["~$<protocol>",null,"^9H","~:protocol-more-tag"]]]]]]],"^7[",false,"^7",336,"^80","^9E","^9",336,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^9G"]]]]]],"~$<field>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",351,"^8",7,"^9",351,"^:",14,"^L",["^M",["^7F",["^M",[["~$name","^8L"]]]]]],"^N","^51","^6","devtools/formatters/markup.cljs","^:",14,"^7H",["^M",[["^9L","^8L"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^9K",["^9L","^8L"],["~:header-field-tag",["~:header-field-name-tag",["^M",["^8J","^9L"]]],"~:header-field-value-spacer",["~:header-field-value-tag",["^M",["^87",["^M",["^8B","^8L"]],["^M",["^88",["~$p1__19730#"],["^M",["^18","^9Q",1]]]]]]],"~:header-field-separator"]]]],"^7[",false,"^7",351,"^80","^81","^9",351,"^82",2,"^83",true,"^L",["^M",["^7F",["^M",[["^9L","^8L"]]]]]],"~$<symbol>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",78,"^8",7,"^9",78,"^:",15,"^L",["^M",["^7F",["^M",[["~$symbol"]]]]]],"^N","^37","^6","devtools/formatters/markup.cljs","^:",15,"^7H",["^M",[["^9T"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^9S",["^9T"],["~:symbol-tag",["^M",["^8J","^9T"]]]]]],"^7[",false,"^7",78,"^80","^81","^9",78,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^9T"]]]]]],"~$<fields-details>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",381,"^8",7,"^9",381,"^:",23,"^L",["^M",["^7F",["^M",[["~$fields","~$obj"]]]]]],"^N","^2G","^6","devtools/formatters/markup.cljs","^:",23,"^7H",["^M",[["^9W","^9X"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^9V",["^9W","^9X"],["^M",["^7P",["~$protocols",["^M",["~$munging/scan-protocols","^9X"]],"~$has-protocols?",["^M",["~$not",["^M",["~$empty?","^9Y"]]]],"~$fields-markup",["^M",["~$if-not",["^M",["~$zero?",["^M",["^8V","^9W"]]]],["~:fields-icon",["^M",["^7U",["~:instance-body-fields-table-tag"],["^M",["^8X","~$<fields-details-row>","^9W"]]]]]]],"~$protocols-list-markup",["^M",["^7T","^9[",["~:protocols-icon",["^M",["~$<protocols-list>","^9X","^9Y"]]]]],"~$native-markup",["~:native-icon",["^M",["^84","^9X"]]]],["^M",["^7D",["^:2","^:8","^:;"]]]]]]]],"^7[",false,"^7",381,"^80","^81","^9",381,"^82",2,"^83",true,"^L",["^M",["^7F",["^M",[["^9W","^9X"]]]]]],"~$<atomic>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",435,"^8",7,"^9",435,"^:",15,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"^N","^2E","^6","devtools/formatters/markup.cljs","^:",15,"^7H",["^M",[["^8L"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^:=",["^8L"],["^M",["~$cond",["^M",["^17","~:render-nils","^8L","~$nil?"]],["^M",["~$<nil>"]],["^M",["^17","~:render-bools","^8L","^19"]],["^M",["~$<bool>","^8L"]],["^M",["^17","~:render-strings","^8L","~$string?"]],["^M",["~$<string>","^8L"]],["^M",["^17","~:render-numbers","^8L","~$number?"]],["^M",["~$<number>","^8L"]],["^M",["^17","~:render-keywords","^8L","~$keyword?"]],["^M",["^8G","^8L"]],["^M",["^17","~:render-symbols","^8L","~$symbol?"]],["^M",["^9S","^8L"]],["^M",["^17","~:render-instances","^8L","^1L"]],["^M",["~$<instance>","^8L"]],["^M",["^17","~:render-types","^8L","^1K"]],["^M",["~$<standalone-type>","^8L"]],["^M",["^17","~:render-functions","^8L","^1@"]],["^M",["~$<function>","^8L"]]]]]]],"^7[",false,"^7",435,"^80",["^J",["^9E","^81","^8E","~$clj-nil"]],"^9",435,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"^:F",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",92,"^8",7,"^9",92,"^:",15,"^L",["^M",["^7F",["^M",[["~$string"]]]]]],"^N","^2C","^6","devtools/formatters/markup.cljs","^:",15,"^7H",["^M",[["^:U"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^:F",["^:U"],["^M",["^7P",["~$dq",["^M",["^1>","~:dq"]],"~$re-nl",["^M",["~$js/RegExp.","\n","g"]],"~$nl-marker",["^M",["^1>","~:new-line-string-replacer"]],"~$inline-string",["^M",["~$.replace","^:U","^:X","^:Z"]],"~$max-inline-string-size",["^M",["~$+",["^M",["^1>","~:string-prefix-limit"]],["^M",["^1>","~:string-postfix-limit"]]]],"~$quote-string",["^M",["^7R",["~$s"],["^M",["^8J","^:V","~$s","^:V"]]]],"~$should-abbreviate?",["^M",["~$>",["^M",["^8V","^;0"]],"^;2"]]],["^M",["^7T","^;6",["^M",["^7P",["~$abbreviated-string",["^M",["^1J","^;0",["^M",["^1>","~:string-abbreviation-marker"]],["^M",["^1>","^;3"]],["^M",["^1>","^;4"]]]],"~$abbreviated-string-markup",["~:string-tag",["^M",["^;5","^;7"]]],"~$string-with-nl-markers",["^M",["^;1","^:U","^:X",["^M",["^8J","^:Z","\n"]]]],"~$details-markup",["~:expanded-string-tag","^;;"]],["^M",["^8=","^:U","^;9","^;<"]]]],["^;:",["^M",["^;5","^;0"]]]]]]]]]],"^7[",false,"^7",92,"^80","^9E","^9",92,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^:U"]]]]]],"^9C",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",128,"^8",7,"^9",128,"^:",22,"^L",["^M",["^7F",["^M",[["^7G","~$&",["~$no-margin?"]]]]]],"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^7G",["^;>"]]]],"^L",["^M",[["^7G","~$&",["^;>"]]]],"^7J",["^M",[null]]]],"^N","^2N","^6","devtools/formatters/markup.cljs","^:",22,"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^7G",["^;>"]]]],"^L",["^M",[["^7G","~$&",["^;>"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^7G",["^;>"]]]],"^7I",null,"^8@",1,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^9C",["^7G","~$&",["^;>"]],["^M",["^7P",["~$ol-tag",["^M",["^7T","^;>","^7Z","~:standard-ol-tag"]],"~$li-tag",["^M",["^7T","^;>","~:standard-li-no-margin-tag","~:standard-li-tag"]],"^7Q",["^M",["^7R",["^7S"],["^M",["^7T","^7S",["^M",["^7U",["^;A"],"^7S"]]]]]],"~$lines-markups",["^M",["^7X","^7Q","^7G"]]],["^M",["^7U",["^;?"],"^;D"]]]]]]],"^7[",true,"^8C",[["^ ","^8@",1,"^7[",true,"^8D","^8E"]],"^7",128,"^80","^8F","^9",128,"^82",1,"^83",true,"^L",["^M",[["^7G","~$&",["^;>"]]]]],"~$<type-basis>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",266,"^8",7,"^9",266,"^:",19,"^L",["^M",["^7F",["^M",[["~$basis"]]]]]],"^N","^2L","^6","devtools/formatters/markup.cljs","^:",19,"^7H",["^M",[["^;F"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^;E",["^;F"],["^M",["^7P",["~$item-markups",["^M",["^8X","~$<type-basis-item>","^;F"]],"~$children-markups",["^M",["^92","~:type-basis-item-separator","^;G"]]],["^M",["^7U",["~:type-basis-tag"],"^;I"]]]]]]],"^7[",false,"^7",266,"^80","^8E","^9",266,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^;F"]]]]]],"~$*markup-db*",["^ ","^5",["^ ","^6","devtools/formatters/markup.cljs","^7",449,"^8",16,"^9",449,"^:",27,"~:dynamic",true],"^N","^3E","^6","devtools/formatters/markup.cljs","^:",27,"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["~$def","^;L"]]],"^;M",true,"^7",449,"^9",449,"^8D","^8F"],"~$print-via-protocol",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",31,"^8",7,"^9",31,"^:",25,"^L",["^M",["^7F",["^M",[["^8L","^8M","~$&",["^8N"]]]]]],"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^8L","^8M",["^8N"]]]],"^L",["^M",[["^8L","^8M","~$&",["^8N"]]]],"^7J",["^M",[null]]]],"^N","^41","^6","devtools/formatters/markup.cljs","^:",25,"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^8L","^8M",["^8N"]]]],"^L",["^M",[["^8L","^8M","~$&",["^8N"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^8L","^8M",["^8N"]]]],"^7I",null,"^8@",2,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^;O",["^8L","^8M","~$&",["^8N"]],["^M",["^8O","^1C","^8L","^8M","^8N"]]]]],"^7[",true,"^8C",[["^ ","^8@",2,"^7[",true,"^8D",["^J",[null,"^8F"]]]],"^7",31,"^80","^8F","^9",31,"^82",2,"^83",true,"^L",["^M",[["^8L","^8M","~$&",["^8N"]]]]],"^8O",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^L",["^M",["^7F",["^M",[["~$method","^8L","^8M","~$&",["^8N"]]]]]],"^8?",["^ ","^7[",true,"^8@",3,"^82",3,"^7H",[["^M",["^;P","^8L","^8M",["^8N"]]]],"^L",["^M",[["^;P","^8L","^8M","~$&",["^8N"]]]],"^7J",["^M",[null]]]],"^N","^3[","^6","devtools/formatters/markup.cljs","^:",17,"^8?",["^ ","^7[",true,"^8@",3,"^82",3,"^7H",[["^M",["^;P","^8L","^8M",["^8N"]]]],"^L",["^M",[["^;P","^8L","^8M","~$&",["^8N"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^;P","^8L","^8M",["^8N"]]]],"^7I",null,"^8@",3,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^8O",["^;P","^8L","^8M","~$&",["^8N"]],["^M",["^7P",["~$job-fn",["^M",["^88",[],["^M",["^;P","^8L","^8M",["^M",["~$get-markup-db"]]]]]]],["^M",["^7T",["^M",["~$some?","^8N"]],["^M",["~$binding",["~$*print-level*",["^M",["~$inc","^8N"]]],["^M",["^;Q"]]]],["^M",["^;Q"]]]]]]]]],"^7[",true,"^8C",[["^ ","^8@",3,"^7[",true,"^8D",["^J",[null,"^8F"]]]],"^7",21,"^80","^8F","^9",21,"^82",3,"^83",true,"^L",["^M",[["^;P","^8L","^8M","~$&",["^8N"]]]]],"^:C",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",72,"^8",7,"^9",72,"^:",13,"^L",["^M",["^7F",["^M",[["~$bool"]]]]]],"^N","^3Z","^6","devtools/formatters/markup.cljs","^:",13,"^7H",["^M",[["^;W"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^:C",["^;W"],["~:bool-tag",["^M",["^8J","^;W"]]]]]],"^7[",false,"^7",72,"^80","^81","^9",72,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^;W"]]]]]],"^:Q",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",288,"^8",7,"^9",288,"^:",24,"^L",["^M",["^7F",["^M",[["~$constructor-fn","~$&",["~$header-tag"]]]]]],"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^;Y",["^;Z"]]]],"^L",["^M",[["^;Y","~$&",["^;Z"]]]],"^7J",["^M",[null]]]],"^N","^2?","^6","devtools/formatters/markup.cljs","^:",24,"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^;Y",["^;Z"]]]],"^L",["^M",[["^;Y","~$&",["^;Z"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^;Y",["^;Z"]]]],"^7I",null,"^8@",1,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^:Q",["^;Y","~$&",["^;Z"]],["~:standalone-type-tag",["^M",["~$<type>","^;Y","^;Z"]]]]]],"^7[",true,"^8C",[["^ ","^8@",1,"^7[",true,"^8D","^81"]],"^7",288,"^80","^8F","^9",288,"^82",1,"^83",true,"^L",["^M",[["^;Y","~$&",["^;Z"]]]]],"^9;",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",113,"^8",7,"^9",113,"^:",16,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"^N","^2Y","^6","devtools/formatters/markup.cljs","^:",16,"^7H",["^M",[["^8L"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^9;",["^8L"],["^M",["^8K","^8L","~:header-tag",["^M",["^1>","~:max-print-level"]]]]]]],"^7[",false,"^7",113,"^80",["^J",[null,"^8F"]],"^9",113,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"~$<header>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",413,"^8",7,"^9",413,"^:",15,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"^N","^48","^6","devtools/formatters/markup.cljs","^:",15,"^7H",["^M",[["^8L"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^<3",["^8L"],["^M",["~$<cljs-land>",["^M",["^9;","^8L"]]]]]]],"^7[",false,"^7",413,"^80","^8E","^9",413,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"~$<protocol-method>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",312,"^8",7,"^9",312,"^:",24,"^L",["^M",["^7F",["^M",[["^9L","~$arities"]]]]]],"^N","^49","^6","devtools/formatters/markup.cljs","^:",24,"^7H",["^M",[["^9L","^<6"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^<5",["^9L","^<6"],["~:protocol-method-tag","~:method-icon",["~:protocol-method-name-tag","^9L"],["^M",["^8P","^<6"]]]]]],"^7[",false,"^7",312,"^80","^81","^9",312,"^82",2,"^83",true,"^L",["^M",["^7F",["^M",[["^9L","^<6"]]]]]],"^<4",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",65,"^8",7,"^9",65,"^:",18,"^L",["^M",["^7F",["^M",[["~$&","~$children"]]]]],"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^<:"]]],"^L",["^M",[["~$&","^<:"]]],"^7J",["^M",[null]]]],"^N","^2:","^6","devtools/formatters/markup.cljs","^:",18,"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^<:"]]],"^L",["^M",[["~$&","^<:"]]],"^7J",["^M",[null]]],"^7H",[["^M",["^<:"]]],"^7I",null,"^8@",0,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^<4",["~$&","^<:"],["^M",["^7U",["~:cljs-land-tag"],"^<:"]]]]],"^7[",true,"^8C",[["^ ","^8@",0,"^7[",true,"^8D","^8E"]],"^7",65,"^80","^8F","^9",65,"^82",0,"^83",true,"^L",["^M",[["~$&","^<:"]]]],"^;H",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",263,"^8",7,"^9",263,"^:",24,"^L",["^M",["^7F",["^M",[["~$basis-item"]]]]]],"^N","^29","^6","devtools/formatters/markup.cljs","^:",24,"^7H",["^M",[["^<<"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^;H",["^<<"],["~:type-basis-item-tag",["^M",["^9L","^<<"]]]]]],"^7[",false,"^7",263,"^80","^81","^9",263,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^<<"]]]]]],"^98",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",296,"^8",7,"^9",296,"^:",40,"^L",["^M",["^7F",["^M",[["^8Q"]]]]]],"^N","^38","^6","devtools/formatters/markup.cljs","^:",40,"^7H",["^M",[["^8Q"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^98",["^8Q"],["^M",["^7D",["^M",["^8X","^8Y","^8Q"]]]]]]],"^7[",false,"^7",296,"^80","^81","^9",296,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^8Q"]]]]]],"^:7",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",358,"^8",7,"^9",358,"^:",27,"^L",["^M",["^7F",["^M",[["~$field"]]]]]],"^N","^2M","^6","devtools/formatters/markup.cljs","^:",27,"^7H",["^M",[["^<>"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^:7",["^<>"],["^M",["^7P",[["^9L","^8L"],"^<>"],["~:body-field-tr-tag",["~:body-field-td1-tag","~:body-field-symbol",["~:body-field-name-tag",["^M",["^8J","^9L"]]]],["~:body-field-td2-tag","~:body-field-value-spacer"],["~:body-field-td3-tag",["~:body-field-value-tag",["^M",["^8=","^8L"]]]]]]]]]],"^7[",false,"^7",358,"^80","^81","^9",358,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^<>"]]]]]],"~$<standard-body-reference>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",137,"^8",7,"^9",137,"^:",32,"^L",["^M",["^7F",["^M",[["~$o"]]]]]],"^N","^39","^6","devtools/formatters/markup.cljs","^:",32,"^7H",["^M",[["~$o"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^<G",["~$o"],["^M",["^9C",[[["^M",["^87","~$o"]]]]]]]]],"^7[",false,"^7",137,"^80","^8E","^9",137,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["~$o"]]]]]],"~$<surrogate-body>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",427,"^8",7,"^9",427,"^:",23,"^L",["^M",["^7F",["^M",[["^9:"]]]]]],"^N","^2H","^6","devtools/formatters/markup.cljs","^:",23,"^7H",["^M",[["^9:"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^<H",["^9:"],["^M",["~$if-let",["~$body",["^M",["^1;","^9:"]]],["^M",["^7T",["^M",["~$=","~:target","^<J"]],["^M",["~$<surrogate-target>","^9:"]],"^<J"]]]]]]],"^7[",false,"^7",427,"^80",["^J",["^9E","^8F","^:T"]],"^9",427,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^9:"]]]]]],"^;R",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",461,"^8",7,"^9",461,"^:",20,"^L",["^M",["^7F",["^M",[[]]]]]],"^N","^34","^6","devtools/formatters/markup.cljs","^:",20,"^7H",["^M",[[]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^;R",[],["^M",["^7T",["^M",["^:@","^;L"]],["^M",["~$set!","^;L",["^M",["^G"]]]]]],"^;L"]]],"^7[",false,"^7",461,"^80","^8F","^9",461,"^82",0,"^83",true,"^L",["^M",["^7F",["^M",[[]]]]]],"~$<expandable>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",36,"^8",7,"^9",36,"^:",19,"^L",["^M",["^7F",["^M",[["~$&","^<:"]]]]],"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^<:"]]],"^L",["^M",[["~$&","^<:"]]],"^7J",["^M",[null]]]],"^N","^4:","^6","devtools/formatters/markup.cljs","^:",19,"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^<:"]]],"^L",["^M",[["~$&","^<:"]]],"^7J",["^M",[null]]],"^7H",[["^M",["^<:"]]],"^7I",null,"^8@",0,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^<N",["~$&","^<:"],["^M",["^7P",["~$inner-markup",["^M",["^7U",["~:expandable-inner-tag"],"^<:"]]],["~:expandable-tag","~:expandable-symbol","^<O"]]]]]],"^7[",true,"^8C",[["^ ","^8@",0,"^7[",true,"^8D","^81"]],"^7",36,"^80","^8F","^9",36,"^82",0,"^83",true,"^L",["^M",[["~$&","^<:"]]]],"^<0",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",279,"^8",7,"^9",279,"^:",13,"^L",["^M",["^7F",["^M",[["^;Y","~$&",["^;Z"]]]]]],"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^;Y",["^;Z"]]]],"^L",["^M",[["^;Y","~$&",["^;Z"]]]],"^7J",["^M",[null]]]],"^N","^3<","^6","devtools/formatters/markup.cljs","^:",13,"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^;Y",["^;Z"]]]],"^L",["^M",[["^;Y","~$&",["^;Z"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^;Y",["^;Z"]]]],"^7I",null,"^8@",1,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^<0",["^;Y","~$&",["^;Z"]],["^M",["^7P",[["^1N","^9L","^;F"],["^M",["~$munging/parse-constructor-info","^;Y"]],"~$name-markup",["~:type-name-tag","^9L"],"^8[",[["^M",["^8S","^;Z","~:type-header-tag"]],"~:type-symbol","^<T"],"^96",["^M",["^97","~$<type-details>","^;Y","^1N","^9L","^;F"]]],["~:type-wrapper-tag","~:type-header-background",["~:type-ref-tag",["^M",["^8=","^;Y","^8[","^96"]]]]]]]]],"^7[",true,"^8C",[["^ ","^8@",1,"^7[",true,"^8D","^81"]],"^7",279,"^80","^8F","^9",279,"^82",1,"^83",true,"^L",["^M",[["^;Y","~$&",["^;Z"]]]]],"^8Y",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",293,"^8",7,"^9",293,"^:",30,"^L",["^M",["^7F",["^M",[["~$arity-fn"]]]]]],"^N","^3;","^6","devtools/formatters/markup.cljs","^:",30,"^7H",["^M",[["^=0"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^8Y",["^=0"],["^M",["^87","^=0"]]]]],"^7[",false,"^7",293,"^80","^8E","^9",293,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^=0"]]]]]],"~$<raw-surrogate>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",40,"^8",7,"^9",40,"^:",22,"^L",["^M",["^7F",["^M",[["~$&","^8>"]]]]],"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^8>"]]],"^L",["^M",[["~$&","^8>"]]],"^7J",["^M",[null]]]],"^N","^4Q","^6","devtools/formatters/markup.cljs","^:",22,"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^8>"]]],"^L",["^M",[["~$&","^8>"]]],"^7J",["^M",[null]]],"^7H",[["^M",["^8>"]]],"^7I",null,"^8@",0,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^=1",["~$&","^8>"],["^M",["^7U",["surrogate"],"^8>"]]]]],"^7[",true,"^8C",[["^ ","^8@",0,"^7[",true,"^8D","^8E"]],"^7",40,"^80","^8F","^9",40,"^82",0,"^83",true,"^L",["^M",[["~$&","^8>"]]]],"^<X",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",271,"^8",7,"^9",271,"^:",21,"^L",["^M",["^7F",["^M",[["^;Y","^1N","~$_name","^;F"]]]]]],"^N","^3:","^6","devtools/formatters/markup.cljs","^:",21,"^7H",["^M",[["^;Y","^1N","^=2","^;F"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^<X",["^;Y","^1N","^=2","^;F"],["^M",["^7P",["~$ns-markup",["^M",["^:3",["^M",["^:1","^1N"]],["~:ns-icon",["~:fn-ns-name-tag","^1N"]]]],"~$basis-markup",["^M",["^7T",["^M",["^:1","^;F"]],["~:empty-basis-symbol"],["~:basis-icon",["^M",["^;E","^;F"]]]]],"^:;",["^:<",["^M",["^84","^;Y"]]]],["^M",["^7D",["^=6","^=3","^:;"]]]]]]]],"^7[",false,"^7",271,"^80","^81","^9",271,"^82",4,"^83",true,"^L",["^M",["^7F",["^M",[["^;Y","^1N","^=2","^;F"]]]]]],"~$<list>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",194,"^8",7,"^9",194,"^:",13,"^L",["^M",["^7F",["^M",[["~$items","~$max-count","~$&",["~$opts"]]]]]],"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^=:","^=;",["^=<"]]]],"^L",["^M",[["^=:","^=;","~$&",["^=<"]]]],"^7J",["^M",[null]]]],"^N","^4M","^6","devtools/formatters/markup.cljs","^:",13,"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^=:","^=;",["^=<"]]]],"^L",["^M",[["^=:","^=;","~$&",["^=<"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^=:","^=;",["^=<"]]]],"^7I",null,"^8@",2,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^=9",["^=:","^=;","~$&",["^=<"]],["^M",["^7P",["~$items-markups",["^M",["^8Z","^=;","^=:"]],"^9G",["^M",["~$-",["^M",["^8V","^=:"]],"^=;"]],"^8U",["^M",["^9A","^9G"]],"~$separator",["^M",["^8S",["^M",["~:separator","^=<"]],"~:list-separator"]],"~$more-symbol",["^M",["^7T","^8U",["^M",["^<I",["^=A",["^M",["~:more-symbol","^=<"]]],["^M",["^7T",["^M",["~$fn?","^=A"]],["^M",["^=A","^9G"]],"^=A"]],["^M",["^1A","^9G"]]]]]],"^8[",["^M",["^7U",[["^M",["^8S",["^M",["^8D","^=<"]],"~:list-tag"]],["^M",["^8S",["^M",["~:open-symbol","^=<"]],"~:list-open-symbol"]]],["^M",["^92","^=>","^=="]],["^M",["^7T","^8U",["^=>","^=A"]]],[["^M",["^8S",["^M",["~:close-symbol","^=<"]],"~:list-close-symbol"]]]]]],["^M",["^7T","^8U",["^M",["^7P",["^;<",["^M",["~:details","^=<"]],"~$default-details-fn",["^M",["^97","~$<list-details>","^=:","^=<"]]],["^M",["^8=",null,"^8[",["^M",["^8S","^;<","^=J"]]]]]],"^8["]]]]]]],"^7[",true,"^8C",[["^ ","^8@",2,"^7[",true,"^8D","^8E"]],"^7",194,"^80","^8F","^9",194,"^82",2,"^83",true,"^L",["^M",[["^=:","^=;","~$&",["^=<"]]]]],"~$<meta-wrapper>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",223,"^8",7,"^9",223,"^:",21,"^L",["^M",["^7F",["^M",[["~$metadata","~$&","^<:"]]]]],"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^=M","^<:"]]],"^L",["^M",[["^=M","~$&","^<:"]]],"^7J",["^M",[null]]]],"^N","^4N","^6","devtools/formatters/markup.cljs","^:",21,"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^=M","^<:"]]],"^L",["^M",[["^=M","~$&","^<:"]]],"^7J",["^M",[null]]],"^7H",[["^M",["^=M","^<:"]]],"^7I",null,"^8@",1,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^=L",["^=M","~$&","^<:"],["^M",["^7U",["~:meta-wrapper-tag"],"^<:",[["^M",["~$<meta>","^=M"]]]]]]]],"^7[",true,"^8C",[["^ ","^8@",1,"^7[",true,"^8D","^8E"]],"^7",223,"^80","^8F","^9",223,"^82",1,"^83",true,"^L",["^M",[["^=M","~$&","^<:"]]]],"^9I",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",327,"^8",7,"^9",327,"^:",17,"^L",["^M",["^7F",["^M",[["^9X","~$protocol","~$&",["^8M"]]]]]],"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^9X","^=P",["^8M"]]]],"^L",["^M",[["^9X","^=P","~$&",["^8M"]]]],"^7J",["^M",[null]]]],"^N","^3J","^6","devtools/formatters/markup.cljs","^:",17,"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^9X","^=P",["^8M"]]]],"^L",["^M",[["^9X","^=P","~$&",["^8M"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^9X","^=P",["^8M"]]]],"^7I",null,"^8@",2,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^9I",["^9X","^=P","~$&",["^8M"]],["^M",["^7P",[["^ ","~:keys",["^1N","^9L","~$selector","~$fast?"]],"^=P","^8[",[["^M",["^8S","^8M","~:protocol-name-tag"]],"^9L"],"~$prefix-markup",[["^M",["^7T","^=S","~:fast-protocol-tag","~:slow-protocol-tag"]],"~:protocol-background"]],["^M",["^7T",["^M",["^;S","^9X"]],["^M",["^7P",["^96",["^M",["^97","~$<protocol-details>","^9X","^1N","^9L","^=R","^=S"]]],["^M",["~$conj","^=U",["^M",["^8=","^9X","^8[","^96"]]]]]],["^M",["^=Z","^=U","^8["]]]]]]]]],"^7[",true,"^8C",[["^ ","^8@",2,"^7[",true,"^8D","^9E"]],"^7",327,"^80","^8F","^9",327,"^82",2,"^83",true,"^L",["^M",[["^9X","^=P","~$&",["^8M"]]]]],"~$<index>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",142,"^8",7,"^9",142,"^:",14,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"^N","^3H","^6","devtools/formatters/markup.cljs","^:",14,"^7H",["^M",[["^8L"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^=[",["^8L"],["~:index-tag","^8L","~:line-index-separator"]]]],"^7[",false,"^7",142,"^80","^81","^9",142,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"^8B",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",43,"^8",7,"^9",43,"^:",18,"^L",["^M",["^7F",["^M",[["~$&",["^85","~$header","^<J","~$start-index"]]]]]],"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",[["^85","^>2","^<J","^>3"]]]],"^L",["^M",[["~$&",["^85","^>2","^<J","^>3"]]]],"^7J",["^M",[null]]]],"^N","^31","^6","devtools/formatters/markup.cljs","^:",18,"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",[["^85","^>2","^<J","^>3"]]]],"^L",["^M",[["~$&",["^85","^>2","^<J","^>3"]]]],"^7J",["^M",[null]]],"^7H",[["^M",[["^85","^>2","^<J","^>3"]]]],"^7I",null,"^8@",0,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^8B",["~$&",["^85","^>2","^<J","^>3"]],["^M",["^7P",["^>2",["^M",["^7T",["^M",["^;S","^<J"]],["^M",["^<N","^>2"]],"^>2"]]],["^M",["^=1","^85","^>2","^<J","^>3"]]]]]]],"^7[",true,"^8C",[["^ ","^8@",0,"^7[",true,"^8D","^8E"]],"^7",43,"^80","^8F","^9",43,"^82",0,"^83",true,"^L",["^M",[["~$&",["^85","^>2","^<J","^>3"]]]]],"^::",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",340,"^8",7,"^9",340,"^:",23,"^L",["^M",["^7F",["^M",[["^9X","^9Y","~$&",["~$max-protocols"]]]]]],"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^9X","^9Y",["^>4"]]]],"^L",["^M",[["^9X","^9Y","~$&",["^>4"]]]],"^7J",["^M",[null]]]],"^N","^3F","^6","devtools/formatters/markup.cljs","^:",23,"^8?",["^ ","^7[",true,"^8@",2,"^82",2,"^7H",[["^M",["^9X","^9Y",["^>4"]]]],"^L",["^M",[["^9X","^9Y","~$&",["^>4"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^9X","^9Y",["^>4"]]]],"^7I",null,"^8@",2,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^::",["^9X","^9Y","~$&",["^>4"]],["^M",["^7P",["^>4",["^M",["^8S","^>4",["^M",["^1>","~:max-list-protocols"]]]],"~$protocols-markups",["^M",["^8X",["^M",["^97","^9I","^9X"]],"^9Y"]]],["^M",["^=9","^>6","^>4",["^ ","^8D","~:protocols-header-tag","^=E","~:protocols-list-open-symbol","^=G","~:protocols-list-close-symbol","^=?","~:header-protocol-separator","^=B","^9F"]]]]]]]],"^7[",true,"^8C",[["^ ","^8@",2,"^7[",true,"^8D","^8E"]],"^7",340,"^80","^8F","^9",340,"^82",2,"^83",true,"^L",["^M",[["^9X","^9Y","~$&",["^>4"]]]]],"^=O",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",218,"^8",7,"^9",218,"^:",13,"^L",["^M",["^7F",["^M",[["^=M"]]]]]],"^N","^3O","^6","devtools/formatters/markup.cljs","^:",13,"^7H",["^M",[["^=M"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^=O",["^=M"],["^M",["^7P",["~$body-fn",["^M",["^7R",[],["~:meta-body-tag",["^M",["^9;","^=M"]]]]],"^>2",["~:meta-header-tag","meta"]],["~:meta-reference-tag",["^M",["^8=","^=M","^>2","^>;"]]]]]]]],"^7[",false,"^7",218,"^80","^81","^9",218,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^=M"]]]]]],"^:O",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",392,"^8",7,"^9",392,"^:",17,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"^N","^3L","^6","devtools/formatters/markup.cljs","^:",17,"^7H",["^M",[["^8L"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^:O",["^8L"],["^M",["^7P",["^;Y",["^M",["^1<","^8L"]],["~$_ns","^=2","^;F"],["^M",["^<S","^;Y"]],"~$custom-printing?",["^M",["~$implements?","~$IPrintWithWriter","^8L"]],"~$type-markup",["^M",["^<0","^;Y","~:instance-type-header-tag"]],"^9W",["^M",["^1B","^8L","^;F"]],"^:2",["^M",["~$<fields>","^9W",["^M",["^7T","^>@",0]]]],"~$fields-details-markup-fn",["^M",["^88",[],["^M",["^9V","^9W","^8L"]]]],"~$fields-preview-markup",["~:instance-value-tag",["^M",["^8=","^8L","^:2","^>F"]]],"~$custom-printing-markup",["^M",["^7T","^>@",["~:instance-custom-printing-wrapper-tag","~:instance-custom-printing-background",["^M",["^;O","^8L","~:instance-custom-printing-tag"]]]]]],["~:instance-header-tag","~:instance-header-background","^>G","^>I","^>C"]]]]]],"^7[",false,"^7",392,"^80","^81","^9",392,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^8L"]]]]]],"^87",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",47,"^8",7,"^9",47,"^:",18,"^L",["^M",["^7F",["^M",[["~$&","^8>"]]]]],"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^8>"]]],"^L",["^M",[["~$&","^8>"]]],"^7J",["^M",[null]]]],"^N","^3V","^6","devtools/formatters/markup.cljs","^:",18,"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^8>"]]],"^L",["^M",[["~$&","^8>"]]],"^7J",["^M",[null]]],"^7H",[["^M",["^8>"]]],"^7I",null,"^8@",0,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^87",["~$&","^8>"],["^M",["^7U",["reference"],"^8>"]]]]],"^7[",true,"^8C",[["^ ","^8@",0,"^7[",true,"^8D","^8E"]],"^7",47,"^80","^8F","^9",47,"^82",0,"^83",true,"^L",["^M",[["~$&","^8>"]]]],"~$<function-details>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",228,"^8",7,"^9",228,"^:",25,"^L",["^M",["^7F",["^M",[["~$fn-obj","^1N","^=2","^<6","~$prefix"]]]]]],"^N","^3X","^6","devtools/formatters/markup.cljs","^:",25,"^7H",["^M",[["^>P","^1N","^=2","^<6","^>Q"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^>O",["^>P","^1N","^=2","^<6","^>Q"],["^ ","~:pre",[["^M",["^=C","^>P"]]]],["^M",["^7P",["^<6",["^M",["^8X","^1?","^<6"]],"~$make-arity-markup-list",["^M",["^7R",["~$arity"],[["~:fn-multi-arity-args-indent-tag","^>Q"],["~:fn-args-tag","^>T"]]]],"~$arities-markupts-lists",["^M",["^7T",["^M",["~$>",["^M",["^8V","^<6"]],1]],["^M",["^8X","^>S","^<6"]]]],"~$ns-markups-list",["^M",["^:3",["^M",["^:1","^1N"]],["^=4",["^=5","^1N"]]]],"~$native-markups-list",["^:<",["^M",["^84","^>P"]]]],["^M",["^7D",["^M",["^7U","^>W",["^>X","^>Y"]]]]]]]]]],"^7[",false,"^7",228,"^80","^81","^9",228,"^82",5,"^83",true,"^L",["^M",["^7F",["^M",[["^>P","^1N","^=2","^<6","^>Q"]]]]]],"^:S",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",245,"^8",7,"^9",245,"^:",17,"^L",["^M",["^7F",["^M",[["^>P"]]]]]],"^N","^43","^6","devtools/formatters/markup.cljs","^:",17,"^7H",["^M",[["^>P"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^:S",["^>P"],["^ ","^>R",[["^M",["^=C","^>P"]]]],["^M",["^7P",[["^1N","^9L"],["^M",["~$munging/parse-fn-info","^>P"]],"~$lambda?",["^M",["^:1","^9L"]],"~$spacer-symbol",["^M",["^1>","~:spacer"]],"~$rest-symbol",["^M",["^1>","~:rest-symbol"]],"~$multi-arity-symbol",["^M",["^1>","~:multi-arity-symbol"]],"^<6",["^M",["~$munging/extract-arities","^>P",true,"^?0","^?4","^?2"]],"~$arities-markup",["^M",["~$<arities>","^<6"]],"^<T",["^M",["^:3","^>[",["~:fn-name-tag","^9L"]]],"~$icon-markup",["^M",["^7T","^>[","~:lambda-icon","~:fn-icon"]],"^=U",["~:fn-prefix-tag","^?:","^<T"],"^8[",["~:fn-header-tag","^=U","^?7"],"~$details-fn",["^M",["^97","^>O","^>P","^1N","^9L","^<6","^=U"]]],["^M",["^8=","^>P","^8[","^??"]]]]]]],"^7[",false,"^7",245,"^80","^8E","^9",245,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^>P"]]]]]],"^?8",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",239,"^8",7,"^9",239,"^:",16,"^L",["^M",["^7F",["^M",[["^<6"]]]]]],"^N","^2P","^6","devtools/formatters/markup.cljs","^:",16,"^7H",["^M",[["^<6"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^?8",["^<6"],["^M",["^7P",["~$multi-arity?",["^M",["~$>",["^M",["^8V","^<6"]],1]]],["^>V",["^M",["^1?",["^M",["^7T","^?@",["^M",["^1>","^?5"]],["^M",["~$first","^<6"]]]]]]]]]]]],"^7[",false,"^7",239,"^80","^81","^9",239,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^<6"]]]]]],"~$<header-expander>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",60,"^8",7,"^9",60,"^:",24,"^L",["^M",["^7F",["^M",[["^85"]]]]]],"^N","^2I","^6","devtools/formatters/markup.cljs","^:",24,"^7H",["^M",[["^85"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^?B",["^85"],["^M",["^87",["^M",["^=1","^85","~:header-expander-symbol","^<K"]],"^1F"]]]]],"^7[",false,"^7",60,"^80","^8E","^9",60,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^85"]]]]]],"^=K",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",191,"^8",7,"^9",191,"^:",21,"^L",["^M",["^7F",["^M",[["^=:","~$_opts"]]]]]],"^N","^4R","^6","devtools/formatters/markup.cljs","^:",21,"^7H",["^M",[["^=:","^?D"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^=K",["^=:","^?D"],["^M",["^7D",["^M",["^8X","~$list","^=:"]]]]]]],"^7[",false,"^7",191,"^80","^81","^9",191,"^82",2,"^83",true,"^L",["^M",["^7F",["^M",[["^=:","^?D"]]]]]],"~$<circular-reference>",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",53,"^8",7,"^9",53,"^:",27,"^L",["^M",["^7F",["^M",[["~$&","^<:"]]]]],"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^<:"]]],"^L",["^M",[["~$&","^<:"]]],"^7J",["^M",[null]]]],"^N","^47","^6","devtools/formatters/markup.cljs","^:",27,"^8?",["^ ","^7[",true,"^8@",0,"^82",0,"^7H",[["^M",["^<:"]]],"^L",["^M",[["~$&","^<:"]]],"^7J",["^M",[null]]],"^7H",[["^M",["^<:"]]],"^7I",null,"^8@",0,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^?F",["~$&","^<:"],["^M",["^8=",null,["~:circular-reference-tag","~:circular-ref-icon"],["^M",["^7U",["~:circular-reference-body-tag"],"^<:"]]]]]]],"^7[",true,"^8C",[["^ ","^8@",0,"^7[",true,"^8D","^8E"]],"^7",53,"^80","^8F","^9",53,"^82",0,"^83",true,"^L",["^M",[["~$&","^<:"]]]],"^<L",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",420,"^8",7,"^9",420,"^:",25,"^L",["^M",["^7F",["^M",[["^9:"]]]]]],"^N","^4@","^6","devtools/formatters/markup.cljs","^:",25,"^7H",["^M",[["^9:"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^<L",["^9:"],["^M",["^7P",["~$target",["^M",["^1G","^9:"]]],["^M",["^7T",["^M",["~$seqable?","^?J"]],["^M",["^7P",["^9=",["^M",["^1I","^9:"]]],["^M",["^9<","^?J","^9="]]]],["^M",["^<G","^?J"]]]]]]]]],"^7[",false,"^7",420,"^80","^9E","^9",420,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^9:"]]]]]],"~$body-line",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",145,"^8",8,"^9",145,"^:",17,"~:private",true,"^L",["^M",["^7F",["^M",[["~$index","^8L"]]]]]],"^?M",true,"^N","^2F","^6","devtools/formatters/markup.cljs","^:",17,"^7H",["^M",[["^?N","^8L"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["~$defn-","^?L",["^?N","^8L"],["^M",["^7P",["~$index-markup",["^M",["^=[","^?N"]],"~$value-markup",["^M",["^8K","^8L","~:item-tag",["^M",["^1>","~:body-line-max-print-level"]]]]],["^?P","^?Q"]]]]]],"^7[",false,"^7",145,"^80","^81","^9",145,"^82",2,"^83",true,"^L",["^M",["^7F",["^M",[["^?N","^8L"]]]]]],"^9D",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",159,"^8",8,"^9",159,"^:",18,"^?M",true,"^L",["^M",["^7F",["^M",[["^8L","^9="]]]]]],"^?M",true,"^N","^2D","^6","devtools/formatters/markup.cljs","^:",18,"^7H",["^M",[["^8L","^9="]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^?O","^9D",["^8L","^9="],["^M",["^7P",["~$seq",["^M",["^?T","^8L"]],"~$max-number-body-items",["^M",["^1>","~:max-number-body-items"]],"~$chunk",["^M",["^8Z","^?U","^?T"]],"~$rest",["^M",["~$drop","^?U","^?T"]],"~$lines",["^M",["~$prepare-body-lines","^?W","^9="]],"~$continue?",["^M",["^:0",["^M",["^:1",["^M",["^8Z",1,"^?X"]]]]]]],["^M",["^:3","^@0","^?Z",["^M",["^7P",["~$more-label-markup",["~:body-items-more-tag","~:body-items-more-label"],"^>3",["^M",["~$+","^9=","^?U"]],"~$more-markup",["^M",["^8=","^?X","^@1","^<K","^>3"]]],["^M",["^=Z","^?Z",["^@4"]]]]]]]]]]]],"^7[",false,"^7",159,"^80",["^J",["^9E","^81"]],"^9",159,"^82",2,"^83",true,"^L",["^M",["^7F",["^M",[["^8L","^9="]]]]]],"^>E",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",369,"^8",7,"^9",369,"^:",15,"^L",["^M",["^7F",["^M",[["^9W","~$&",["~$max-fields"]]]]]],"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^9W",["^@5"]]]],"^L",["^M",[["^9W","~$&",["^@5"]]]],"^7J",["^M",[null]]]],"^N","^4=","^6","devtools/formatters/markup.cljs","^:",15,"^8?",["^ ","^7[",true,"^8@",1,"^82",1,"^7H",[["^M",["^9W",["^@5"]]]],"^L",["^M",[["^9W","~$&",["^@5"]]]],"^7J",["^M",[null]]],"^7H",[["^M",["^9W",["^@5"]]]],"^7I",null,"^8@",1,"^7J",["^M",[null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^>E",["^9W","~$&",["^@5"]],["^M",["^7T",["^M",["^:4",["^M",["^8V","^9W"]]]],["~:fields-header-tag","~:fields-header-no-fields-symbol"],["^M",["^7P",["^@5",["^M",["^8S","^@5",["^M",["^1>","~:max-instance-header-fields"]]]],"^8U",["^M",["~$>",["^M",["^8V","^9W"]],"^@5"]],"~$fields-markups",["^M",["^8X",["^M",["^7R",[["^9L","^8L"]],["^M",["^9K","^9L","^8L"]]]],["^M",["^8Z","^@5","^9W"]]]]],["^M",["^7U",["^@6","~:fields-header-open-symbol"],"^@9",[["^M",["^7T","^8U","~:more-fields-symbol"]],"~:fields-header-close-symbol"]]]]]]]]]],"^7[",true,"^8C",[["^ ","^8@",1,"^7[",true,"^8D","^9E"]],"^7",369,"^80","^8F","^9",369,"^82",1,"^83",true,"^L",["^M",[["^9W","~$&",["^@5"]]]]],"^:A",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",68,"^8",7,"^9",68,"^:",12,"^L",["^M",["^7F",["^M",[[]]]]]],"^N","^46","^6","devtools/formatters/markup.cljs","^:",12,"^7H",["^M",[[]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^:A",[],["~:nil-tag","~:nil-label"]]]],"^7[",false,"^7",68,"^80","^81","^9",68,"^82",0,"^83",true,"^L",["^M",["^7F",["^M",[[]]]]]],"^7Y",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",118,"^8",7,"^9",118,"^:",13,"^L",["^M",["^7F",["^M",[["~$markup"]]]]]],"^N","^4<","^6","devtools/formatters/markup.cljs","^:",13,"^7H",["^M",[["^@?"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^7Y",["^@?"],["~:body-tag","^@?"]]]],"^7[",false,"^7",118,"^80","^81","^9",118,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^@?"]]]]]],"^:I",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",81,"^8",7,"^9",81,"^:",15,"^L",["^M",["^7F",["^M",[["~$number"]]]]]],"^N","^4J","^6","devtools/formatters/markup.cljs","^:",15,"^7H",["^M",[["^@A"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^:I",["^@A"],["^M",["^7T",["^M",["^33","^@A"]],["^M",["^7T",["^M",["~$integer?","^@A"]],["~:integer-tag","^@A"],["~:float-tag","^@A"]]],["^M",["^7T",["^M",["^3Y","^@A"]],["~:float-nan-tag",["^M",["~$pr-str","^@A"]]],["~:float-infinity-tag",["^M",["^@F","^@A"]]]]]]]]]],"^7[",false,"^7",81,"^80","^81","^9",81,"^82",1,"^83",true,"^L",["^M",["^7F",["^M",[["^@A"]]]]]],"^=Y",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",318,"^8",7,"^9",318,"^:",25,"^L",["^M",["^7F",["^M",[["^9X","^1N","^=2","^=R","~$_fast?"]]]]]],"^N","^4G","^6","devtools/formatters/markup.cljs","^:",25,"^7H",["^M",[["^9X","^1N","^=2","^=R","^@H"]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^7O","^=Y",["^9X","^1N","^=2","^=R","^@H"],["^M",["^7P",["~$protocol-obj",["^M",["~$munging/get-protocol-object","^=R"]],"^>X",["^M",["^:3",["^M",["^:1","^1N"]],["^=4",["~:protocol-ns-name-tag","^1N"]]]],"^>Y",["^M",["^7T",["^M",["^;S","^@I"]],["^:<",["^M",["^84","^@I"]]]]],"~$methods",["^M",["~$munging/collect-protocol-methods","^9X","^=R"]],"~$methods-markups",["^M",["^8X",["^M",["^7R",[["^9L","^<6"]],["^M",["^<5","^9L","^<6"]]]],"^@L"]],"~$methods-markups-lists",["^M",["^8X","^?E","^@N"]]],["^M",["^7D",["^M",["^7U","^@O",["^>X","^>Y"]]]]]]]]]],"^7[",false,"^7",318,"^80","^81","^9",318,"^82",5,"^83",true,"^L",["^M",["^7F",["^M",[["^9X","^1N","^=2","^=R","^@H"]]]]]],"^?[",["^ ","^7E",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",151,"^8",8,"^9",151,"^:",26,"^?M",true,"^L",["^M",["^7F",["^M",[["~$data","^9="]]]]]],"^?M",true,"^N","^4C","^6","devtools/formatters/markup.cljs","^:",26,"^7H",["^M",[["^@P","^9="]]],"^7I",null,"^7J",["^M",[null,null]],"^8",1,"^7K",["^ ","^7L","^7M","^7N",["^M",["^?O","^?[",["^@P","^9="],["^M",["~$loop",["~$work","^@P","^?N","^9=","^?Z",[]],["^M",["^7T",["^M",["^:1","^@R"]],"^?Z",["^M",["~$recur",["^M",["^?X","^@R"]],["^M",["^;V","^?N"]],["^M",["^=Z","^?Z",["^M",["^?L","^?N",["^M",["^?A","^@R"]]]]]]]]]]]]]]],"^7[",false,"^7",151,"^80",["^J",["^9E","^81"]],"^9",151,"^82",2,"^83",true,"^L",["^M",["^7F",["^M",[["^@P","^9="]]]]]]],"^14",["^ ","^H","^H","^10","^10","^Z","^Z","^[","^Z"],"~:cljs.analyzer/constants",["^ ","^12",["^J",["^95","~:protocol-details","^?V","^>>","^>L","^<Z","^<A","^@2","^>1","^:[","~:selector","^@;","^<D","~:standard-body","^=X","^:9","~:standalone-type","^7Z","^9U","^:J","^?>","^8I","~:protocol-method-arities","~:surrogate","^@6","^5","~:aligned-body","^@3","^@=","^9?","~:instance","^@D","^@K","~:protocol-method","~:protocol-method-arities-details","^94","~:number","^>0","^?3","~:protocol","^>9","^=T","~:protocol-method-arity","^@G","~:more-protocols","^>N","^@@","^<;","^>5","^;8","^:<","^:6","^:L","^P","~:symbol","~:fields-details-row","^N","^<U","^=@","^9O","^=V","^:D","^;[","^<V","^?;","^:R","^@:","~:fields","~:type-details","^?9","~:protocols-list","^9P","^:5","^<Y","~:field","~:type","^;C","~:type-basis-item","^:B","^:W","^@7","^@>","~:meta-wrapper","^>8","^=F","~:raw-surrogate","^9R","~:function-details","^<E","~:string","~:surrogate-header","^=B","~:native-reference","~:header","^;:","^=N","^<8","~:function","^8T","~:reference-surrogate","^>:","^=8","~:surrogate-body","^>V","^;X","^<P","^?=","^<=","^=5","^<1","^<B","^=E","^91","^;=","^9J","~:reference","^><","^>K","~:preview","~:fast?","^8;","^=I","^@E","^>D","~:list","~:keyword","^?1","^<?","~:surrogate-target","^9N","^;B","^=D","^<@","~:nil","^:P","^;4","^93","^<7","~:fields-details","^=H","^:G","~:circular-reference","~:expandable","^<F","^=7","~:list-details","^?<","^@C","^;J","^>7","^<9","^?R","^>H","^?H","^;@","~:standard-body-reference","^8D","^?I","~:bool","^8<","^<K","~:type-basis","^7V","^:N","^<R","^>U","^<Q","^90","^@8","~:arities","^<[","^<2","^?5","^:?","^>=","~:body","^=?","^=W","^9M","^8:","^@<","^;3","^>J","^<C","~:atomic","^;K","^=G","^<W","^>M","~:header-expander","^=4","^?S","^?G","^?C","~:cljs-land"]],"~:order~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^53",[["^B3","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^B3","~:shadow-tweaks"],null,["^B3","~:source-map-inline"],null,["^B3","~:shadow-optimize-constants"],null,["^B3","~:elide-asserts"],false,["^B3","~:optimize-constants"],null,["^B3","^1X"],null,["^B3","~:external-config"],null,["^B3","~:tooling-config"],null,["^B3","~:emit-constants"],null,["^B3","~:load-tests"],null,["^B3","~:form-size-threshold"],null,["^B3","~:global-goog-object&array"],null,["^B3","~:data-readers"],null,["^B3","~:infer-externs"],"~:auto",["^B3","^1Z"],null,["^B5","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^B3","~:fn-invoke-direct"],null,["^B3","~:source-map"],"/dev/null"]]]