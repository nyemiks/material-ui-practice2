["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\r\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\r\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null, re_frame.fx.kind)))){\r\n} else {\r\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\r\n}\r\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\r\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\r\n});\r\n/**\r\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\r\n *   this interceptor is Domino 3.\r\n * \r\n *   This interceptor is silently added (by reg-event-db etc) to the front of\r\n *   interceptor chains for all events.\r\n * \r\n *   For each key in `:effects` (a map), it calls the registered `effects handler`\r\n *   (see `reg-fx` for registration of effect handlers).\r\n * \r\n *   So, if `:effects` was:\r\n *    {:dispatch  [:hello 42]\r\n *     :db        {...}\r\n *     :undo      \"set flag\"}\r\n * \r\n *   it will call the registered effect handlers for each of the map's keys:\r\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\r\n *   value for that key - so in the example above the effect handler for :dispatch\r\n *   will be given one arg `[:hello 42]`.\r\n * \r\n *   You cannot rely on the ordering in which effects are executed, other than that\r\n *   `:db` is guaranteed to be executed first.\r\n */\r\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\r\nif(re_frame.trace.is_trace_enabled_QMARK_()){\r\nvar _STAR_current_trace_STAR__orig_val__21000 = re_frame.trace._STAR_current_trace_STAR_;\r\nvar _STAR_current_trace_STAR__temp_val__21001 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\r\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__21001);\r\n\r\ntry{try{var effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\r\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\r\nvar temp__5804__auto___21068 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\r\nif(cljs.core.truth_(temp__5804__auto___21068)){\r\nvar new_db_21069 = temp__5804__auto___21068;\r\nvar fexpr__21002_21070 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\r\n(fexpr__21002_21070.cljs$core$IFn$_invoke$arity$1 ? fexpr__21002_21070.cljs$core$IFn$_invoke$arity$1(new_db_21069) : fexpr__21002_21070.call(null, new_db_21069));\r\n} else {\r\n}\r\n\r\nvar seq__21003 = cljs.core.seq(effects_without_db);\r\nvar chunk__21004 = null;\r\nvar count__21005 = (0);\r\nvar i__21006 = (0);\r\nwhile(true){\r\nif((i__21006 < count__21005)){\r\nvar vec__21013 = chunk__21004.cljs$core$IIndexed$_nth$arity$2(null, i__21006);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21013,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21013,(1),null);\r\nvar temp__5802__auto___21071 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5802__auto___21071)){\r\nvar effect_fn_21072 = temp__5802__auto___21071;\r\n(effect_fn_21072.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21072.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21072.call(null, effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\",((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),effect_key))?[\"You may be trying to return a coeffect map from an event-fx handler. \",\"See https://day8.github.io/re-frame/use-cofx-as-fx/\"].join(''):null)], 0));\r\n}\r\n\r\n\r\nvar G__21073 = seq__21003;\r\nvar G__21074 = chunk__21004;\r\nvar G__21075 = count__21005;\r\nvar G__21076 = (i__21006 + (1));\r\nseq__21003 = G__21073;\r\nchunk__21004 = G__21074;\r\ncount__21005 = G__21075;\r\ni__21006 = G__21076;\r\ncontinue;\r\n} else {\r\nvar temp__5804__auto__ = cljs.core.seq(seq__21003);\r\nif(temp__5804__auto__){\r\nvar seq__21003__$1 = temp__5804__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__21003__$1)){\r\nvar c__5525__auto__ = cljs.core.chunk_first(seq__21003__$1);\r\nvar G__21077 = cljs.core.chunk_rest(seq__21003__$1);\r\nvar G__21078 = c__5525__auto__;\r\nvar G__21079 = cljs.core.count(c__5525__auto__);\r\nvar G__21080 = (0);\r\nseq__21003 = G__21077;\r\nchunk__21004 = G__21078;\r\ncount__21005 = G__21079;\r\ni__21006 = G__21080;\r\ncontinue;\r\n} else {\r\nvar vec__21016 = cljs.core.first(seq__21003__$1);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21016,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21016,(1),null);\r\nvar temp__5802__auto___21081 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5802__auto___21081)){\r\nvar effect_fn_21082 = temp__5802__auto___21081;\r\n(effect_fn_21082.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21082.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21082.call(null, effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\",((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),effect_key))?[\"You may be trying to return a coeffect map from an event-fx handler. \",\"See https://day8.github.io/re-frame/use-cofx-as-fx/\"].join(''):null)], 0));\r\n}\r\n\r\n\r\nvar G__21083 = cljs.core.next(seq__21003__$1);\r\nvar G__21084 = null;\r\nvar G__21085 = (0);\r\nvar G__21086 = (0);\r\nseq__21003 = G__21083;\r\nchunk__21004 = G__21084;\r\ncount__21005 = G__21085;\r\ni__21006 = G__21086;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\r\nvar end__20661__auto___21087 = re_frame.interop.now();\r\nvar duration__20662__auto___21088 = (end__20661__auto___21087 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__20662__auto___21088,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\r\n\r\nre_frame.trace.run_tracing_callbacks_BANG_(end__20661__auto___21087);\r\n} else {\r\n}\r\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__21000);\r\n}} else {\r\nvar effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\r\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\r\nvar temp__5804__auto___21089 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\r\nif(cljs.core.truth_(temp__5804__auto___21089)){\r\nvar new_db_21090 = temp__5804__auto___21089;\r\nvar fexpr__21019_21091 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\r\n(fexpr__21019_21091.cljs$core$IFn$_invoke$arity$1 ? fexpr__21019_21091.cljs$core$IFn$_invoke$arity$1(new_db_21090) : fexpr__21019_21091.call(null, new_db_21090));\r\n} else {\r\n}\r\n\r\nvar seq__21020 = cljs.core.seq(effects_without_db);\r\nvar chunk__21021 = null;\r\nvar count__21022 = (0);\r\nvar i__21023 = (0);\r\nwhile(true){\r\nif((i__21023 < count__21022)){\r\nvar vec__21030 = chunk__21021.cljs$core$IIndexed$_nth$arity$2(null, i__21023);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21030,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21030,(1),null);\r\nvar temp__5802__auto___21093 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5802__auto___21093)){\r\nvar effect_fn_21095 = temp__5802__auto___21093;\r\n(effect_fn_21095.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21095.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21095.call(null, effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\",((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),effect_key))?[\"You may be trying to return a coeffect map from an event-fx handler. \",\"See https://day8.github.io/re-frame/use-cofx-as-fx/\"].join(''):null)], 0));\r\n}\r\n\r\n\r\nvar G__21096 = seq__21020;\r\nvar G__21097 = chunk__21021;\r\nvar G__21098 = count__21022;\r\nvar G__21099 = (i__21023 + (1));\r\nseq__21020 = G__21096;\r\nchunk__21021 = G__21097;\r\ncount__21022 = G__21098;\r\ni__21023 = G__21099;\r\ncontinue;\r\n} else {\r\nvar temp__5804__auto__ = cljs.core.seq(seq__21020);\r\nif(temp__5804__auto__){\r\nvar seq__21020__$1 = temp__5804__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__21020__$1)){\r\nvar c__5525__auto__ = cljs.core.chunk_first(seq__21020__$1);\r\nvar G__21100 = cljs.core.chunk_rest(seq__21020__$1);\r\nvar G__21101 = c__5525__auto__;\r\nvar G__21102 = cljs.core.count(c__5525__auto__);\r\nvar G__21103 = (0);\r\nseq__21020 = G__21100;\r\nchunk__21021 = G__21101;\r\ncount__21022 = G__21102;\r\ni__21023 = G__21103;\r\ncontinue;\r\n} else {\r\nvar vec__21033 = cljs.core.first(seq__21020__$1);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21033,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21033,(1),null);\r\nvar temp__5802__auto___21104 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5802__auto___21104)){\r\nvar effect_fn_21105 = temp__5802__auto___21104;\r\n(effect_fn_21105.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21105.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21105.call(null, effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\",((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),effect_key))?[\"You may be trying to return a coeffect map from an event-fx handler. \",\"See https://day8.github.io/re-frame/use-cofx-as-fx/\"].join(''):null)], 0));\r\n}\r\n\r\n\r\nvar G__21106 = cljs.core.next(seq__21020__$1);\r\nvar G__21107 = null;\r\nvar G__21108 = (0);\r\nvar G__21109 = (0);\r\nseq__21020 = G__21106;\r\nchunk__21021 = G__21107;\r\ncount__21022 = G__21108;\r\ni__21023 = G__21109;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n})], 0));\r\nre_frame.fx.dispatch_later = (function re_frame$fx$dispatch_later(p__21036){\r\nvar map__21037 = p__21036;\r\nvar map__21037__$1 = cljs.core.__destructure_map(map__21037);\r\nvar effect = map__21037__$1;\r\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21037__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\r\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21037__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\r\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\r\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\r\n} else {\r\nreturn re_frame.interop.set_timeout_BANG_((function (){\r\nreturn re_frame.router.dispatch(dispatch);\r\n}),ms);\r\n}\r\n});\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\r\nif(cljs.core.map_QMARK_(value)){\r\nreturn re_frame.fx.dispatch_later(value);\r\n} else {\r\nvar seq__21038 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\r\nvar chunk__21039 = null;\r\nvar count__21040 = (0);\r\nvar i__21041 = (0);\r\nwhile(true){\r\nif((i__21041 < count__21040)){\r\nvar effect = chunk__21039.cljs$core$IIndexed$_nth$arity$2(null, i__21041);\r\nre_frame.fx.dispatch_later(effect);\r\n\r\n\r\nvar G__21111 = seq__21038;\r\nvar G__21112 = chunk__21039;\r\nvar G__21113 = count__21040;\r\nvar G__21114 = (i__21041 + (1));\r\nseq__21038 = G__21111;\r\nchunk__21039 = G__21112;\r\ncount__21040 = G__21113;\r\ni__21041 = G__21114;\r\ncontinue;\r\n} else {\r\nvar temp__5804__auto__ = cljs.core.seq(seq__21038);\r\nif(temp__5804__auto__){\r\nvar seq__21038__$1 = temp__5804__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__21038__$1)){\r\nvar c__5525__auto__ = cljs.core.chunk_first(seq__21038__$1);\r\nvar G__21115 = cljs.core.chunk_rest(seq__21038__$1);\r\nvar G__21116 = c__5525__auto__;\r\nvar G__21117 = cljs.core.count(c__5525__auto__);\r\nvar G__21118 = (0);\r\nseq__21038 = G__21115;\r\nchunk__21039 = G__21116;\r\ncount__21040 = G__21117;\r\ni__21041 = G__21118;\r\ncontinue;\r\n} else {\r\nvar effect = cljs.core.first(seq__21038__$1);\r\nre_frame.fx.dispatch_later(effect);\r\n\r\n\r\nvar G__21119 = cljs.core.next(seq__21038__$1);\r\nvar G__21120 = null;\r\nvar G__21121 = (0);\r\nvar G__21122 = (0);\r\nseq__21038 = G__21119;\r\nchunk__21039 = G__21120;\r\ncount__21040 = G__21121;\r\ni__21041 = G__21122;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),(function (seq_of_effects){\r\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\r\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect expects a seq, but was given \",cljs.core.type(seq_of_effects)], 0));\r\n} else {\r\nvar seq__21042 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\r\nvar chunk__21043 = null;\r\nvar count__21044 = (0);\r\nvar i__21045 = (0);\r\nwhile(true){\r\nif((i__21045 < count__21044)){\r\nvar vec__21052 = chunk__21043.cljs$core$IIndexed$_nth$arity$2(null, i__21045);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21052,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21052,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\r\n} else {\r\n}\r\n\r\nvar temp__5802__auto___21123 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5802__auto___21123)){\r\nvar effect_fn_21124 = temp__5802__auto___21123;\r\n(effect_fn_21124.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21124.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21124.call(null, effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\r\n}\r\n\r\n\r\nvar G__21125 = seq__21042;\r\nvar G__21126 = chunk__21043;\r\nvar G__21127 = count__21044;\r\nvar G__21128 = (i__21045 + (1));\r\nseq__21042 = G__21125;\r\nchunk__21043 = G__21126;\r\ncount__21044 = G__21127;\r\ni__21045 = G__21128;\r\ncontinue;\r\n} else {\r\nvar temp__5804__auto__ = cljs.core.seq(seq__21042);\r\nif(temp__5804__auto__){\r\nvar seq__21042__$1 = temp__5804__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__21042__$1)){\r\nvar c__5525__auto__ = cljs.core.chunk_first(seq__21042__$1);\r\nvar G__21129 = cljs.core.chunk_rest(seq__21042__$1);\r\nvar G__21130 = c__5525__auto__;\r\nvar G__21131 = cljs.core.count(c__5525__auto__);\r\nvar G__21132 = (0);\r\nseq__21042 = G__21129;\r\nchunk__21043 = G__21130;\r\ncount__21044 = G__21131;\r\ni__21045 = G__21132;\r\ncontinue;\r\n} else {\r\nvar vec__21055 = cljs.core.first(seq__21042__$1);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21055,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21055,(1),null);\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\r\n} else {\r\n}\r\n\r\nvar temp__5802__auto___21133 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5802__auto___21133)){\r\nvar effect_fn_21134 = temp__5802__auto___21133;\r\n(effect_fn_21134.cljs$core$IFn$_invoke$arity$1 ? effect_fn_21134.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_21134.call(null, effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\r\n}\r\n\r\n\r\nvar G__21135 = cljs.core.next(seq__21042__$1);\r\nvar G__21136 = null;\r\nvar G__21137 = (0);\r\nvar G__21138 = (0);\r\nseq__21042 = G__21135;\r\nchunk__21043 = G__21136;\r\ncount__21044 = G__21137;\r\ni__21045 = G__21138;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\r\nif((!(cljs.core.vector_QMARK_(value)))){\r\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\r\n} else {\r\nreturn re_frame.router.dispatch(value);\r\n}\r\n}));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\r\nif((!(cljs.core.sequential_QMARK_(value)))){\r\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\r\n} else {\r\nvar seq__21058 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\r\nvar chunk__21059 = null;\r\nvar count__21060 = (0);\r\nvar i__21061 = (0);\r\nwhile(true){\r\nif((i__21061 < count__21060)){\r\nvar event = chunk__21059.cljs$core$IIndexed$_nth$arity$2(null, i__21061);\r\nre_frame.router.dispatch(event);\r\n\r\n\r\nvar G__21139 = seq__21058;\r\nvar G__21140 = chunk__21059;\r\nvar G__21141 = count__21060;\r\nvar G__21142 = (i__21061 + (1));\r\nseq__21058 = G__21139;\r\nchunk__21059 = G__21140;\r\ncount__21060 = G__21141;\r\ni__21061 = G__21142;\r\ncontinue;\r\n} else {\r\nvar temp__5804__auto__ = cljs.core.seq(seq__21058);\r\nif(temp__5804__auto__){\r\nvar seq__21058__$1 = temp__5804__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__21058__$1)){\r\nvar c__5525__auto__ = cljs.core.chunk_first(seq__21058__$1);\r\nvar G__21143 = cljs.core.chunk_rest(seq__21058__$1);\r\nvar G__21144 = c__5525__auto__;\r\nvar G__21145 = cljs.core.count(c__5525__auto__);\r\nvar G__21146 = (0);\r\nseq__21058 = G__21143;\r\nchunk__21059 = G__21144;\r\ncount__21060 = G__21145;\r\ni__21061 = G__21146;\r\ncontinue;\r\n} else {\r\nvar event = cljs.core.first(seq__21058__$1);\r\nre_frame.router.dispatch(event);\r\n\r\n\r\nvar G__21147 = cljs.core.next(seq__21058__$1);\r\nvar G__21148 = null;\r\nvar G__21149 = (0);\r\nvar G__21150 = (0);\r\nseq__21058 = G__21147;\r\nchunk__21059 = G__21148;\r\ncount__21060 = G__21149;\r\ni__21061 = G__21150;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\r\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\r\nif(cljs.core.sequential_QMARK_(value)){\r\nvar seq__21062 = cljs.core.seq(value);\r\nvar chunk__21063 = null;\r\nvar count__21064 = (0);\r\nvar i__21065 = (0);\r\nwhile(true){\r\nif((i__21065 < count__21064)){\r\nvar event = chunk__21063.cljs$core$IIndexed$_nth$arity$2(null, i__21065);\r\nclear_event(event);\r\n\r\n\r\nvar G__21151 = seq__21062;\r\nvar G__21152 = chunk__21063;\r\nvar G__21153 = count__21064;\r\nvar G__21154 = (i__21065 + (1));\r\nseq__21062 = G__21151;\r\nchunk__21063 = G__21152;\r\ncount__21064 = G__21153;\r\ni__21065 = G__21154;\r\ncontinue;\r\n} else {\r\nvar temp__5804__auto__ = cljs.core.seq(seq__21062);\r\nif(temp__5804__auto__){\r\nvar seq__21062__$1 = temp__5804__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__21062__$1)){\r\nvar c__5525__auto__ = cljs.core.chunk_first(seq__21062__$1);\r\nvar G__21155 = cljs.core.chunk_rest(seq__21062__$1);\r\nvar G__21156 = c__5525__auto__;\r\nvar G__21157 = cljs.core.count(c__5525__auto__);\r\nvar G__21158 = (0);\r\nseq__21062 = G__21155;\r\nchunk__21063 = G__21156;\r\ncount__21064 = G__21157;\r\ni__21065 = G__21158;\r\ncontinue;\r\n} else {\r\nvar event = cljs.core.first(seq__21062__$1);\r\nclear_event(event);\r\n\r\n\r\nvar G__21159 = cljs.core.next(seq__21062__$1);\r\nvar G__21160 = null;\r\nvar G__21161 = (0);\r\nvar G__21162 = (0);\r\nseq__21062 = G__21159;\r\nchunk__21063 = G__21160;\r\ncount__21064 = G__21161;\r\ni__21065 = G__21162;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn clear_event(value);\r\n}\r\n}));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\r\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\r\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\r\n} else {\r\nif(re_frame.trace.is_trace_enabled_QMARK_()){\r\nvar _STAR_current_trace_STAR__orig_val__21066 = re_frame.trace._STAR_current_trace_STAR_;\r\nvar _STAR_current_trace_STAR__temp_val__21067 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"reagent\",\"quiescent\",\"reagent/quiescent\",-16138681)], null));\r\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__21067);\r\n\r\ntry{try{return null;\r\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\r\nvar end__20661__auto___21163 = re_frame.interop.now();\r\nvar duration__20662__auto___21164 = (end__20661__auto___21163 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__20662__auto___21164,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\r\n\r\nre_frame.trace.run_tracing_callbacks_BANG_(end__20661__auto___21163);\r\n} else {\r\n}\r\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__21066);\r\n}} else {\r\nreturn null;\r\n}\r\n}\r\n}));\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react-dom","~$module$node_modules$react_dom$index","~$react","~$module$node_modules$react$index","~$searchappbar","~$module$node_modules$searchappbar$dist$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^R","~$re-frame.interceptor","^S","~$re-frame.events","^T","~$re-frame.trace","^U","~$re-frame.registrar","^V","~$cljs.core","^W","~$goog","^X","~$router","~$re-frame.router","^Z","^Z","~$trace","^U","~$events","^T","~$re-frame.loggers","^11","~$re-frame.db","^12"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$app-db","^12","~$->interceptor","^S","~$set-timeout!","^R","~$get-handler","^V","~$clear-handlers","^V","~$register-handler","^V","~$console","^11"],"~:require-macros",["^ ","^U","^U","^[","^U","^W","^W"],"~:form",["~#list",["~$ns","^L",["^1?",["^14",["^Z","~:as","^Y"],["^12","~:refer",["^16"]],["^S","^1B",["^17"]],["^R","^1B",["^18"]],["^T","^1A","^10"],["^V","^1B",["^19","^1:","^1;"]],["^11","^1B",["^1<"]],["^U","^1A","^[","~:include-macros",true]]]]],"~:flags",["^ ","^14",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^X","^W","^Z","^12","^S","^R","^T","^V","^11","^U"]],"^O","^L","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1712868674795,"^M",["^ ","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^Z","^Z","^Z","^[","^U","^10","^T","^11","^11","^12","^12"],"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n   [re-frame.router      :as router]\n   [re-frame.db          :refer [app-db]]\n   [re-frame.interceptor :refer [->interceptor]]\n   [re-frame.interop     :refer [set-timeout!]]\n   [re-frame.events      :as events]\n   [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n   [re-frame.loggers     :refer [console]]\n   [re-frame.trace :as trace :include-macros true]))\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.\"\n  (->interceptor\n   :id :do-fx\n   :after (fn do-fx-after\n            [context]\n            (trace/with-trace\n              {:op-type :event/do-fx}\n              (let [effects            (:effects context)\n                    effects-without-db (dissoc effects :db)]\n                 ;; :db effect is guaranteed to be handled before all other effects.\n                (when-let [new-db (:db effects)]\n                  ((get-handler kind :db false) new-db))\n                (doseq [[effect-key effect-value] effects-without-db]\n                  (if-let [effect-fn (get-handler kind effect-key false)]\n                    (effect-fn effect-value)\n                    (console :warn\n                             \"re-frame: no handler registered for effect:\"\n                             effect-key\n                             \". Ignoring.\"\n                             (when (= :event effect-key)\n                               (str \"You may be trying to return a coeffect map from an event-fx handler. \"\n                                    \"See https://day8.github.io/re-frame/use-cofx-as-fx/\"))))))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(defn dispatch-later\n  [{:keys [ms dispatch] :as effect}]\n  (if (or (empty? dispatch) (not (number? ms)))\n    (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n    (set-timeout! #(router/dispatch dispatch) ms)))\n\n(reg-fx\n :dispatch-later\n (fn [value]\n   (if (map? value)\n     (dispatch-later value)\n     (doseq [effect (remove nil? value)]\n       (dispatch-later effect)))))\n\n;; :fx\n;;\n;; Handle one or more effects. Expects a collection of vectors (tuples) of the\n;; form [effect-key effect-value]. `nil` entries in the collection are ignored\n;; so effects can be added conditionally.\n;;\n;; usage:\n;;\n;; {:fx [[:dispatch [:event-id \"param\"]]\n;;       nil\n;;       [:http-xhrio {:method :post\n;;                     ...}]]}\n;;\n\n(reg-fx\n :fx\n (fn [seq-of-effects]\n   (if-not (sequential? seq-of-effects)\n     (console :warn \"re-frame: \\\":fx\\\" effect expects a seq, but was given \" (type seq-of-effects))\n     (doseq [[effect-key effect-value] (remove nil? seq-of-effects)]\n       (when (= :db effect-key)\n         (console :warn \"re-frame: \\\":fx\\\" effect should not contain a :db effect\"))\n       (if-let [effect-fn (get-handler kind effect-key false)]\n         (effect-fn effect-value)\n         (console :warn \"re-frame: in \\\":fx\\\" effect found \" effect-key \" which has no associated handler. Ignoring.\"))))))\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n :dispatch\n (fn [value]\n   (if-not (vector? value)\n     (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n     (router/dispatch value))))\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n :dispatch-n\n (fn [value]\n   (if-not (sequential? value)\n     (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n     (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n :deregister-event-handler\n (fn [value]\n   (let [clear-event (partial clear-handlers events/kind)]\n     (if (sequential? value)\n       (doseq [event value] (clear-event event))\n       (clear-event value)))))\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n :db\n (fn [value]\n   (if-not (identical? @app-db value)\n     (reset! app-db value)\n     (trace/with-trace {:op-type :reagent/quiescent}))))\n\n","~:reader-features",["^J",["~:cljs"]],"~:used-var-namespaces",["^J",["^R","^S","^T","^U","^L","^V","^W","~$js","^Z","^11","^12"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__21000","re-frame.trace/*current-trace*","*current-trace*-temp-val__21001","re-frame.trace/start-trace","end__20661__auto__","re-frame.interop/now","duration__20662__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","effects","effects-without-db","cljs.core.dissoc","temp__5804__auto__","new-db","fexpr__21002","fexpr__21019","re_frame.registrar.get_handler","seq__21003","cljs.core/seq","chunk__21004","count__21005","i__21006","vec__21013","cljs.core.nth","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__21016","cljs.core/first","cljs.core/next","seq__21020","chunk__21021","count__21022","i__21023","vec__21030","vec__21033","effect-key","effect-value","temp__5802__auto__","effect-fn","re_frame.loggers.console","cljs.core._EQ_","p__21036","map__21037","cljs.core/--destructure-map","cljs.core.get","re-frame.fx/dispatch-later","ms","dispatch","effect","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","value","cljs.core/map?","seq__21038","chunk__21039","count__21040","i__21041","cljs.core.remove","cljs.core/nil?","seq-of-effects","cljs.core/sequential?","cljs.core/type","seq__21042","chunk__21043","count__21044","i__21045","vec__21052","vec__21055","cljs.core/vector?","seq__21058","chunk__21059","count__21060","i__21061","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__21062","chunk__21063","count__21064","i__21065","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!","*current-trace*-orig-val__21066","*current-trace*-temp-val__21067"]],"~:used-vars",["^J",["~$cljs.core/--destructure-map","~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.registrar/get-handler","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$cljs.core/=","~$re-frame.trace/traces","~$cljs.core/partial","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/seq","~$cljs.core/chunk-first","~$re-frame.events/kind","~$re-frame.trace/start-trace","~$re-frame.registrar/clear-handlers","~$re-frame.registrar/kinds","~$re-frame.fx/dispatch-later","~$re-frame.loggers/console","~$cljs.core/dissoc","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$cljs.core/get","~$cljs.core/-nth","~$cljs.core/remove","~$cljs.core/nil?","~$cljs.core/nth","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$cljs.core/first","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1H","reagent/impl/batching.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^X","^W","~$reagent.debug","~$reagent.impl.util"]]],["^1H","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.dom.HtmlElement"]]],["^1H","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1H","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.asserts"]]],["^1H","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/events/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.events.eventTypeHelpers","~$goog.userAgent"]]],["^1H","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^38","^39","^3<","^37","^3:","^3;"]]],["^1H","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^37"]]],["^1H","re_frame/loggers.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","~$clojure.set"]]],["^1H","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<"]]],["^1H","reagent/impl/util.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","~$clojure.string","~$clojure.walk","~$goog.object","^34"]]],["^1H","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^38","~$goog.reflect","^37"]]],["^1H","re_frame/router.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^T","^R","^11","^U"]]],["^1H","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/events/events.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1H","re_frame/registrar.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^R","^11","~$re-frame.settings"]]],["^1H","goog/events/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^38","^37"]]],["^1H","reagent/ratom.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^35","^34","~$reagent.impl.batching","^3C","^3F"]]],["^1H","re_frame/interop.cljs"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","~$goog.async.nextTick","~$goog.events","~$reagent.core","~$reagent.ratom"]]],["^1H","goog/disposable/disposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1H","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["0a9a79a56aa9c1e53cc49fff63dff00b4f41486c","93a021dca5c9b562f1e0577e488e9413c111cf9f","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1H","shadow/js.js"],["56681e253acd83be730dce6df8d306c985c4c5da","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","reagent/impl/template.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^E","^3D","^35","~$reagent.impl.component","~$reagent.impl.input","~$reagent.impl.protocols","^3U","^34","^3F"]]],["^1H","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<"]]],"~:SHADOW-TIMESTAMP",[1712152237000,1712152237000,1707229049000],["^3Y","node_modules/react/cjs/react.development.js"],["0a9a79a56aa9c1e53cc49fff63dff00b4f41486c","93a021dca5c9b562f1e0577e488e9413c111cf9f","754b7a48941975257c8955f6d5e511cb3a878737","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^3Z","~$module$node_modules$object_assign$index"]]],["^1H","re_frame/events.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^12","~$re-frame.utils","^R","^V","^11","^S","^U"]]],["^1H","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<","^3J"]]],["^1H","goog/events/listener.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.events.ListenableKey"]]],["^1H","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<","~$goog.fs.blob","^3?","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3A","^3B"]]],["^1H","goog/events/listenermap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.array","~$goog.events.Listener","^3F"]]],["^1H","goog/events/eventid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3A","~$goog.html.SafeUrl","^3B","^3<","^37"]]],["^1H","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^49","~$goog.html.SafeStyle","^4=","^3@","~$goog.html.uncheckedconversions","^3A","^37"]]],["^1H","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.dom.TagName","^3<","~$goog.dom.element"]]],["^1H","reagent/impl/component.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^3F","^E","^35","^3Q","^43","^3U","^34"]]],["^1H","clojure/walk.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W"]]],["^1H","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3A","^49","^4B","~$goog.html.SafeStyleSheet","^4=","^4D","^3@","^3B","^3<","^3G","^4;","^3F","^37","~$goog.dom.tags","^4:"]]],["^1H","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3F"]]],["^1H","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^4;","^37","^38"]]],["^1H","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","re_frame/settings.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^R","^11"]]],["^1H","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^4;","^3<","^4>","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^4D","~$goog.dom.safe","^4A","^4C","~$goog.math.Coordinate","~$goog.math.Size","^3F","~$goog.string","^3A","~$goog.string.Unicode","^3>"]]],["^1H","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.debug.Error","^4I"]]],["^1H","reagent/impl/protocols.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W"]]],["^1H","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^4;","^3<","~$goog.collections.maps","^4M","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1H","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^39"]]],["^1H","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^3Y","node_modules/object-assign/index.js"],["0a9a79a56aa9c1e53cc49fff63dff00b4f41486c","93a021dca5c9b562f1e0577e488e9413c111cf9f","519ffd5a4c91b67302cc9947b794966d629860cd","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^3Z"]]],["^1H","goog/events/eventtypehelpers.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3M","^3>"]]],["^1H","re_frame/db.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^R"]]],["^1H","goog/disposable/idisposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",[]]],["^1H","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^4;","^3F"]]],["^1H","goog/disposable/dispose.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","clojure/string.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^4M","~$goog.string.StringBuffer"]]],["^3Y","node_modules/react/cjs/react.production.min.js"],["0a9a79a56aa9c1e53cc49fff63dff00b4f41486c","93a021dca5c9b562f1e0577e488e9413c111cf9f","0a81b45abe33f0ad39b726512604018f94261db9","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^3Z","^45"]]],["^1H","goog/debug/entrypointregistry.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<"]]],["^1H","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^4J","^4C","^3A","^37"]]],["^1H","re_frame/interceptor.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^11","^R","^U","^V","^46","^3C"]]],["^1H","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^37","^3;"]]],["^1H","reagent/core.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^E","~$reagent.impl.template","^41","^35","^3Q","^43","^3U","^34"]]],["^1H","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^4;","~$goog.debug.errorcontext"]]],["^1H","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.math"]]],["^1H","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.flags"]]],["^1H","goog/async/nexttick.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3K","~$goog.dom","^4D","^4@","^3G","^3H"]]],["^1H","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^4I","^4D"]]],["^1H","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<","^4A","^49","^4B","^4F","^4=","^3@","^3A","^37"]]],["^1H","re_frame/utils.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^11","^R"]]],["^1H","re_frame/fx.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^Z","^12","^S","^R","^T","^V","^11","^U"]]],["^1H","reagent/impl/input.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^41","^3Q","^43"]]],["^1H","goog/events/event.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.Disposable","~$goog.events.EventId"]]],["^1H","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.math.Long","~$goog.math.Integer","^4M","^3F","^4;","~$goog.Uri","^4U"]]],["^1H","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3A","^3B","^4:","^3<"]]],["^1H","reagent/debug.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W"]]],["^1H","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3A","^4B","^3B","^3F","^3<","^37"]]],["^1H","goog/events/browserevent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","~$goog.debug","~$goog.events.Event","~$goog.events.EventType","^3J","^3>"]]],["^1H","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3J"]]],["^1H","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3>"]]],["^1H","clojure/set.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W"]]],["^1H","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<","^4M"]]],["^1H","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3<","^3B"]]],["^1H","goog/disposable/disposeall.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^3W"]]],["^1H","goog/events/listenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","goog/events/listenablekey.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X"]]],["^1H","re_frame/trace.cljc"],["d2379fa1fcaa1a5c33f1dcc4ab5ca5bf0e561243","^30",["^ ","^31",null,"^32",["^J",[]],"^33",["^X","^W","^R","^11","^4@"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/core.clj",1711469606000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/re-frame/re-frame/1.4.2/re-frame-1.4.2.jar!/re_frame/interop.clj",1707229056000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/interop.clj",1711469606000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/ratom.clj",1711469606000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/re-frame/re-frame/1.4.2/re-frame-1.4.2.jar!/re_frame/trace.cljc",1707229056000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1707229056000,"jar:file:/C:/Users/nyemi/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/debug.clj",1711469606000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^M",["^ "],"^P",null,"^Q",["^ ","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^Z","^Z","^Z","^[","^U","^10","^T","^11","^11","^12","^12"],"^13",["^J",["^14"]],"~:shadow/js-access-global",["^J",["Error"]],"^15",["^ ","^16","^12","^17","^S","^18","^R","^19","^V","^1:","^V","^1;","^V","^1<","^11"],"~:defs",["^ ","~$kind",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",14,"^8",6,"^9",14,"^:",10],"^K","^1W","^6","re_frame/fx.cljc","^:",10,"^8",1,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["^1?",["~$def","^63","~:fx"]]],"^7",14,"^9",14,"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",17,"^8",7,"^9",17,"^:",13,"~:arglists",["^1?",["~$quote",["^1?",[["~$id","~$handler"]]]]]],"^K","^1Y","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1?",[["^6@","^6A"]]],"~:protocol-impl",null,"~:arglists-meta",["^1?",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^1?",["~$defn","^6<",["^6@","^6A"],["^1?",["^1;","^63","^6@","^6A"]]]]],"~:variadic?",false,"^7",17,"~:ret-tag","~$any","^9",17,"~:max-fixed-arity",2,"~:fn-var",true,"^6>",["^1?",["^6?",["^1?",[["^6@","^6A"]]]]]],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",23,"^8",6,"^9",23,"^:",11],"^K","^20","^6","re_frame/fx.cljc","^:",11,"^8",1,"^64",["^ ","^65","^66","^67",["^1?",["^68","^6K","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.",["^1?",["^17","~:id","~:do-fx","~:after",["^1?",["~$fn","~$do-fx-after",["~$context"],["^1?",["~$trace/with-trace",["^ ","~:op-type","~:event/do-fx"],["^1?",["~$let",["~$effects",["^1?",["~:effects","^6Q"]],"~$effects-without-db",["^1?",["~$dissoc","^6V","~:db"]]],["^1?",["~$when-let",["~$new-db",["^1?",["^6Z","^6V"]]],["^1?",[["^1?",["^19","^63","^6Z",false]],"^70"]]]],["^1?",["~$doseq",[["~$effect-key","~$effect-value"],"^6X"],["^1?",["~$if-let",["~$effect-fn",["^1?",["^19","^63","^72",false]]],["^1?",["^75","^73"]],["^1?",["^1<","~:warn","re-frame: no handler registered for effect:","^72",". Ignoring.",["^1?",["~$when",["^1?",["~$=","~:event","^72"]],["^1?",["~$str","You may be trying to return a coeffect map from an event-fx handler. ","See https://day8.github.io/re-frame/use-cofx-as-fx/"]]]]]]]]]]]]]]]]]]]]],"^7",23,"^9",23,"^6:",["^J",["~$clj","^6H","~$cljs.core/IMap"]],"~:doc","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first."],"~$dispatch-later",["^ ","^6=",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",84,"^8",7,"^9",84,"^:",21,"^6>",["^1?",["^6?",["^1?",[[["^ ","~:keys",["~$ms","~$dispatch"],"^1A","~$effect"]]]]]]],"^K","^2>","^6","re_frame/fx.cljc","^:",21,"^6B",["^1?",[["~$p__21036"]]],"^6C",null,"^6D",["^1?",[null,null]],"^8",1,"^64",["^ ","^65","^66","^67",["^1?",["^6E","^7=",[["^ ","^7>",["^7?","^7@"],"^1A","^7A"]],["^1?",["~$if",["^1?",["~$or",["^1?",["~$empty?","^7@"]],["^1?",["~$not",["^1?",["~$number?","^7?"]]]]]],["^1?",["^1<","~:error","re-frame: ignoring bad :dispatch-later value:","^7A"]],["^1?",["^18",["^1?",["~$fn*",[],["^1?",["~$router/dispatch","^7@"]]]],"^7?"]]]]]]],"^6F",false,"^7",84,"^6G",["^J",["^6H","^1P"]],"^9",84,"^6I",1,"^6J",true,"^6>",["^1?",["^6?",["^1?",[[["^ ","^7>",["^7?","^7@"],"^1A","^7A"]]]]]]]],"^1=",["^ ","^U","^U","^[","^U","^W","^W"],"~:cljs.analyzer/constants",["^ ","^13",["^J",["^6Z","~:reagent/quiescent","^76","^6M","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","^78","^6N","^6T","^6L","^6W","^7H","~:end","~:ms","^69","^6S","~:dispatch-later"]],"~:order",["^69","^6L","^6M","^6N","^6S","^6T","^7M","^7O","^7R","^6W","^6Z","^76","^78","^7S","^7Q","^7H","^7T","^7N","^7P","^7L"]],"^1D",["^ ","^14",["^J",[]]],"^1E",["^ "],"^1F",["^X","^W","^Z","^12","^S","^R","^T","^V","^11","^U"]],"^O","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^2[",[["^7X","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^7X","~:shadow-tweaks"],null,["^7X","~:source-map-inline"],null,["^7X","~:shadow-optimize-constants"],null,["^7X","~:elide-asserts"],false,["^7X","~:optimize-constants"],null,["^7X","^1K"],null,["^7X","~:external-config"],null,["^7X","~:tooling-config"],null,["^7X","~:emit-constants"],null,["^7X","~:load-tests"],null,["^7X","~:form-size-threshold"],null,["^7X","~:global-goog-object&array"],null,["^7X","~:data-readers"],null,["^7X","~:infer-externs"],"~:auto",["^7X","^1M"],null,["^7Z","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7X","~:fn-invoke-direct"],null,["^7X","~:source-map"],"/dev/null"]]]