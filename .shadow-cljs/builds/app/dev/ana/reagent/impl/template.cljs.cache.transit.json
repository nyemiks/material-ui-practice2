["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.template');\r\ngoog.scope(function(){\r\n  reagent.impl.template.goog$module$goog$object = goog.module.get('goog.object');\r\n});\r\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\r\n/**\r\n * Regular expression that parses a CSS-style id and class\r\n *           from a tag name.\r\n */\r\nreagent.impl.template.re_tag = /([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?/;\r\n\r\n/**\r\n* @constructor\r\n*/\r\nreagent.impl.template.NativeWrapper = (function (tag,id,className){\r\nthis.tag = tag;\r\nthis.id = id;\r\nthis.className = className;\r\n});\r\n\r\n(reagent.impl.template.NativeWrapper.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"className\",\"className\",-342755530,null)], null);\r\n}));\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$type = true);\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorStr = \"reagent.impl.template/NativeWrapper\");\r\n\r\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter = (function (this__5287__auto__,writer__5288__auto__,opt__5289__auto__){\r\nreturn cljs.core._write(writer__5288__auto__,\"reagent.impl.template/NativeWrapper\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.impl.template/NativeWrapper.\r\n */\r\nreagent.impl.template.__GT_NativeWrapper = (function reagent$impl$template$__GT_NativeWrapper(tag,id,className){\r\nreturn (new reagent.impl.template.NativeWrapper(tag,id,className));\r\n});\r\n\r\nreagent.impl.template.adapt_react_class = (function reagent$impl$template$adapt_react_class(c){\r\nreturn reagent.impl.template.__GT_NativeWrapper(c,null,null);\r\n});\r\nreagent.impl.template.hiccup_tag_QMARK_ = (function reagent$impl$template$hiccup_tag_QMARK_(x){\r\nreturn ((reagent.impl.util.named_QMARK_(x)) || (typeof x === 'string'));\r\n});\r\nreagent.impl.template.valid_tag_QMARK_ = (function reagent$impl$template$valid_tag_QMARK_(x){\r\nreturn ((reagent.impl.template.hiccup_tag_QMARK_(x)) || (((cljs.core.ifn_QMARK_(x)) || ((x instanceof reagent.impl.template.NativeWrapper)))));\r\n});\r\nreagent.impl.template.prop_name_cache = ({\"class\": \"className\", \"for\": \"htmlFor\", \"charset\": \"charSet\"});\r\nreagent.impl.template.cache_get = (function reagent$impl$template$cache_get(o,k){\r\nif(o.hasOwnProperty(k)){\r\nreturn reagent.impl.template.goog$module$goog$object.get(o,k);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreagent.impl.template.cached_prop_name = (function reagent$impl$template$cached_prop_name(k){\r\nif(reagent.impl.util.named_QMARK_(k)){\r\nvar temp__5806__auto__ = reagent.impl.template.cache_get(reagent.impl.template.prop_name_cache,cljs.core.name(k));\r\nif((temp__5806__auto__ == null)){\r\nvar v = reagent.impl.util.dash_to_prop_name(k);\r\nreagent.impl.template.goog$module$goog$object.set(reagent.impl.template.prop_name_cache,cljs.core.name(k),v);\r\n\r\nreturn v;\r\n} else {\r\nvar k_SINGLEQUOTE_ = temp__5806__auto__;\r\nreturn k_SINGLEQUOTE_;\r\n}\r\n} else {\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.kv_conv = (function reagent$impl$template$kv_conv(o,k,v){\r\nvar G__19938 = o;\r\nreagent.impl.template.goog$module$goog$object.set(G__19938,reagent.impl.template.cached_prop_name(k),(reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : reagent.impl.template.convert_prop_value.call(null, v)));\r\n\r\nreturn G__19938;\r\n});\r\nreagent.impl.template.convert_prop_value = (function reagent$impl$template$convert_prop_value(x){\r\nif(reagent.impl.util.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(reagent.impl.util.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.reduce_kv(reagent.impl.template.kv_conv,({}),x);\r\n} else {\r\nif(cljs.core.coll_QMARK_(x)){\r\nreturn cljs.core.clj__GT_js(x);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(x)){\r\nreturn (function() { \r\nvar G__19956__delegate = function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\r\n};\r\nvar G__19956 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__19957__i = 0, G__19957__a = new Array(arguments.length -  0);\r\nwhile (G__19957__i < G__19957__a.length) {G__19957__a[G__19957__i] = arguments[G__19957__i + 0]; ++G__19957__i;}\r\n  args = new cljs.core.IndexedSeq(G__19957__a,0,null);\r\n} \r\nreturn G__19956__delegate.call(this,args);};\r\nG__19956.cljs$lang$maxFixedArity = 0;\r\nG__19956.cljs$lang$applyTo = (function (arglist__19958){\r\nvar args = cljs.core.seq(arglist__19958);\r\nreturn G__19956__delegate(args);\r\n});\r\nG__19956.cljs$core$IFn$_invoke$arity$variadic = G__19956__delegate;\r\nreturn G__19956;\r\n})()\r\n;\r\n} else {\r\nreturn cljs.core.clj__GT_js(x);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nreagent.impl.template.custom_prop_name_cache = ({});\r\nreagent.impl.template.cached_custom_prop_name = (function reagent$impl$template$cached_custom_prop_name(k){\r\nif(reagent.impl.util.named_QMARK_(k)){\r\nvar temp__5806__auto__ = reagent.impl.template.cache_get(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k));\r\nif((temp__5806__auto__ == null)){\r\nvar v = reagent.impl.util.dash_to_prop_name(k);\r\nreagent.impl.template.goog$module$goog$object.set(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k),v);\r\n\r\nreturn v;\r\n} else {\r\nvar k_SINGLEQUOTE_ = temp__5806__auto__;\r\nreturn k_SINGLEQUOTE_;\r\n}\r\n} else {\r\nreturn k;\r\n}\r\n});\r\nreagent.impl.template.custom_kv_conv = (function reagent$impl$template$custom_kv_conv(o,k,v){\r\nvar G__19939 = o;\r\nreagent.impl.template.goog$module$goog$object.set(G__19939,reagent.impl.template.cached_custom_prop_name(k),reagent.impl.template.convert_prop_value(v));\r\n\r\nreturn G__19939;\r\n});\r\nreagent.impl.template.convert_custom_prop_value = (function reagent$impl$template$convert_custom_prop_value(x){\r\nif(reagent.impl.util.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(reagent.impl.util.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif(cljs.core.map_QMARK_(x)){\r\nreturn cljs.core.reduce_kv(reagent.impl.template.custom_kv_conv,({}),x);\r\n} else {\r\nif(cljs.core.coll_QMARK_(x)){\r\nreturn cljs.core.clj__GT_js(x);\r\n} else {\r\nif(cljs.core.ifn_QMARK_(x)){\r\nreturn (function() { \r\nvar G__19959__delegate = function (args){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\r\n};\r\nvar G__19959 = function (var_args){\r\nvar args = null;\r\nif (arguments.length > 0) {\r\nvar G__19960__i = 0, G__19960__a = new Array(arguments.length -  0);\r\nwhile (G__19960__i < G__19960__a.length) {G__19960__a[G__19960__i] = arguments[G__19960__i + 0]; ++G__19960__i;}\r\n  args = new cljs.core.IndexedSeq(G__19960__a,0,null);\r\n} \r\nreturn G__19959__delegate.call(this,args);};\r\nG__19959.cljs$lang$maxFixedArity = 0;\r\nG__19959.cljs$lang$applyTo = (function (arglist__19961){\r\nvar args = cljs.core.seq(arglist__19961);\r\nreturn G__19959__delegate(args);\r\n});\r\nG__19959.cljs$core$IFn$_invoke$arity$variadic = G__19959__delegate;\r\nreturn G__19959;\r\n})()\r\n;\r\n} else {\r\nreturn cljs.core.clj__GT_js(x);\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n/**\r\n * Takes the id and class from tag keyword, and adds them to the\r\n *   other props. Parsed tag is JS object with :id and :class properties.\r\n */\r\nreagent.impl.template.set_id_class = (function reagent$impl$template$set_id_class(props,id_class){\r\nvar id = id_class.id;\r\nvar class$ = id_class.className;\r\nvar G__19940 = props;\r\nvar G__19940__$1 = (((((!((id == null)))) && ((new cljs.core.Keyword(null,\"id\",\"id\",-1388402092).cljs$core$IFn$_invoke$arity$1(props) == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__19940,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),id):G__19940);\r\nif(cljs.core.truth_(class$)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__19940__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(class$,(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props);\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"className\",\"className\",-1983287057).cljs$core$IFn$_invoke$arity$1(props);\r\n}\r\n})()));\r\n} else {\r\nreturn G__19940__$1;\r\n}\r\n});\r\nreagent.impl.template.convert_props = (function reagent$impl$template$convert_props(props,id_class){\r\nvar class$ = new cljs.core.Keyword(null,\"class\",\"class\",-2030961996).cljs$core$IFn$_invoke$arity$1(props);\r\nvar props__$1 = reagent.impl.template.set_id_class((function (){var G__19941 = props;\r\nif(cljs.core.truth_(class$)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__19941,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(class$));\r\n} else {\r\nreturn G__19941;\r\n}\r\n})(),id_class);\r\nif(cljs.core.truth_(id_class.custom)){\r\nreturn reagent.impl.template.convert_custom_prop_value(props__$1);\r\n} else {\r\nreturn reagent.impl.template.convert_prop_value(props__$1);\r\n}\r\n});\r\nreagent.impl.template.make_element = (function reagent$impl$template$make_element(this$,argv,component,jsprops,first_child){\r\nvar G__19942 = (cljs.core.count(argv) - first_child);\r\nswitch (G__19942) {\r\ncase (0):\r\nreturn module$node_modules$react$index.createElement(component,jsprops);\r\n\r\nbreak;\r\ncase (1):\r\nreturn module$node_modules$react$index.createElement(component,jsprops,reagent.impl.protocols.as_element(this$,cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first_child,null)));\r\n\r\nbreak;\r\ndefault:\r\nreturn module$node_modules$react$index.createElement.apply(null,cljs.core.reduce_kv((function (a,k,v){\r\nif((k >= first_child)){\r\na.push(reagent.impl.protocols.as_element(this$,v));\r\n} else {\r\n}\r\n\r\nreturn a;\r\n}),[component,jsprops],argv));\r\n\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n*/\r\nreagent.impl.template.HiccupTag = (function (tag,id,className,custom){\r\nthis.tag = tag;\r\nthis.id = id;\r\nthis.className = className;\r\nthis.custom = custom;\r\n});\r\n\r\n(reagent.impl.template.HiccupTag.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"className\",\"className\",-342755530,null),new cljs.core.Symbol(null,\"custom\",\"custom\",1980683475,null)], null);\r\n}));\r\n\r\n(reagent.impl.template.HiccupTag.cljs$lang$type = true);\r\n\r\n(reagent.impl.template.HiccupTag.cljs$lang$ctorStr = \"reagent.impl.template/HiccupTag\");\r\n\r\n(reagent.impl.template.HiccupTag.cljs$lang$ctorPrWriter = (function (this__5287__auto__,writer__5288__auto__,opt__5289__auto__){\r\nreturn cljs.core._write(writer__5288__auto__,\"reagent.impl.template/HiccupTag\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.impl.template/HiccupTag.\r\n */\r\nreagent.impl.template.__GT_HiccupTag = (function reagent$impl$template$__GT_HiccupTag(tag,id,className,custom){\r\nreturn (new reagent.impl.template.HiccupTag(tag,id,className,custom));\r\n});\r\n\r\nreagent.impl.template.parse_tag = (function reagent$impl$template$parse_tag(hiccup_tag){\r\nvar vec__19943 = cljs.core.next(cljs.core.re_matches(reagent.impl.template.re_tag,cljs.core.name(hiccup_tag)));\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19943,(0),null);\r\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19943,(1),null);\r\nvar className = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19943,(2),null);\r\nvar className__$1 = (((className == null))?null:clojure.string.replace(className,/\\./,\" \"));\r\nif(cljs.core.truth_(tag)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"Invalid tag: '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccup_tag),\"'\",reagent.impl.component.comp_name()].join(''),\"\\n\",\"tag\"].join('')));\r\n}\r\n\r\nreturn reagent.impl.template.__GT_HiccupTag(tag,id,className__$1,cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((-1),tag.indexOf(\"-\")));\r\n});\r\nreagent.impl.template.reag_element = (function reagent$impl$template$reag_element(tag,v,compiler){\r\nvar c = reagent.impl.component.as_class(tag,compiler);\r\nvar jsprops = ({});\r\n(jsprops.argv = v);\r\n\r\nvar temp__5808__auto___19963 = reagent.impl.util.react_key_from_vec(v);\r\nif((temp__5808__auto___19963 == null)){\r\n} else {\r\nvar key_19964 = temp__5808__auto___19963;\r\n(jsprops.key = key_19964);\r\n}\r\n\r\nreturn module$node_modules$react$index.createElement(c,jsprops);\r\n});\r\nreagent.impl.template.function_element = (function reagent$impl$template$function_element(tag,v,first_arg,compiler){\r\nvar jsprops = ({});\r\n(jsprops.reagentRender = tag);\r\n\r\n(jsprops.argv = cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_arg));\r\n\r\nvar temp__5808__auto___19965 = reagent.impl.util.react_key_from_vec(v);\r\nif((temp__5808__auto___19965 == null)){\r\n} else {\r\nvar key_19966 = temp__5808__auto___19965;\r\n(jsprops.key = key_19966);\r\n}\r\n\r\nreturn module$node_modules$react$index.createElement(reagent.impl.component.functional_render_fn(compiler,tag),jsprops);\r\n});\r\n/**\r\n * If given tag is a Class, use it as a class,\r\n *   else wrap in Reagent function wrapper.\r\n */\r\nreagent.impl.template.maybe_function_element = (function reagent$impl$template$maybe_function_element(tag,v,compiler){\r\nif(reagent.impl.component.react_class_QMARK_(tag)){\r\nreturn reagent.impl.template.reag_element(tag,v,compiler);\r\n} else {\r\nreturn reagent.impl.template.function_element(tag,v,(1),compiler);\r\n}\r\n});\r\nreagent.impl.template.fragment_element = (function reagent$impl$template$fragment_element(argv,compiler){\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(1),null);\r\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\r\nvar jsprops = (function (){var or__5002__auto__ = reagent.impl.template.convert_prop_value(((hasprops)?props:null));\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn ({});\r\n}\r\n})();\r\nvar first_child = ((1) + ((hasprops)?(1):(0)));\r\nvar temp__5808__auto___19967 = reagent.impl.util.react_key_from_vec(argv);\r\nif((temp__5808__auto___19967 == null)){\r\n} else {\r\nvar key_19968 = temp__5808__auto___19967;\r\n(jsprops.key = key_19968);\r\n}\r\n\r\nreturn reagent.impl.protocols.make_element(compiler,argv,module$node_modules$react$index.Fragment,jsprops,first_child);\r\n});\r\nreagent.impl.template.tag_name_cache = ({});\r\nreagent.impl.template.cached_parse = (function reagent$impl$template$cached_parse(this$,x,_){\r\nvar temp__5806__auto__ = reagent.impl.template.cache_get(reagent.impl.template.tag_name_cache,x);\r\nif((temp__5806__auto__ == null)){\r\nvar v = reagent.impl.template.parse_tag(x);\r\nreagent.impl.template.goog$module$goog$object.set(reagent.impl.template.tag_name_cache,x,v);\r\n\r\nreturn v;\r\n} else {\r\nvar s = temp__5806__auto__;\r\nreturn s;\r\n}\r\n});\r\nreagent.impl.template.native_element = (function reagent$impl$template$native_element(parsed,argv,first,compiler){\r\nvar component = parsed.tag;\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first,null);\r\nvar hasprops = (((props == null)) || (cljs.core.map_QMARK_(props)));\r\nvar jsprops = (function (){var or__5002__auto__ = reagent.impl.template.convert_props(((hasprops)?props:null),parsed);\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn ({});\r\n}\r\n})();\r\nvar first_child = (first + ((hasprops)?(1):(0)));\r\nif(reagent.impl.input.input_component_QMARK_(component)){\r\nvar react_key = reagent.impl.util.get_react_key(props);\r\nvar input_class = (function (){var or__5002__auto__ = compiler.reagentInput;\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nvar x = reagent.impl.component.create_class(reagent.impl.input.input_spec,compiler);\r\n(compiler.reagentInput = x);\r\n\r\nreturn x;\r\n}\r\n})();\r\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.with_meta(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_class,argv,component,jsprops,first_child,compiler], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(react_key)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),react_key], null):null),cljs.core.meta(argv)], 0))));\r\n} else {\r\nvar temp__5808__auto___19969 = reagent.impl.util.get_react_key(cljs.core.meta(argv));\r\nif((temp__5808__auto___19969 == null)){\r\n} else {\r\nvar key_19970 = temp__5808__auto___19969;\r\n(jsprops.key = key_19970);\r\n}\r\n\r\nreturn reagent.impl.protocols.make_element(compiler,argv,component,jsprops,first_child);\r\n}\r\n});\r\nreagent.impl.template.raw_element = (function reagent$impl$template$raw_element(comp,argv,compiler){\r\nvar props = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(2),null);\r\nvar jsprops = (function (){var or__5002__auto__ = props;\r\nif(cljs.core.truth_(or__5002__auto__)){\r\nreturn or__5002__auto__;\r\n} else {\r\nreturn ({});\r\n}\r\n})();\r\nvar temp__5808__auto___19971 = reagent.impl.util.get_react_key(cljs.core.meta(argv));\r\nif((temp__5808__auto___19971 == null)){\r\n} else {\r\nvar key_19972 = temp__5808__auto___19971;\r\n(jsprops.key = key_19972);\r\n}\r\n\r\nreturn reagent.impl.protocols.make_element(compiler,argv,comp,jsprops,(3));\r\n});\r\nreagent.impl.template.expand_seq = (function reagent$impl$template$expand_seq(s,compiler){\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__19946_SHARP_){\r\nreturn reagent.impl.protocols.as_element(compiler,p1__19946_SHARP_);\r\n}),s));\r\n});\r\nreagent.impl.template.expand_seq_dev = (function reagent$impl$template$expand_seq_dev(s,o,compiler){\r\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (val){\r\nif(((cljs.core.vector_QMARK_(val)) && ((reagent.impl.util.react_key_from_vec(val) == null)))){\r\n(o.no_key = true);\r\n} else {\r\n}\r\n\r\nreturn reagent.impl.protocols.as_element(compiler,val);\r\n}),s));\r\n});\r\nreagent.impl.template.expand_seq_check = (function reagent$impl$template$expand_seq_check(x,compiler){\r\nvar ctx = ({});\r\nvar vec__19947 = reagent.ratom.check_derefs((function (){\r\nreturn reagent.impl.template.expand_seq_dev(x,ctx,compiler);\r\n}));\r\nvar res = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19947,(0),null);\r\nvar derefed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19947,(1),null);\r\nif(cljs.core.truth_(derefed)){\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Reactive deref not supported in lazy seq, \",\"it should be wrapped in doall\"], 0))].join(''));\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\nif(cljs.core.truth_(ctx.no_key)){\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Every element in a seq should have a unique :key\"], 0))].join(''));\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\nreturn res;\r\n});\r\nreagent.impl.template.hiccup_element = (function reagent$impl$template$hiccup_element(v,compiler){\r\nwhile(true){\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\r\nvar n = cljs.core.name(tag);\r\nvar pos = n.indexOf(\">\");\r\nvar G__19950 = pos;\r\nswitch (G__19950) {\r\ncase (-1):\r\nreturn reagent.impl.template.native_element(reagent.impl.protocols.parse_tag(compiler,n,tag),v,(1),compiler);\r\n\r\nbreak;\r\ncase (0):\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\">\",n)){\r\nreturn null;\r\n} else {\r\nthrow (new Error([\"Assert failed: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup tag\"], 0)),\"\\n\",\"(= \\\">\\\" n)\"].join('')));\r\n}\r\n\r\nbreak;\r\ndefault:\r\nvar G__19974 = cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(n,(0),pos),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(v,null),(0),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(n,(pos + (1))))], null),cljs.core.meta(v));\r\nvar G__19975 = compiler;\r\nv = G__19974;\r\ncompiler = G__19975;\r\ncontinue;\r\n\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.impl.template.vec_to_elem = (function reagent$impl$template$vec_to_elem(v,compiler,fn_to_element){\r\nif((compiler == null)){\r\nconsole.error(\"vec-to-elem\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0)));\r\n} else {\r\n}\r\n\r\nif((cljs.core.count(v) > (0))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Hiccup form should not be empty\"], 0)),\"\\n\",\"(pos? (count v))\"].join('')));\r\n}\r\n\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\r\nif(reagent.impl.template.valid_tag_QMARK_(tag)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"Invalid Hiccup form\"], 0)),\"\\n\",\"(valid-tag? tag)\"].join('')));\r\n}\r\n\r\nvar G__19951 = tag;\r\nvar G__19951__$1 = (((G__19951 instanceof cljs.core.Keyword))?G__19951.fqn:null);\r\nswitch (G__19951__$1) {\r\ncase \">\":\r\nreturn reagent.impl.template.native_element(reagent.impl.template.__GT_HiccupTag(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),null,null,null),v,(2),compiler);\r\n\r\nbreak;\r\ncase \"r>\":\r\nreturn reagent.impl.template.raw_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),v,compiler);\r\n\r\nbreak;\r\ncase \"f>\":\r\nreturn reagent.impl.template.function_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),v,(2),compiler);\r\n\r\nbreak;\r\ncase \"<>\":\r\nreturn reagent.impl.template.fragment_element(v,compiler);\r\n\r\nbreak;\r\ndefault:\r\nif(reagent.impl.template.hiccup_tag_QMARK_(tag)){\r\nreturn reagent.impl.template.hiccup_element(v,compiler);\r\n} else {\r\nif((tag instanceof reagent.impl.template.NativeWrapper)){\r\nreturn reagent.impl.template.native_element(tag,v,(1),compiler);\r\n} else {\r\nreturn (fn_to_element.cljs$core$IFn$_invoke$arity$3 ? fn_to_element.cljs$core$IFn$_invoke$arity$3(tag,v,compiler) : fn_to_element.call(null, tag,v,compiler));\r\n\r\n}\r\n}\r\n\r\n}\r\n});\r\nreagent.impl.template.as_element = (function reagent$impl$template$as_element(this$,x,fn_to_element){\r\nif(reagent.impl.util.js_val_QMARK_(x)){\r\nreturn x;\r\n} else {\r\nif(cljs.core.vector_QMARK_(x)){\r\nreturn reagent.impl.template.vec_to_elem(x,this$,fn_to_element);\r\n} else {\r\nif(cljs.core.seq_QMARK_(x)){\r\nreturn reagent.impl.template.expand_seq_check(x,this$);\r\n\r\n} else {\r\nif(reagent.impl.util.named_QMARK_(x)){\r\nreturn cljs.core.name(x);\r\n} else {\r\nif((((!((x == null))))?(((((x.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPrintWithWriter$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x))){\r\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\r\n} else {\r\nreturn x;\r\n\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {reagent.impl.protocols.Compiler}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\nreagent.impl.template.t_reagent$impl$template19953 = (function (opts,id,fn_to_element,parse_fn,meta19954){\r\nthis.opts = opts;\r\nthis.id = id;\r\nthis.fn_to_element = fn_to_element;\r\nthis.parse_fn = parse_fn;\r\nthis.meta19954 = meta19954;\r\nthis.cljs$lang$protocol_mask$partition0$ = 393216;\r\nthis.cljs$lang$protocol_mask$partition1$ = 0;\r\n});\r\n(reagent.impl.template.t_reagent$impl$template19953.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_19955,meta19954__$1){\r\nvar self__ = this;\r\nvar _19955__$1 = this;\r\nreturn (new reagent.impl.template.t_reagent$impl$template19953(self__.opts,self__.id,self__.fn_to_element,self__.parse_fn,meta19954__$1));\r\n}));\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_19955){\r\nvar self__ = this;\r\nvar _19955__$1 = this;\r\nreturn self__.meta19954;\r\n}));\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.prototype.reagent$impl$protocols$Compiler$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.prototype.reagent$impl$protocols$Compiler$get_id$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn self__.id;\r\n}));\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.prototype.reagent$impl$protocols$Compiler$parse_tag$arity$3 = (function (this$,tag_name,tag_value){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn (self__.parse_fn.cljs$core$IFn$_invoke$arity$3 ? self__.parse_fn.cljs$core$IFn$_invoke$arity$3(this$__$1,tag_name,tag_value) : self__.parse_fn.call(null, this$__$1,tag_name,tag_value));\r\n}));\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.prototype.reagent$impl$protocols$Compiler$as_element$arity$2 = (function (this$,x){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.impl.template.as_element(this$__$1,x,self__.fn_to_element);\r\n}));\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.prototype.reagent$impl$protocols$Compiler$make_element$arity$5 = (function (this$,argv,component,jsprops,first_child){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.impl.template.make_element(this$__$1,argv,component,jsprops,first_child);\r\n}));\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"opts\",\"opts\",1795607228,null),new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"fn-to-element\",\"fn-to-element\",-1764467095,null),new cljs.core.Symbol(null,\"parse-fn\",\"parse-fn\",-836029424,null),new cljs.core.Symbol(null,\"meta19954\",\"meta19954\",-1242786373,null)], null);\r\n}));\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.cljs$lang$type = true);\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.cljs$lang$ctorStr = \"reagent.impl.template/t_reagent$impl$template19953\");\r\n\r\n(reagent.impl.template.t_reagent$impl$template19953.cljs$lang$ctorPrWriter = (function (this__5287__auto__,writer__5288__auto__,opt__5289__auto__){\r\nreturn cljs.core._write(writer__5288__auto__,\"reagent.impl.template/t_reagent$impl$template19953\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.impl.template/t_reagent$impl$template19953.\r\n */\r\nreagent.impl.template.__GT_t_reagent$impl$template19953 = (function reagent$impl$template$__GT_t_reagent$impl$template19953(opts,id,fn_to_element,parse_fn,meta19954){\r\nreturn (new reagent.impl.template.t_reagent$impl$template19953(opts,id,fn_to_element,parse_fn,meta19954));\r\n});\r\n\r\n\r\nreagent.impl.template.create_compiler = (function reagent$impl$template$create_compiler(opts){\r\nvar id = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"reagent-compiler\");\r\nvar fn_to_element = (cljs.core.truth_(new cljs.core.Keyword(null,\"function-components\",\"function-components\",1492814963).cljs$core$IFn$_invoke$arity$1(opts))?reagent.impl.template.maybe_function_element:reagent.impl.template.reag_element);\r\nvar parse_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"parse-tag\",\"parse-tag\",1427313738),reagent.impl.template.cached_parse);\r\nreturn (new reagent.impl.template.t_reagent$impl$template19953(opts,id,fn_to_element,parse_fn,cljs.core.PersistentArrayMap.EMPTY));\r\n});\r\nreagent.impl.template.class_compiler = reagent.impl.template.create_compiler(cljs.core.PersistentArrayMap.EMPTY);\r\nreagent.impl.template._STAR_current_default_compiler_STAR_ = reagent.impl.template.class_compiler;\r\nreagent.impl.template.set_default_compiler_BANG_ = (function reagent$impl$template$set_default_compiler_BANG_(compiler){\r\nreturn (reagent.impl.template._STAR_current_default_compiler_STAR_ = compiler);\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/template.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",26],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react-dom","~$module$node_modules$react_dom$index","~$react","~$module$node_modules$react$index","~$searchappbar","~$module$node_modules$searchappbar$dist$index"],"~:use-macros",["^ ","~$dev?","~$reagent.debug","~$warn","^J"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.template","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$input","~$reagent.impl.input","~$reagent.impl.util","^W","~$reagent.impl.protocols","^X","~$p","^X","~$comp","~$reagent.impl.component","~$reagent.ratom","^[","^D","^E","~$cljs.core","^10","^E","^E","~$gobj","~$goog.object","~$goog","^13","^12","^12","^Z","^Z","~$util","^W","~$ratom","^[","~$string","~$clojure.string","^V","^V","^J","^J","^17","^17"],"~:seen",["^M",["~:require"]],"~:uses",["^ ","~$named?","^W"],"~:require-macros",["^ ","^J","^J","^10","^10","^[","^[","^15","^["],"~:form",["~#list",["~$ns","^O",["^1>",["^19",["^D","~:as","^D"],["^17","^1@","^16"],["^W","^1@","^14","~:refer",["^1;"]],["^Z","^1@","^Y"],["^V","^1@","^U"],["^X","^1@","~$p"],["^[","^1@","^15"],["^J","~:refer-macros",["^I","^K"]],["^12","^1@","^11"]]]]],"~:flags",["^ ","^19",["^M",[]]],"~:js-deps",["^ "],"~:deps",["^13","^10","^E","^17","^W","^Z","^V","^X","^[","^J","^12"]],"^R","^O","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/template.cljs"],"~:compiled-at",1712868671982,"^P",["^ ","^U","^V","^W","^W","^X","^X","~$p","^X","^Y","^Z","^[","^[","^D","^E","^10","^10","^E","^E","^11","^12","^13","^13","^12","^12","^Z","^Z","^14","^W","^15","^[","^16","^17","^V","^V","^J","^J","^17","^17"],"~:resource-name","reagent/impl/template.cljs","~:warnings",[],"~:source","(ns reagent.impl.template\n  (:require [react :as react]\n            [clojure.string :as string]\n            [reagent.impl.util :as util :refer [named?]]\n            [reagent.impl.component :as comp]\n            [reagent.impl.input :as input]\n            [reagent.impl.protocols :as p]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dev? warn]]\n            [goog.object :as gobj]))\n\n;; From Weavejester's Hiccup, via pump:\n(def ^{:doc \"Regular expression that parses a CSS-style id and class\n             from a tag name.\"}\n  re-tag #\"([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?\")\n\n(deftype NativeWrapper [tag id className])\n\n(defn adapt-react-class\n  [c]\n  (->NativeWrapper c nil nil))\n\n;;; Common utilities\n\n(defn ^boolean hiccup-tag? [x]\n  (or (named? x)\n      (string? x)))\n\n(defn ^boolean valid-tag? [x]\n  (or (hiccup-tag? x)\n      (ifn? x)\n      (instance? NativeWrapper x)))\n\n;;; Props conversion\n\n;; TODO: Move prop-name caches to the compiler object, if this\n;; conversion can be configured.\n\n(def prop-name-cache #js{:class \"className\"\n                         :for \"htmlFor\"\n                         :charset \"charSet\"})\n\n(defn cache-get [o k]\n  (when ^boolean (.hasOwnProperty o k)\n    (gobj/get o k)))\n\n(defn cached-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get prop-name-cache (name k))]\n      k'\n      (let [v (util/dash-to-prop-name k)]\n        (gobj/set prop-name-cache (name k) v)\n        v))\n    k))\n\n(declare convert-prop-value)\n\n(defn kv-conv [o k v]\n  (doto o\n    (gobj/set (cached-prop-name k) (convert-prop-value v))))\n\n(defn convert-prop-value [x]\n  (cond (util/js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n;; Previous few functions copied for custom elements,\n;; without mapping from class to className etc.\n\n(def custom-prop-name-cache #js{})\n\n(defn cached-custom-prop-name [k]\n  (if (named? k)\n    (if-some [k' (cache-get custom-prop-name-cache (name k))]\n      k'\n      (let [v (util/dash-to-prop-name k)]\n        (gobj/set custom-prop-name-cache (name k) v)\n        v))\n    k))\n\n(defn custom-kv-conv [o k v]\n  (doto o\n    (gobj/set (cached-custom-prop-name k) (convert-prop-value v))))\n\n(defn convert-custom-prop-value [x]\n  (cond (util/js-val? x) x\n        (named? x) (name x)\n        (map? x) (reduce-kv custom-kv-conv #js{} x)\n        (coll? x) (clj->js x)\n        (ifn? x) (fn [& args]\n                   (apply x args))\n        :else (clj->js x)))\n\n(defn set-id-class\n  \"Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties.\"\n  [props id-class]\n  (let [id (.-id id-class)\n        class (.-className id-class)]\n    (cond-> props\n      ;; Only use ID from tag keyword if no :id in props already\n      (and (some? id)\n           (nil? (:id props)))\n      (assoc :id id)\n\n      ;; Merge classes\n      class\n      ;; Note: someone might use React-style :className property,\n      ;; this is the only place where that needs special case. Using\n      ;; :class and :className together is not supported.\n      (assoc :class (util/class-names class (or (:class props) (:className props)))))))\n\n(defn convert-props [props ^clj id-class]\n  (let [class (:class props)\n        props (-> props\n                  (cond-> class (assoc :class (util/class-names class)))\n                  (set-id-class id-class))]\n    (if (.-custom id-class)\n      (convert-custom-prop-value props)\n      (convert-prop-value props))))\n\n;;; Conversion from Hiccup forms\n\n(defn make-element [this argv component jsprops first-child]\n  (case (- (count argv) first-child)\n    ;; Optimize cases of zero or one child\n    0 (react/createElement component jsprops)\n\n    1 (react/createElement component jsprops\n                           (p/as-element this (nth argv first-child nil)))\n\n    (.apply react/createElement nil\n            (reduce-kv (fn [a k v]\n                         (when (>= k first-child)\n                          (.push a (p/as-element this v)))\n                         a)\n                       #js [component jsprops] argv))))\n\n(deftype HiccupTag [tag id className custom])\n\n(defn parse-tag [hiccup-tag]\n  (let [[tag id className] (->> hiccup-tag name (re-matches re-tag) next)\n        className (when-not (nil? className)\n                    (string/replace className #\"\\.\" \" \"))]\n    (assert tag (str \"Invalid tag: '\" hiccup-tag \"'\" (comp/comp-name)))\n    (->HiccupTag tag\n                 id\n                 className\n                 ;; Custom element names must contain hyphen\n                 ;; https://www.w3.org/TR/custom-elements/#custom-elements-core-concepts\n                 (not= -1 (.indexOf tag \"-\")))))\n\n(defn reag-element [tag v compiler]\n  (let [c (comp/as-class tag compiler)\n        jsprops #js {}]\n    (set! (.-argv jsprops) v)\n    (when-some [key (util/react-key-from-vec v)]\n      (set! (.-key jsprops) key))\n    (react/createElement c jsprops)))\n\n(defn function-element [tag v first-arg compiler]\n  (let [jsprops #js {}]\n    (set! (.-reagentRender jsprops) tag)\n    (set! (.-argv jsprops) (subvec v first-arg))\n    ; (set! (.-opts jsprops) opts)\n    (when-some [key (util/react-key-from-vec v)]\n      (set! (.-key jsprops) key))\n    (react/createElement (comp/functional-render-fn compiler tag) jsprops)))\n\n(defn maybe-function-element\n  \"If given tag is a Class, use it as a class,\n  else wrap in Reagent function wrapper.\"\n  [tag v compiler]\n  (if (comp/react-class? tag)\n    (reag-element tag v compiler)\n    (function-element tag v 1 compiler)))\n\n(defn fragment-element [argv compiler]\n  (let [props (nth argv 1 nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (or (convert-prop-value (if hasprops props))\n                    #js {})\n        first-child (+ 1 (if hasprops 1 0))]\n    (when-some [key (util/react-key-from-vec argv)]\n      (set! (.-key jsprops) key))\n    (p/make-element compiler argv react/Fragment jsprops first-child)))\n\n(def tag-name-cache #js {})\n\n(defn cached-parse [this x _]\n  (if-some [s (cache-get tag-name-cache x)]\n    s\n    (let [v (parse-tag x)]\n      (gobj/set tag-name-cache x v)\n      v)))\n\n;; This is used for html elements (:h1, :input) and also React component with :>/adapt-react-class\n(defn native-element [parsed argv first ^p/Compiler compiler]\n  (let [component (.-tag parsed)\n        props (nth argv first nil)\n        hasprops (or (nil? props) (map? props))\n        jsprops (or (convert-props (if hasprops props) parsed)\n                    #js {})\n        first-child (+ first (if hasprops 1 0))]\n    (if (input/input-component? component)\n      (let [;; Also read :key from props map, because\n            ;; input wrapper will not place the key in useful place.\n            react-key (util/get-react-key props)\n            input-class (or (.-reagentInput compiler)\n                            (let [x (comp/create-class input/input-spec compiler)]\n                              (set! (.-reagentInput compiler) x)\n                              x))]\n        (p/as-element\n          compiler\n          (with-meta [input-class argv component jsprops first-child compiler]\n                     (merge (when react-key\n                              {:key react-key})\n                            (meta argv)))))\n      (do\n        (when-some [key (-> (meta argv) util/get-react-key)]\n          (set! (.-key jsprops) key))\n        (p/make-element compiler argv component jsprops first-child)))))\n\n(defn raw-element [comp argv compiler]\n  (let [props (nth argv 2 nil)\n        jsprops (or props #js {})]\n    ;; If we have key attached to vector metadata, copy that to the\n    ;; jsprops.\n    ;; Often the key is already on the jsprops.\n    (when-some [key (-> (meta argv) util/get-react-key)]\n      (set! (.-key jsprops) key))\n    (p/make-element compiler argv comp jsprops 3)))\n\n(defn expand-seq [s compiler]\n  (into-array (map #(p/as-element compiler %) s)))\n\n(defn expand-seq-dev [s ^clj o compiler]\n  (into-array (map (fn [val]\n                     (when (and (vector? val)\n                                (nil? (util/react-key-from-vec val)))\n                       (set! (.-no-key o) true))\n                     (p/as-element compiler val))\n                   s)))\n\n(defn expand-seq-check [x compiler]\n  (let [ctx #js {}\n        [res derefed] (ratom/check-derefs #(expand-seq-dev x ctx compiler))]\n    (when derefed\n      (warn (util/hiccup-err x (comp/comp-name) \"Reactive deref not supported in lazy seq, \"\n                        \"it should be wrapped in doall\")))\n    (when (.-no-key ctx)\n      (warn (util/hiccup-err x (comp/comp-name) \"Every element in a seq should have a unique :key\")))\n    res))\n\n(defn hiccup-element [v compiler]\n  (let [tag (nth v 0 nil)\n        n (name tag)\n        pos (.indexOf n \">\")]\n    (case pos\n      -1 (native-element (p/parse-tag compiler n tag) v 1 compiler)\n      0 (assert (= \">\" n) (util/hiccup-err v (comp/comp-name) \"Invalid Hiccup tag\"))\n      ;; Support extended hiccup syntax, i.e :div.bar>a.foo\n      ;; Apply metadata (e.g. :key) to the outermost element.\n      ;; Metadata is probably used only with sequeneces, and in that case\n      ;; only the key of the outermost element matters.\n      (recur (with-meta [(subs n 0 pos)\n                         (assoc (with-meta v nil) 0 (subs n (inc pos)))]\n                        (meta v))\n             compiler))))\n\n(defn vec-to-elem [v compiler fn-to-element]\n  (when (nil? compiler)\n    (js/console.error \"vec-to-elem\" (pr-str v)))\n  (assert (pos? (count v)) (util/hiccup-err v (comp/comp-name) \"Hiccup form should not be empty\"))\n  (let [tag (nth v 0 nil)]\n    (assert (valid-tag? tag) (util/hiccup-err v (comp/comp-name) \"Invalid Hiccup form\"))\n    (case tag\n      :> (native-element (->HiccupTag (nth v 1 nil) nil nil nil) v 2 compiler)\n      :r> (raw-element (nth v 1 nil) v compiler)\n      :f> (function-element (nth v 1 nil) v 2 compiler)\n      :<> (fragment-element v compiler)\n      (cond\n       (hiccup-tag? tag)\n       (hiccup-element v compiler)\n\n       (instance? NativeWrapper tag)\n       (native-element tag v 1 compiler)\n\n       :else (fn-to-element tag v compiler)))))\n\n(defn as-element [this x fn-to-element]\n  (cond (util/js-val? x) x\n        (vector? x) (vec-to-elem x this fn-to-element)\n        (seq? x) (if (dev?)\n                   (expand-seq-check x this)\n                   (expand-seq x this))\n        (named? x) (name x)\n        (satisfies? IPrintWithWriter x) (pr-str x)\n        :else x))\n\n(defn create-compiler [opts]\n  (let [id (gensym \"reagent-compiler\")\n        fn-to-element (if (:function-components opts)\n                        maybe-function-element\n                        reag-element)\n        parse-fn (get opts :parse-tag cached-parse)]\n\n    (reify p/Compiler\n      ;; This is used to as cache key to cache component fns per compiler\n      (get-id [this] id)\n      (parse-tag [this tag-name tag-value]\n        (parse-fn this tag-name tag-value))\n      (as-element [this x]\n        (as-element this x fn-to-element))\n      (make-element [this argv component jsprops first-child]\n        (make-element this argv component jsprops first-child)))))\n\n(def class-compiler (create-compiler {}))\n(def ^:dynamic *current-default-compiler* class-compiler)\n\n(defn set-default-compiler! [compiler]\n  (set! *current-default-compiler* compiler))\n","~:reader-features",["^M",["~:cljs"]],"~:used-var-namespaces",["^M",["^W","^X","^[","^10","~$js","^O","^Z","^V","^J","^17"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.template/re-tag","this__5287__auto__","writer__5288__auto__","opt__5289__auto__","cljs.core/-write","reagent.impl.template/NativeWrapper","reagent.impl.template/->NativeWrapper","tag","id","className","reagent.impl.template/adapt-react-class","c","reagent.impl.template/hiccup-tag?","x","reagent.impl.util/named?","reagent.impl.template/valid-tag?","cljs.core/ifn?","reagent.impl.template/prop-name-cache","reagent.impl.template/cache-get","o","k","reagent.impl.template.goog$module$goog$object.get","reagent.impl.template/cached-prop-name","temp__5806__auto__","k'","cljs.core/name","v","reagent.impl.util/dash-to-prop-name","reagent.impl.template.goog$module$goog$object.set","reagent.impl.template/kv-conv","G__19938","reagent.impl.template/convert-prop-value","reagent.impl.util/js-val?","cljs.core/map?","cljs.core/reduce-kv","cljs.core/coll?","cljs.core/clj->js","args","cljs.core.apply","reagent.impl.template/custom-prop-name-cache","reagent.impl.template/cached-custom-prop-name","reagent.impl.template/custom-kv-conv","G__19939","reagent.impl.template/convert-custom-prop-value","reagent.impl.template/set-id-class","props","id-class","class","G__19940","cljs.core.assoc","reagent.impl.util.class_names","or__5002__auto__","reagent.impl.template/convert-props","G__19941","reagent.impl.template/make-element","this","argv","component","jsprops","first-child","G__19942","cljs.core/count","js/module$node_modules$react$index.createElement","reagent.impl.protocols/as-element","cljs.core.nth","a","reagent.impl.template/HiccupTag","reagent.impl.template/->HiccupTag","custom","reagent.impl.template/parse-tag","hiccup-tag","vec__19943","cljs.core/re-matches","cljs.core/next","clojure.string/replace","js/Error","reagent.impl.component/comp-name","cljs.core.not_EQ_","reagent.impl.template/reag-element","compiler","reagent.impl.component/as-class","temp__5808__auto__","key","reagent.impl.util/react-key-from-vec","reagent.impl.template/function-element","first-arg","cljs.core.subvec","reagent.impl.component/functional-render-fn","reagent.impl.template/maybe-function-element","reagent.impl.component/react-class?","reagent.impl.template/fragment-element","hasprops","reagent.impl.protocols/make-element","js/module$node_modules$react$index.Fragment","reagent.impl.template/tag-name-cache","reagent.impl.template/cached-parse","_","s","reagent.impl.template/native-element","parsed","first","reagent.impl.input/input-component?","react-key","reagent.impl.util/get-react-key","input-class","reagent.impl.component/create-class","reagent.impl.input/input-spec","cljs.core/with-meta","cljs.core.merge","cljs.core/meta","reagent.impl.template/raw-element","comp","reagent.impl.template/expand-seq","cljs.core.into_array","p1__19946#","cljs.core.map","reagent.impl.template/expand-seq-dev","val","cljs.core/vector?","reagent.impl.template/expand-seq-check","vec__19947","ctx","res","derefed","reagent.ratom/check-derefs","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","reagent.impl.util.hiccup_err","reagent.impl.template/hiccup-element","n","pos","G__19950","reagent.impl.protocols/parse-tag","cljs.core._EQ_","cljs.core.subs","reagent.impl.template/vec-to-elem","fn-to-element","js/console.error","cljs.core.pr_str","G__19951","cljs.core/Keyword","reagent.impl.template/as-element","cljs.core/seq?","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cljs.core/IPrintWithWriter","reagent.impl.template/create-compiler","opts","cljs.core.gensym","parse-fn","cljs.core.get","reagent.impl.template/t_reagent$impl$template19953","tag-name","tag-value","reagent.impl.template/class-compiler","reagent.impl.template/*current-default-compiler*","reagent.impl.template/set-default-compiler!"]],"~:used-vars",["^M",["~$reagent.impl.component/as-class","~$cljs.core/PROTOCOL_SENTINEL","~$reagent.impl.template/create-compiler","~$reagent.impl.template/tag-name-cache","~$reagent.impl.template/vec-to-elem","~$reagent.impl.template/expand-seq","~$reagent.impl.util/react-key-from-vec","~$reagent.ratom/check-derefs","~$reagent.impl.template/prop-name-cache","~$reagent.impl.protocols/make-element","~$js/console.error","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/ifn?","~$cljs.core/into-array","~$cljs.core/re-matches","~$reagent.impl.template/make-element","~$reagent.impl.util/js-val?","~$reagent.impl.template/raw-element","~$reagent.impl.template/parse-tag","~$reagent.impl.template/kv-conv","~$cljs.core/-write","~$reagent.impl.template/hiccup-element","~$reagent.impl.template/convert-prop-value","~$cljs.core/count","~$reagent.impl.component/functional-render-fn","~$cljs.core/apply","~$cljs.core/Keyword","~$reagent.impl.template/fragment-element","~$reagent.impl.protocols/parse-tag","~$cljs.core/not=","~$reagent.impl.template/class-compiler","~$reagent.impl.template/->HiccupTag","~$reagent.debug/has-console","~$cljs.core/pr-str","~$reagent.impl.util/dash-to-prop-name","~$reagent.impl.component/comp-name","~$js/module$node_modules$react$index.createElement","~$js/console","~$cljs.core/native-satisfies?","~$reagent.impl.template/valid-tag?","~$cljs.core/map?","~$reagent.impl.util/get-react-key","~$reagent.impl.template/t_reagent$impl$template19953","~$reagent.impl.template/expand-seq-dev","~$reagent.impl.template/cached-prop-name","~$cljs.core/with-meta","~$reagent.impl.template/cached-custom-prop-name","~$cljs.core/map","~$reagent.impl.template/function-element","~$reagent.impl.template/HiccupTag","~$reagent.impl.template/*current-default-compiler*","~$reagent.impl.template/custom-kv-conv","~$cljs.core/get","~$js/module$node_modules$react$index.Fragment","~$reagent.debug/tracking","~$reagent.impl.template/maybe-function-element","~$reagent.impl.util/hiccup-err","~$reagent.impl.input/input-spec","~$reagent.impl.template/expand-seq-check","~$reagent.impl.template/custom-prop-name-cache","~$reagent.impl.template/cached-parse","~$cljs.core/clj->js","~$reagent.impl.util/class-names","~$reagent.debug/track-console","~$cljs.core/subvec","~$reagent.impl.component/create-class","~$reagent.impl.template/adapt-react-class","~$cljs.core/nth","~$cljs.core/meta","~$reagent.impl.component/react-class?","~$clojure.string/replace","~$reagent.impl.template/re-tag","~$cljs.core/next","~$reagent.impl.template/reag-element","~$reagent.impl.template/native-element","~$cljs.core/not","~$reagent.impl.template/NativeWrapper","~$reagent.impl.template/->NativeWrapper","~$cljs.core/IPrintWithWriter","~$reagent.impl.template/cache-get","~$cljs.core/assoc","~$reagent.impl.template/set-default-compiler!","~$cljs.core/coll?","~$reagent.impl.template/convert-props","~$reagent.impl.input/input-component?","~$cljs.core/reduce-kv","~$reagent.impl.protocols/as-element","~$reagent.impl.template.goog$module$goog$object.set","~$reagent.impl.template/->t_reagent$impl$template19953","~$cljs.core/gensym","~$cljs.core/seq?","~$cljs.core/name","~$reagent.impl.util/named?","~$cljs.core/subs","~$cljs.core/merge","~$reagent.impl.template/hiccup-tag?","~$js/Error","~$reagent.impl.template/set-id-class","~$reagent.impl.template/convert-custom-prop-value","~$reagent.impl.template/as-element","~$reagent.impl.template.goog$module$goog$object.get"]]],"~:cache-keys",["~#cmap",[["^1G","reagent/impl/batching.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^M",[]],"~:deps-syms",["^13","^10","^J","^W"]]],["^1G","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","~$goog.dom.HtmlElement"]]],["^1G","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1G","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4@","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^4A"]]],["^1G","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4@"]]],["^1G","reagent/impl/util.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10","^17","~$clojure.walk","^12","^J"]]],["^1G","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4>","^4A"]]],["^1G","reagent/ratom.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10","^W","^J","~$reagent.impl.batching","~$clojure.set","^12"]]],["^1G","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["0a9a79a56aa9c1e53cc49fff63dff00b4f41486c","93a021dca5c9b562f1e0577e488e9413c111cf9f","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1G","shadow/js.js"],["56681e253acd83be730dce6df8d306c985c4c5da","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","reagent/impl/template.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10","^E","^17","^W","^Z","^V","^X","^[","^J","^12"]]],["^1G","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4@"]]],"~:SHADOW-TIMESTAMP",[1712152237000,1712152237000,1707229049000],["^4K","node_modules/react/cjs/react.development.js"],["0a9a79a56aa9c1e53cc49fff63dff00b4f41486c","93a021dca5c9b562f1e0577e488e9413c111cf9f","754b7a48941975257c8955f6d5e511cb3a878737","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^4L","~$module$node_modules$object_assign$index"]]],["^1G","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4@","~$goog.reflect"]]],["^1G","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4@","~$goog.fs.blob","^4D","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4F","^4G"]]],["^1G","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4F","~$goog.html.SafeUrl","^4G","^4@","^4A"]]],["^1G","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4@","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4S","~$goog.html.SafeStyle","^4U","^4E","~$goog.html.uncheckedconversions","^4F","^4A"]]],["^1G","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","~$goog.dom.TagName","^4@","~$goog.dom.element"]]],["^1G","reagent/impl/component.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10","^12","^E","^W","^4I","^X","^[","^J"]]],["^1G","clojure/walk.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10"]]],["^1G","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4F","^4S","^4Z","~$goog.html.SafeStyleSheet","^4U","^50","^4E","^4G","^4@","~$goog.labs.userAgent.browser","~$goog.array","^12","^4A","~$goog.dom.tags","^4T"]]],["^1G","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^12"]]],["^1G","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1G","reagent/impl/protocols.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10"]]],["^1G","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^54","^4@","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4?"]]],["^1G","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^4K","node_modules/object-assign/index.js"],["0a9a79a56aa9c1e53cc49fff63dff00b4f41486c","93a021dca5c9b562f1e0577e488e9413c111cf9f","519ffd5a4c91b67302cc9947b794966d629860cd","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^4L"]]],["^1G","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",[]]],["^1G","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^54","^12"]]],["^1G","clojure/string.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10","^59","~$goog.string.StringBuffer"]]],["^4K","node_modules/react/cjs/react.production.min.js"],["0a9a79a56aa9c1e53cc49fff63dff00b4f41486c","93a021dca5c9b562f1e0577e488e9413c111cf9f","0a81b45abe33f0ad39b726512604018f94261db9","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^4L","^4P"]]],["^1G","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","~$goog.dom.safe","^4[","^4F","^4A"]]],["^1G","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4A","^4C"]]],["^1G","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","~$goog.flags"]]],["^1G","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^57","^50"]]],["^1G","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4@","^4Y","^4S","^4Z","^52","^4U","^4E","^4F","^4A"]]],["^1G","reagent/impl/input.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10","^Z","^4I","^X"]]],["^1G","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13"]]],["^1G","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","~$goog.math.Long","~$goog.math.Integer","^59","^12","^54","~$goog.Uri","^5>"]]],["^1G","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4F","^4G","^4T","^4@"]]],["^1G","reagent/debug.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10"]]],["^1G","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4F","^4Z","^4G","^12","^4@","^4A"]]],["^1G","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4Q"]]],["^1G","clojure/set.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^10"]]],["^1G","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4@","^59"]]],["^1G","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^49",["^ ","^4:",null,"^4;",["^M",[]],"^4<",["^13","^4@","^4G"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/interop.clj",1711469606000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1670877325000,"jar:file:/C:/Users/nyemi/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/ratom.clj",1711469606000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1707229049000,"jar:file:/C:/Users/nyemi/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/debug.clj",1711469606000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/template.cljs","^7",1,"^8",5,"^9",1,"^:",26],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",["^ ","^I","^J","^K","^J"],"^L",["^M",[]],"~:shadow/js-access-properties",["^M",["createElement","Fragment"]],"^N","^O","^P",["^ "],"^S",null,"^T",["^ ","^U","^V","^W","^W","^X","^X","~$p","^X","^Y","^Z","^[","^[","^D","^E","^10","^10","^E","^E","^11","^12","^13","^13","^12","^12","^Z","^Z","^14","^W","^15","^[","^16","^17","^V","^V","^J","^J","^17","^17"],"^18",["^M",["^19"]],"~:shadow/js-access-global",["^M",["Error"]],"^1:",["^ ","^1;","^W"],"~:defs",["^ ","~$valid-tag?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",29,"^8",16,"^9",29,"^:",26,"~:tag","~$boolean","~:arglists",["^1>",["~$quote",["^1>",[["~$x"]]]]]],"^N","^2Q","^6","reagent/impl/template.cljs","^:",26,"~:method-params",["^1>",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^1>",[null,null]],"^8",1,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["^1>",["~$defn","^6=",["~$x"],["^1>",["~$or",["^1>",["~$hiccup-tag?","~$x"]],["^1>",["~$ifn?","~$x"]],["^1>",["~$instance?","~$NativeWrapper","~$x"]]]]]]],"~:variadic?",false,"^7",29,"~:ret-tag","^6@","^9",29,"~:max-fixed-arity",1,"^6?","^6@","~:fn-var",true,"^6A",["^1>",["^6B",["^1>",[["~$x"]]]]]],"~$adapt-react-class",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",19,"^8",7,"^9",19,"^:",24,"^6A",["^1>",["^6B",["^1>",[["~$c"]]]]]],"^N","^3@","^6","reagent/impl/template.cljs","^:",24,"^6C",["^1>",[["~$c"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^6T",["~$c"],["^1>",["~$->NativeWrapper","~$c",null,null]]]]],"^6P",false,"^7",19,"^6Q","^3J","^9",19,"^6R",1,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$c"]]]]]],"~$re-tag",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",15,"^8",3,"^9",15,"^:",9,"~:doc","Regular expression that parses a CSS-style id and class\n             from a tag name."],"^N","^3E","^6","reagent/impl/template.cljs","^:",9,"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["~$def","^6V",["~#regexp",["([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?",0]]]]],"^7",13,"^9",15,"^6?","~$any","^6W","Regular expression that parses a CSS-style id and class\n             from a tag name."],"~$function-element",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",165,"^8",7,"^9",165,"^:",23,"^6A",["^1>",["^6B",["^1>",[["~$tag","~$v","~$first-arg","~$compiler"]]]]]],"^N","^2Z","^6","reagent/impl/template.cljs","^:",23,"^6C",["^1>",[["^70","~$v","^71","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^6[",["^70","~$v","^71","^72"],["^1>",["~$let",["~$jsprops",["~#js-value",["^ "]]],["^1>",["~$set!",["^1>",["~$.-reagentRender","^74"]],"^70"]],["^1>",["^76",["^1>",["~$.-argv","^74"]],["^1>",["~$subvec","~$v","^71"]]]],["^1>",["~$when-some",["~$key",["^1>",["~$util/react-key-from-vec","~$v"]]],["^1>",["^76",["^1>",["~$.-key","^74"]],"^7;"]]]],["^1>",["~$react/createElement",["^1>",["~$comp/functional-render-fn","^72","^70"]],"^74"]]]]]]],"^6P",false,"^7",165,"^6Q","^1O","^9",165,"^6R",4,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^70","~$v","^71","^72"]]]]]],"~$reag-element",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",157,"^8",7,"^9",157,"^:",19,"^6A",["^1>",["^6B",["^1>",[["^70","~$v","^72"]]]]]],"^N","^3G","^6","reagent/impl/template.cljs","^:",19,"^6C",["^1>",[["^70","~$v","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^7@",["^70","~$v","^72"],["^1>",["^73",["~$c",["^1>",["~$comp/as-class","^70","^72"]],"^74",["^75",["^ "]]],["^1>",["^76",["^1>",["^78","^74"]],"~$v"]],["^1>",["^7:",["^7;",["^1>",["^7<","~$v"]]],["^1>",["^76",["^1>",["^7=","^74"]],"^7;"]]]],["^1>",["^7>","~$c","^74"]]]]]]],"^6P",false,"^7",157,"^6Q","^1O","^9",157,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^70","~$v","^72"]]]]]],"~$as-element",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",295,"^8",7,"^9",295,"^:",17,"^6A",["^1>",["^6B",["^1>",[["~$this","~$x","~$fn-to-element"]]]]]],"^N","^45","^6","reagent/impl/template.cljs","^:",17,"^6C",["^1>",[["^7C","~$x","^7D"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^7B",["^7C","~$x","^7D"],["^1>",["~$cond",["^1>",["~$util/js-val?","~$x"]],"~$x",["^1>",["~$vector?","~$x"]],["^1>",["~$vec-to-elem","~$x","^7C","^7D"]],["^1>",["~$seq?","~$x"]],["^1>",["~$if",["^1>",["^I"]],["^1>",["~$expand-seq-check","~$x","^7C"]],["^1>",["~$expand-seq","~$x","^7C"]]]],["^1>",["^1;","~$x"]],["^1>",["~$name","~$x"]],["^1>",["~$satisfies?","~$IPrintWithWriter","~$x"]],["^1>",["~$pr-str","~$x"]],"~:else","~$x"]]]]],"^6P",false,"^7",295,"^6Q",["^M",[null,"^6Z","^16","~$clj-nil"]],"^9",295,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^7C","~$x","^7D"]]]]]],"~$HiccupTag",["^ ","~:num-fields",4,"~:protocols",["^M",[]],"^N","^2[","^6","reagent/impl/template.cljs","^:",19,"~:type",true,"^8",10,"^6F",["^ ","^6G","^6H","^6I",["^1>",["~$deftype","^7S",["^70","~$id","~$className","~$custom"]]]],"^7",143,"~:record",false,"^9",143,"^6?","~$function","~:skip-protocol-flag",null],"^6O",["^ ","^7T",3,"^7U",["^M",[]],"^N","^3J","^6","reagent/impl/template.cljs","^:",23,"^7V",true,"^8",10,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^7W","^6O",["^70","^7X","^7Y"]]]],"^7",17,"^7[",false,"^9",17,"^6?","^80","^81",null],"~$*current-default-compiler*",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",323,"^8",16,"^9",323,"^:",42,"~:dynamic",true],"^N","^30","^6","reagent/impl/template.cljs","^:",42,"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6X","^82","~$class-compiler"]]],"^83",true,"^7",323,"^9",323,"^6?","^6Z"],"^6U",["^ ","^6>",null,"^5",["^ ","^7U",["^M",[]],"^6","reagent/impl/template.cljs","^:",23,"^8",10,"~:factory","~:positional","^7",17,"^9",17,"^6A",["^1>",["^6B",["^1>",[["^70","^7X","^7Y"]]]]],"^81",null,"^6W","Positional factory function for reagent.impl.template/NativeWrapper."],"^7U",["^M",[]],"^N","^3K","^6","reagent/impl/template.cljs","^:",23,"^6C",["^1>",[["^70","^7X","^7Y"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^7W","^6O",["^70","^7X","^7Y"]]]],"^6P",false,"^85","^86","^7",17,"^6Q","^3J","^9",17,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^70","^7X","^7Y"]]]]],"^81",null,"^6W","Positional factory function for reagent.impl.template/NativeWrapper."],"~$custom-kv-conv",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",85,"^8",7,"^9",85,"^:",21,"^6A",["^1>",["^6B",["^1>",[["~$o","~$k","~$v"]]]]]],"^N","^31","^6","reagent/impl/template.cljs","^:",21,"^6C",["^1>",[["~$o","~$k","~$v"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^87",["~$o","~$k","~$v"],["^1>",["~$doto","~$o",["^1>",["~$gobj/set",["^1>",["~$cached-custom-prop-name","~$k"]],["^1>",["~$convert-prop-value","~$v"]]]]]]]]],"^6P",false,"^7",85,"^9",85,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$o","~$k","~$v"]]]]]],"~$maybe-function-element",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",174,"^8",7,"^9",174,"^:",29,"^6A",["^1>",["^6B",["^1>",[["^70","~$v","^72"]]]]],"^6W","If given tag is a Class, use it as a class,\n  else wrap in Reagent function wrapper."],"^N","^35","^6","reagent/impl/template.cljs","^:",29,"^6C",["^1>",[["^70","~$v","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^8<","If given tag is a Class, use it as a class,\n  else wrap in Reagent function wrapper.",["^70","~$v","^72"],["^1>",["^7J",["^1>",["~$comp/react-class?","^70"]],["^1>",["^7@","^70","~$v","^72"]],["^1>",["^6[","^70","~$v",1,"^72"]]]]]]],"^6P",false,"^7",174,"^6Q","^1O","^9",174,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^70","~$v","^72"]]]]],"^6W","If given tag is a Class, use it as a class,\n  else wrap in Reagent function wrapper."],"~$->t_reagent$impl$template19953",["^ ","^6>",null,"^5",["^ ","~:anonymous",true,"^7U",["^M",["~$reagent.impl.protocols/Compiler","~$cljs.core/IMeta","~$cljs.core/IWithMeta"]],"^81",["^M",["^8A","^8B"]],"^85","^86","^6A",["^1>",["^6B",["^1>",[["~$opts","^7X","^7D","~$parse-fn","~$meta19954"]]]]],"^6W","Positional factory function for reagent.impl.template/t_reagent$impl$template19953.","^6",null],"^7U",["^M",["^8@","^8A","^8B"]],"^N","^3V","^6","reagent/impl/template.cljs","^6C",["^1>",[["^8C","^7X","^7D","^8D","^8E"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8?",true,"^8",null,"^6F",["^ ","^6G","^6H","^6I",["^1>",["~$cljs.core/deftype","~$t_reagent$impl$template19953",["^8C","^7X","^7D","^8D","^8E"],"^8B",["^1>",["~$-with-meta",["~$_19955","^8E"],["^1>",["~$new","^8G","^8C","^7X","^7D","^8D","^8E"]]]],"^8A",["^1>",["~$-meta",["^8I"],"^8E"]],"~$p/Compiler",["^1>",["~$get-id",["^7C"],"^7X"]],["^1>",["~$parse-tag",["^7C","~$tag-name","~$tag-value"],["^1>",["^8D","^7C","^8O","^8P"]]]],["^1>",["^7B",["^7C","~$x"],["^1>",["^7B","^7C","~$x","^7D"]]]],["^1>",["~$make-element",["^7C","~$argv","~$component","^74","~$first-child"],["^1>",["^8Q","^7C","^8R","^8S","^74","^8T"]]]]]]],"^6P",false,"^85","^86","^7",null,"^6Q","^2T","^6R",5,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^8C","^7X","^7D","^8D","^8E"]]]]],"^81",["^M",["^8A","^8B"]],"^6W","Positional factory function for reagent.impl.template/t_reagent$impl$template19953."],"^6L",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",25,"^8",16,"^9",25,"^:",27,"^6?","^6@","^6A",["^1>",["^6B",["^1>",[["~$x"]]]]]],"^N","^41","^6","reagent/impl/template.cljs","^:",27,"^6C",["^1>",[["~$x"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^6L",["~$x"],["^1>",["^6K",["^1>",["^1;","~$x"]],["^1>",["~$string?","~$x"]]]]]]],"^6P",false,"^7",25,"^6Q","^6@","^9",25,"^6R",1,"^6?","^6@","^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$x"]]]]]],"~$set-id-class",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",98,"^8",7,"^9",98,"^:",19,"^6A",["^1>",["^6B",["^1>",[["~$props","~$id-class"]]]]],"^6W","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"^N","^43","^6","reagent/impl/template.cljs","^:",19,"^6C",["^1>",[["^8W","^8X"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^8V","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties.",["^8W","^8X"],["^1>",["^73",["^7X",["^1>",["~$.-id","^8X"]],"~$class",["^1>",["~$.-className","^8X"]]],["^1>",["~$cond->","^8W",["^1>",["~$and",["^1>",["~$some?","^7X"]],["^1>",["~$nil?",["^1>",["~:id","^8W"]]]]]],["^1>",["~$assoc","^94","^7X"]],"^8Z",["^1>",["^95","~:class",["^1>",["~$util/class-names","^8Z",["^1>",["^6K",["^1>",["^96","^8W"]],["^1>",["~:className","^8W"]]]]]]]]]]]]]]],"^6P",false,"^7",98,"^6Q",["^M",[null,"~$clj","^6Z"]],"^9",98,"^6R",2,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^8W","^8X"]]]]],"^6W","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"~$tag-name-cache",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",192,"^8",6,"^9",192,"^:",20],"^N","^1X","^6","reagent/impl/template.cljs","^:",20,"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6X","^9:",["^75",["^ "]]]]],"^7",192,"^9",192,"^6?","~$object"],"~$prop-name-cache",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",39,"^8",6,"^9",39,"^:",21],"^N","^21","^6","reagent/impl/template.cljs","^:",21,"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6X","^9<",["^75",["^ ","^96","className","~:for","htmlFor","~:charset","charSet"]]]]],"^7",39,"^9",39,"^6?","^9;"],"~$convert-props",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",117,"^8",7,"^9",117,"^:",20,"^6A",["^1>",["^6B",["^1>",[["^8W","^8X"]]]]]],"^N","^3Q","^6","reagent/impl/template.cljs","^:",20,"^6C",["^1>",[["^8W","^8X"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^9?",["^8W","^8X"],["^1>",["^73",["^8Z",["^1>",["^96","^8W"]],"^8W",["^1>",["~$->","^8W",["^1>",["^90","^8Z",["^1>",["^95","^96",["^1>",["^97","^8Z"]]]]]],["^1>",["^8V","^8X"]]]]],["^1>",["^7J",["^1>",["~$.-custom","^8X"]],["^1>",["~$convert-custom-prop-value","^8W"]],["^1>",["^8;","^8W"]]]]]]]]],"^6P",false,"^7",117,"^6Q",["^M",[null,"^6Z","^16","^80"]],"^9",117,"^6R",2,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^8W","^8X"]]]]]],"~$set-default-compiler!",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",325,"^8",7,"^9",325,"^:",28,"^6A",["^1>",["^6B",["^1>",[["^72"]]]]]],"^N","^3O","^6","reagent/impl/template.cljs","^:",28,"^6C",["^1>",[["^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^9C",["^72"],["^1>",["^76","^82","^72"]]]]],"^6P",false,"^7",325,"^9",325,"^6R",1,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^72"]]]]]],"~$custom-prop-name-cache",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",74,"^8",6,"^9",74,"^:",28],"^N","^39","^6","reagent/impl/template.cljs","^:",28,"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6X","^9D",["^75",["^ "]]]]],"^7",74,"^9",74,"^6?","^9;"],"^8N",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",145,"^8",7,"^9",145,"^:",16,"^6A",["^1>",["^6B",["^1>",[["~$hiccup-tag"]]]]]],"^N","^2<","^6","reagent/impl/template.cljs","^:",16,"^6C",["^1>",[["^9E"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^8N",["^9E"],["^1>",["^73",[["^70","^7X","^7Y"],["^1>",["~$->>","^9E","^7M",["^1>",["~$re-matches","^6V"]],"~$next"]],"^7Y",["^1>",["~$when-not",["^1>",["^93","^7Y"]],["^1>",["~$string/replace","^7Y",["^6Y",["\\.",0]]," "]]]]],["^1>",["~$assert","^70",["^1>",["~$str","Invalid tag: '","^9E","'",["^1>",["~$comp/comp-name"]]]]]],["^1>",["~$->HiccupTag","^70","^7X","^7Y",["^1>",["~$not=",-1,["^1>",["~$.indexOf","^70","-"]]]]]]]]]]],"^6P",false,"^7",145,"^6Q","^2[","^9",145,"^6R",1,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^9E"]]]]]],"~$kv-conv",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",58,"^8",7,"^9",58,"^:",14,"^6A",["^1>",["^6B",["^1>",[["~$o","~$k","~$v"]]]]]],"^N","^2=","^6","reagent/impl/template.cljs","^:",14,"^6C",["^1>",[["~$o","~$k","~$v"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^9Q",["~$o","~$k","~$v"],["^1>",["^88","~$o",["^1>",["^89",["^1>",["~$cached-prop-name","~$k"]],["^1>",["^8;","~$v"]]]]]]]]],"^6P",false,"^7",58,"^9",58,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$o","~$k","~$v"]]]]]],"~$hiccup-element",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",259,"^8",7,"^9",259,"^:",21,"^6A",["^1>",["^6B",["^1>",[["~$v","^72"]]]]]],"^N","^2?","^6","reagent/impl/template.cljs","^:",21,"^6C",["^1>",[["~$v","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^9S",["~$v","^72"],["^1>",["^73",["^70",["^1>",["~$nth","~$v",0,null]],"~$n",["^1>",["^7M","^70"]],"~$pos",["^1>",["^9P","~$n",">"]]],["^1>",["~$case","^9U",-1,["^1>",["~$native-element",["^1>",["~$p/parse-tag","^72","~$n","^70"]],"~$v",1,"^72"]],0,["^1>",["^9K",["^1>",["~$=",">","~$n"]],["^1>",["~$util/hiccup-err","~$v",["^1>",["^9M"]],"Invalid Hiccup tag"]]]],["^1>",["~$recur",["^1>",["~$with-meta",[["^1>",["~$subs","~$n",0,"^9U"]],["^1>",["^95",["^1>",["^9[","~$v",null]],0,["^1>",["^:0","~$n",["^1>",["~$inc","^9U"]]]]]]],["^1>",["~$meta","~$v"]]]],"^72"]]]]]]]]],"^6P",false,"^7",259,"^9",259,"^6R",2,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$v","^72"]]]]]],"^9B",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",89,"^8",7,"^9",89,"^:",32,"^6A",["^1>",["^6B",["^1>",[["~$x"]]]]]],"^N","^44","^6","reagent/impl/template.cljs","^:",32,"^6C",["^1>",[["~$x"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^9B",["~$x"],["^1>",["^7E",["^1>",["^7F","~$x"]],"~$x",["^1>",["^1;","~$x"]],["^1>",["^7M","~$x"]],["^1>",["~$map?","~$x"]],["^1>",["~$reduce-kv","^87",["^75",["^ "]],"~$x"]],["^1>",["~$coll?","~$x"]],["^1>",["~$clj->js","~$x"]],["^1>",["^6M","~$x"]],["^1>",["~$fn",["~$&","~$args"],["^1>",["~$apply","~$x","^:8"]]]],"^7Q",["^1>",["^:6","~$x"]]]]]]],"^6P",false,"^7",89,"^6Q",["^M",[null,"^6Z","^16","^80"]],"^9",89,"^6R",1,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$x"]]]]]],"^9W",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",202,"^8",7,"^9",202,"^:",21,"^6A",["^1>",["^6B",["^1>",[["~$parsed","^8R","~$first","^72"]]]]]],"^N","^3H","^6","reagent/impl/template.cljs","^:",21,"^6C",["^1>",[["^::","^8R","^:;","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^9W",["^::","^8R","^:;","^72"],["^1>",["^73",["^8S",["^1>",["~$.-tag","^::"]],"^8W",["^1>",["^9T","^8R","^:;",null]],"~$hasprops",["^1>",["^6K",["^1>",["^93","^8W"]],["^1>",["^:3","^8W"]]]],"^74",["^1>",["^6K",["^1>",["^9?",["^1>",["^7J","^:=","^8W"]],"^::"]],["^75",["^ "]]]],"^8T",["^1>",["~$+","^:;",["^1>",["^7J","^:=",1,0]]]]],["^1>",["^7J",["^1>",["~$input/input-component?","^8S"]],["^1>",["^73",["~$react-key",["^1>",["~$util/get-react-key","^8W"]],"~$input-class",["^1>",["^6K",["^1>",["~$.-reagentInput","^72"]],["^1>",["^73",["~$x",["^1>",["~$comp/create-class","~$input/input-spec","^72"]]],["^1>",["^76",["^1>",["^:B","^72"]],"~$x"]],"~$x"]]]]],["^1>",["~$p/as-element","^72",["^1>",["^9[",["^:A","^8R","^8S","^74","^8T","^72"],["^1>",["~$merge",["^1>",["~$when","^:?",["^ ","~:key","^:?"]]],["^1>",["^:2","^8R"]]]]]]]]]],["^1>",["~$do",["^1>",["^7:",["^7;",["^1>",["^9@",["^1>",["^:2","^8R"]],"^:@"]]],["^1>",["^76",["^1>",["^7=","^74"]],"^7;"]]]],["^1>",["~$p/make-element","^72","^8R","^8S","^74","^8T"]]]]]]]]]]],"^6P",false,"^7",202,"^6Q","^6Z","^9",202,"^6R",4,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^::","^8R","^:;","^72"]]]]]],"~$fragment-element",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",182,"^8",7,"^9",182,"^:",23,"^6A",["^1>",["^6B",["^1>",[["^8R","^72"]]]]]],"^N","^2E","^6","reagent/impl/template.cljs","^:",23,"^6C",["^1>",[["^8R","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^:K",["^8R","^72"],["^1>",["^73",["^8W",["^1>",["^9T","^8R",1,null]],"^:=",["^1>",["^6K",["^1>",["^93","^8W"]],["^1>",["^:3","^8W"]]]],"^74",["^1>",["^6K",["^1>",["^8;",["^1>",["^7J","^:=","^8W"]]]],["^75",["^ "]]]],"^8T",["^1>",["~$+",1,["^1>",["^7J","^:=",1,0]]]]],["^1>",["^7:",["^7;",["^1>",["^7<","^8R"]]],["^1>",["^76",["^1>",["^7=","^74"]],"^7;"]]]],["^1>",["^:J","^72","^8R","~$react/Fragment","^74","^8T"]]]]]]],"^6P",false,"^7",182,"^6Q","^6Z","^9",182,"^6R",2,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^8R","^72"]]]]]],"~$create-compiler",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",305,"^8",7,"^9",305,"^:",22,"^6A",["^1>",["^6B",["^1>",[["^8C"]]]]]],"^N","^1W","^6","reagent/impl/template.cljs","^:",22,"^6C",["^1>",[["^8C"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^:M",["^8C"],["^1>",["^73",["^7X",["^1>",["~$gensym","reagent-compiler"]],"^7D",["^1>",["^7J",["^1>",["~:function-components","^8C"]],"^8<","^7@"]],"^8D",["^1>",["~$get","^8C","~:parse-tag","~$cached-parse"]]],["^1>",["~$reify","^8L",["^1>",["^8M",["^7C"],"^7X"]],["^1>",["^8N",["^7C","^8O","^8P"],["^1>",["^8D","^7C","^8O","^8P"]]]],["^1>",["^7B",["^7C","~$x"],["^1>",["^7B","^7C","~$x","^7D"]]]],["^1>",["^8Q",["^7C","^8R","^8S","^74","^8T"],["^1>",["^8Q","^7C","^8R","^8S","^74","^8T"]]]]]]]]]]],"^6P",false,"^7",305,"^6Q","^2T","^9",305,"^6R",1,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^8C"]]]]]],"^7H",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",275,"^8",7,"^9",275,"^:",18,"^6A",["^1>",["^6B",["^1>",[["~$v","^72","^7D"]]]]]],"^N","^1Y","^6","reagent/impl/template.cljs","^:",18,"^6C",["^1>",[["~$v","^72","^7D"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^7H",["~$v","^72","^7D"],["^1>",["^:G",["^1>",["^93","^72"]],["^1>",["^23","vec-to-elem",["^1>",["^7P","~$v"]]]]]],["^1>",["^9K",["^1>",["~$pos?",["^1>",["~$count","~$v"]]]],["^1>",["^9Y","~$v",["^1>",["^9M"]],"Hiccup form should not be empty"]]]],["^1>",["^73",["^70",["^1>",["^9T","~$v",0,null]]],["^1>",["^9K",["^1>",["^6=","^70"]],["^1>",["^9Y","~$v",["^1>",["^9M"]],"Invalid Hiccup form"]]]],["^1>",["^9V","^70","~:>",["^1>",["^9W",["^1>",["^9N",["^1>",["^9T","~$v",1,null]],null,null,null]],"~$v",2,"^72"]],"~:r>",["^1>",["~$raw-element",["^1>",["^9T","~$v",1,null]],"~$v","^72"]],"~:f>",["^1>",["^6[",["^1>",["^9T","~$v",1,null]],"~$v",2,"^72"]],"~:<>",["^1>",["^:K","~$v","^72"]],["^1>",["^7E",["^1>",["^6L","^70"]],["^1>",["^9S","~$v","^72"]],["^1>",["^6N","^6O","^70"]],["^1>",["^9W","^70","~$v",1,"^72"]],"^7Q",["^1>",["^7D","^70","~$v","^72"]]]]]]]]]]],"^6P",false,"^7",275,"^9",275,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$v","^72","^7D"]]]]]],"~$cache-get",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",43,"^8",7,"^9",43,"^:",16,"^6A",["^1>",["^6B",["^1>",[["~$o","~$k"]]]]]],"^N","^3M","^6","reagent/impl/template.cljs","^:",16,"^6C",["^1>",[["~$o","~$k"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^:Z",["~$o","~$k"],["^1>",["^:G",["^1>",["~$.hasOwnProperty","~$o","~$k"]],["^1>",["~$gobj/get","~$o","~$k"]]]]]]],"^6P",false,"^7",43,"^6Q",["^M",["^1O","^7R"]],"^9",43,"^6R",2,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$o","~$k"]]]]]],"^:W",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",228,"^8",7,"^9",228,"^:",18,"^6A",["^1>",["^6B",["^1>",[["^Y","^8R","^72"]]]]]],"^N","^2;","^6","reagent/impl/template.cljs","^:",18,"^6C",["^1>",[["^Y","^8R","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^:W",["^Y","^8R","^72"],["^1>",["^73",["^8W",["^1>",["^9T","^8R",2,null]],"^74",["^1>",["^6K","^8W",["^75",["^ "]]]]],["^1>",["^7:",["^7;",["^1>",["^9@",["^1>",["^:2","^8R"]],"^:@"]]],["^1>",["^76",["^1>",["^7=","^74"]],"^7;"]]]],["^1>",["^:J","^72","^8R","^Y","^74",3]]]]]]],"^6P",false,"^7",228,"^6Q","^6Z","^9",228,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^Y","^8R","^72"]]]]]],"^8Q",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",128,"^8",7,"^9",128,"^:",19,"^6A",["^1>",["^6B",["^1>",[["^7C","^8R","^8S","^74","^8T"]]]]]],"^N","^29","^6","reagent/impl/template.cljs","^:",19,"^6C",["^1>",[["^7C","^8R","^8S","^74","^8T"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^8Q",["^7C","^8R","^8S","^74","^8T"],["^1>",["^9V",["^1>",["~$-",["^1>",["^:U","^8R"]],"^8T"]],0,["^1>",["^7>","^8S","^74"]],1,["^1>",["^7>","^8S","^74",["^1>",["^:E","^7C",["^1>",["^9T","^8R","^8T",null]]]]]],["^1>",["~$.apply","^7>",null,["^1>",["^:4",["^1>",["^:7",["~$a","~$k","~$v"],["^1>",["^:G",["^1>",["~$>=","~$k","^8T"]],["^1>",["~$.push","~$a",["^1>",["^:E","^7C","~$v"]]]]]],"~$a"]],["^75",["^8S","^74"]],"^8R"]]]]]]]]],"^6P",false,"^7",128,"^9",128,"^6R",5,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^7C","^8R","^8S","^74","^8T"]]]]]],"~$expand-seq-dev",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",241,"^8",7,"^9",241,"^:",21,"^6A",["^1>",["^6B",["^1>",[["~$s","~$o","^72"]]]]]],"^N","^2U","^6","reagent/impl/template.cljs","^:",21,"^6C",["^1>",[["~$s","~$o","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^;4",["~$s","~$o","^72"],["^1>",["~$into-array",["^1>",["~$map",["^1>",["^:7",["~$val"],["^1>",["^:G",["^1>",["^91",["^1>",["^7G","^;7"]],["^1>",["^93",["^1>",["^7<","^;7"]]]]]],["^1>",["^76",["^1>",["~$.-no-key","~$o"]],true]]]],["^1>",["^:E","^72","^;7"]]]],"~$s"]]]]]]],"^6P",false,"^7",241,"^6Q","~$array","^9",241,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$s","~$o","^72"]]]]]],"^8G",["^ ","^7T",5,"^7U",["^M",["^8@","^8A","^8B"]],"^N","^2T","^6","reagent/impl/template.cljs","^7V",true,"^8?",true,"^8",null,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^8F","^8G",["^8C","^7X","^7D","^8D","^8E"],"^8B",["^1>",["^8H",["^8I","^8E"],["^1>",["^8J","^8G","^8C","^7X","^7D","^8D","^8E"]]]],"^8A",["^1>",["^8K",["^8I"],"^8E"]],"^8L",["^1>",["^8M",["^7C"],"^7X"]],["^1>",["^8N",["^7C","^8O","^8P"],["^1>",["^8D","^7C","^8O","^8P"]]]],["^1>",["^7B",["^7C","~$x"],["^1>",["^7B","^7C","~$x","^7D"]]]],["^1>",["^8Q",["^7C","^8R","^8S","^74","^8T"],["^1>",["^8Q","^7C","^8R","^8S","^74","^8T"]]]]]]],"^7",null,"^7[",false,"^6?","^80","^81",["^M",["^8A","^8B"]]],"^8;",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",62,"^8",7,"^9",62,"^:",25,"^6A",["^1>",["^6B",["^1>",[["~$x"]]]]]],"^N","^2@","^6","reagent/impl/template.cljs","^:",25,"^6C",["^1>",[["~$x"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^8;",["~$x"],["^1>",["^7E",["^1>",["^7F","~$x"]],"~$x",["^1>",["^1;","~$x"]],["^1>",["^7M","~$x"]],["^1>",["^:3","~$x"]],["^1>",["^:4","^9Q",["^75",["^ "]],"~$x"]],["^1>",["^:5","~$x"]],["^1>",["^:6","~$x"]],["^1>",["^6M","~$x"]],["^1>",["^:7",["~$&","^:8"],["^1>",["^:9","~$x","^:8"]]]],"^7Q",["^1>",["^:6","~$x"]]]]]]],"^6P",false,"^7",62,"^6Q",["^M",[null,"^6Z","^16","^80"]],"^9",62,"^6R",1,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$x"]]]]]],"^9R",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",47,"^8",7,"^9",47,"^:",23,"^6A",["^1>",["^6B",["^1>",[["~$k"]]]]]],"^N","^2V","^6","reagent/impl/template.cljs","^:",23,"^6C",["^1>",[["~$k"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^9R",["~$k"],["^1>",["^7J",["^1>",["^1;","~$k"]],["^1>",["~$if-some",["~$k'",["^1>",["^:Z","^9<",["^1>",["^7M","~$k"]]]]],"^;;",["^1>",["^73",["~$v",["^1>",["~$util/dash-to-prop-name","~$k"]]],["^1>",["^89","^9<",["^1>",["^7M","~$k"]],"~$v"]],"~$v"]]]],"~$k"]]]]],"^6P",false,"^7",47,"^6Q",["^M",[null,"^6Z","^1O","^16","^7R"]],"^9",47,"^6R",1,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$k"]]]]]],"^8:",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",76,"^8",7,"^9",76,"^:",30,"^6A",["^1>",["^6B",["^1>",[["~$k"]]]]]],"^N","^2X","^6","reagent/impl/template.cljs","^:",30,"^6C",["^1>",[["~$k"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^8:",["~$k"],["^1>",["^7J",["^1>",["^1;","~$k"]],["^1>",["^;:",["^;;",["^1>",["^:Z","^9D",["^1>",["^7M","~$k"]]]]],"^;;",["^1>",["^73",["~$v",["^1>",["^;<","~$k"]]],["^1>",["^89","^9D",["^1>",["^7M","~$k"]],"~$v"]],"~$v"]]]],"~$k"]]]]],"^6P",false,"^7",76,"^6Q",["^M",[null,"^6Z","^1O","^16","^7R"]],"^9",76,"^6R",1,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$k"]]]]]],"^84",["^ ","^5",["^ ","^6","reagent/impl/template.cljs","^7",322,"^8",6,"^9",322,"^:",20],"^N","^2H","^6","reagent/impl/template.cljs","^:",20,"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6X","^84",["^1>",["^:M",["^ "]]]]]],"^7",322,"^9",322,"^6?","^2T"],"^7L",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",238,"^8",7,"^9",238,"^:",17,"^6A",["^1>",["^6B",["^1>",[["~$s","^72"]]]]]],"^N","^1Z","^6","reagent/impl/template.cljs","^:",17,"^6C",["^1>",[["~$s","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^7L",["~$s","^72"],["^1>",["^;5",["^1>",["^;6",["^1>",["~$fn*",["~$p1__19946#"],["^1>",["^:E","^72","^;>"]]]],"~$s"]]]]]]],"^6P",false,"^7",238,"^6Q","^;9","^9",238,"^6R",2,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$s","^72"]]]]]],"^9N",["^ ","^6>",null,"^5",["^ ","^7U",["^M",[]],"^6","reagent/impl/template.cljs","^:",19,"^8",10,"^85","^86","^7",143,"^9",143,"^6A",["^1>",["^6B",["^1>",[["^70","^7X","^7Y","^7Z"]]]]],"^81",null,"^6W","Positional factory function for reagent.impl.template/HiccupTag."],"^7U",["^M",[]],"^N","^2I","^6","reagent/impl/template.cljs","^:",19,"^6C",["^1>",[["^70","^7X","^7Y","^7Z"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^7W","^7S",["^70","^7X","^7Y","^7Z"]]]],"^6P",false,"^85","^86","^7",143,"^6Q","^2[","^9",143,"^6R",4,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^70","^7X","^7Y","^7Z"]]]]],"^81",null,"^6W","Positional factory function for reagent.impl.template/HiccupTag."],"^7K",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",249,"^8",7,"^9",249,"^:",23,"^6A",["^1>",["^6B",["^1>",[["~$x","^72"]]]]]],"^N","^38","^6","reagent/impl/template.cljs","^:",23,"^6C",["^1>",[["~$x","^72"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^7K",["~$x","^72"],["^1>",["^73",["~$ctx",["^75",["^ "]],["~$res","~$derefed"],["^1>",["~$ratom/check-derefs",["^1>",["^;=",[],["^1>",["^;4","~$x","^;?","^72"]]]]]]],["^1>",["^:G","^;A",["^1>",["^K",["^1>",["^9Y","~$x",["^1>",["^9M"]],"Reactive deref not supported in lazy seq, ","it should be wrapped in doall"]]]]]],["^1>",["^:G",["^1>",["^;8","^;?"]],["^1>",["^K",["^1>",["^9Y","~$x",["^1>",["^9M"]],"Every element in a seq should have a unique :key"]]]]]],"^;@"]]]]],"^6P",false,"^7",249,"^6Q",["^M",[null,"^6Z","^7R"]],"^9",249,"^6R",2,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["~$x","^72"]]]]]],"^:R",["^ ","^6>",null,"^5",["^ ","^6","reagent/impl/template.cljs","^7",194,"^8",7,"^9",194,"^:",19,"^6A",["^1>",["^6B",["^1>",[["^7C","~$x","~$_"]]]]]],"^N","^3:","^6","reagent/impl/template.cljs","^:",19,"^6C",["^1>",[["^7C","~$x","~$_"]]],"^6D",null,"^6E",["^1>",[null,null]],"^8",1,"^6F",["^ ","^6G","^6H","^6I",["^1>",["^6J","^:R",["^7C","~$x","~$_"],["^1>",["^;:",["~$s",["^1>",["^:Z","^9:","~$x"]]],"~$s",["^1>",["^73",["~$v",["^1>",["^8N","~$x"]]],["^1>",["^89","^9:","~$x","~$v"]],"~$v"]]]]]]],"^6P",false,"^7",194,"^6Q",["^M",["^1O","^2[","^7R"]],"^9",194,"^6R",3,"^6S",true,"^6A",["^1>",["^6B",["^1>",[["^7C","~$x","~$_"]]]]]]],"^1<",["^ ","^J","^J","^10","^10","^[","^[","^15","^["],"~:cljs.analyzer/constants",["^ ","^18",["^M",["^70","^:H","^7Q","^7D","^:Q","^98","^8D","^:O","^7Z","^94","^96","^7Y","^7X","^8E","^8C"]],"~:order",["^70","^7X","^7Y","^7Q","^94","^96","^98","^7Z","^:H","^:O","^:Q","^8C","^7D","^8D","^8E"]],"^1C",["^ ","^19",["^M",[]]],"^1D",["^ "],"^1E",["^13","^10","^E","^17","^W","^Z","^V","^X","^[","^J","^12"]],"^R","^O","~:ns-specs",["^ "],"~:ns-spec-vars",["^M",[]],"~:compiler-options",["^48",[["^;G","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^;G","~:shadow-tweaks"],null,["^;G","~:source-map-inline"],null,["^;G","~:shadow-optimize-constants"],null,["^;G","~:elide-asserts"],false,["^;G","~:optimize-constants"],null,["^;G","^1J"],null,["^;G","~:external-config"],null,["^;G","~:tooling-config"],null,["^;G","~:emit-constants"],null,["^;G","~:load-tests"],null,["^;G","~:form-size-threshold"],null,["^;G","~:global-goog-object&array"],null,["^;G","~:data-readers"],null,["^;G","~:infer-externs"],"~:auto",["^;G","^1L"],null,["^;I","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;G","~:fn-invoke-direct"],null,["^;G","~:source-map"],"/dev/null"]]]