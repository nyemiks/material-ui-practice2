["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/system/styleFunctionSx/styleFunctionSx.js"],"~:js","shadow$provide.module$node_modules$$mui$system$styleFunctionSx$styleFunctionSx = function(global, require, module, exports) {\n  function objectsHaveSameKeys(...objects) {\n    const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []), union = new Set(allKeys);\n    return objects.every(object => union.size === Object.keys(object).length);\n  }\n  function callIfFn(maybeFn, arg) {\n    return \"function\" === typeof maybeFn ? maybeFn(arg) : maybeFn;\n  }\n  function unstable_createStyleFunctionSx() {\n    function getThemeValue(prop, val, theme, config) {\n      const props = {[prop]:val, theme};\n      config = config[prop];\n      if (!config) {\n        return {[prop]:val};\n      }\n      const {cssProperty = prop, themeKey, transform, style} = config;\n      if (null == val) {\n        return null;\n      }\n      if (\"typography\" === themeKey && \"inherit\" === val) {\n        return {[prop]:val};\n      }\n      const themeMapping = (0,_style.getPath)(theme, themeKey) || {};\n      return style ? style(props) : (0,_breakpoints.handleBreakpoints)(props, val, propValueFinal => {\n        let value = (0,_style.getStyleValue)(themeMapping, transform, propValueFinal);\n        propValueFinal === value && \"string\" === typeof propValueFinal && (value = (0,_style.getStyleValue)(themeMapping, transform, `${prop}${\"default\" === propValueFinal ? \"\" : (0,_capitalize.default)(propValueFinal)}`, propValueFinal));\n        return !1 === cssProperty ? value : {[cssProperty]:value};\n      });\n    }\n    function styleFunctionSx(props) {\n      function traverse(sxInput) {\n        let sxObject = sxInput;\n        if (\"function\" === typeof sxInput) {\n          sxObject = sxInput(theme);\n        } else if (\"object\" !== typeof sxInput) {\n          return sxInput;\n        }\n        if (!sxObject) {\n          return null;\n        }\n        sxInput = (0,_breakpoints.createEmptyBreakpointObject)(theme.breakpoints);\n        const breakpointsKeys = Object.keys(sxInput);\n        let css = sxInput;\n        Object.keys(sxObject).forEach(styleKey => {\n          const value = callIfFn(sxObject[styleKey], theme);\n          if (null !== value && void 0 !== value) {\n            if (\"object\" === typeof value) {\n              if (config[styleKey]) {\n                css = (0,_merge.default)(css, getThemeValue(styleKey, value, theme, config));\n              } else {\n                const breakpointsValues = (0,_breakpoints.handleBreakpoints)({theme}, value, x => ({[styleKey]:x}));\n                objectsHaveSameKeys(breakpointsValues, value) ? css[styleKey] = styleFunctionSx({sx:value, theme}) : css = (0,_merge.default)(css, breakpointsValues);\n              }\n            } else {\n              css = (0,_merge.default)(css, getThemeValue(styleKey, value, theme, config));\n            }\n          }\n        });\n        return (0,_breakpoints.removeUnusedBreakpoints)(breakpointsKeys, css);\n      }\n      var _theme$unstable_sxCon;\n      const {sx, theme = {}} = props || {};\n      if (!sx) {\n        return null;\n      }\n      const config = null != (_theme$unstable_sxCon = theme.unstable_sxConfig) ? _theme$unstable_sxCon : _defaultSxConfig.default;\n      return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n    }\n    return styleFunctionSx;\n  }\n  global = require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.default = void 0;\n  exports.unstable_createStyleFunctionSx = unstable_createStyleFunctionSx;\n  var _capitalize = global(require(\"module$node_modules$$mui$utils$node$capitalize$index\")), _merge = global(require(\"module$node_modules$$mui$system$merge\")), _style = require(\"module$node_modules$$mui$system$style\"), _breakpoints = require(\"module$node_modules$$mui$system$breakpoints\"), _defaultSxConfig = global(require(\"module$node_modules$$mui$system$styleFunctionSx$defaultSxConfig\"));\n  require = unstable_createStyleFunctionSx();\n  require.filterProps = [\"sx\"];\n  exports.default = require;\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$system$styleFunctionSx$styleFunctionSx\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unstable_createStyleFunctionSx = unstable_createStyleFunctionSx;\nvar _capitalize = _interopRequireDefault(require(\"@mui/utils/capitalize\"));\nvar _merge = _interopRequireDefault(require(\"../merge\"));\nvar _style = require(\"../style\");\nvar _breakpoints = require(\"../breakpoints\");\nvar _defaultSxConfig = _interopRequireDefault(require(\"./defaultSxConfig\"));\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction unstable_createStyleFunctionSx() {\n  function getThemeValue(prop, val, theme, config) {\n    const props = {\n      [prop]: val,\n      theme\n    };\n    const options = config[prop];\n    if (!options) {\n      return {\n        [prop]: val\n      };\n    }\n    const {\n      cssProperty = prop,\n      themeKey,\n      transform,\n      style\n    } = options;\n    if (val == null) {\n      return null;\n    }\n\n    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123\n    if (themeKey === 'typography' && val === 'inherit') {\n      return {\n        [prop]: val\n      };\n    }\n    const themeMapping = (0, _style.getPath)(theme, themeKey) || {};\n    if (style) {\n      return style(props);\n    }\n    const styleFromPropValue = propValueFinal => {\n      let value = (0, _style.getStyleValue)(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = (0, _style.getStyleValue)(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0, _capitalize.default)(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return (0, _breakpoints.handleBreakpoints)(props, val, styleFromPropValue);\n  }\n  function styleFunctionSx(props) {\n    var _theme$unstable_sxCon;\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : _defaultSxConfig.default;\n\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n      if (!sxObject) {\n        return null;\n      }\n      const emptyBreakpoints = (0, _breakpoints.createEmptyBreakpointObject)(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (config[styleKey]) {\n              css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme, config));\n            } else {\n              const breakpointsValues = (0, _breakpoints.handleBreakpoints)({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = (0, _merge.default)(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme, config));\n          }\n        }\n      });\n      return (0, _breakpoints.removeUnusedBreakpoints)(breakpointsKeys, css);\n    }\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\nvar _default = exports.default = styleFunctionSx;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$mui$system$styleFunctionSx$defaultSxConfig","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$$mui$system$breakpoints","~$module$node_modules$$mui$system$merge","~$module$node_modules$$mui$utils$node$capitalize$index","~$module$node_modules$$mui$system$style"]],"~:properties",["^5",["__esModule","sx","value","unstable_createStyleFunctionSx","filterProps","theme","default"]],"~:compiled-at",1712152510493,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$system$styleFunctionSx$styleFunctionSx.js\",\n\"lineCount\":80,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@mui/system/styleFunctionSx/styleFunctionSx.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$system$styleFunctionSx$styleFunctionSx\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\nexports.unstable_createStyleFunctionSx = unstable_createStyleFunctionSx;\\nvar _capitalize = _interopRequireDefault(require(\\\"@mui/utils/capitalize\\\"));\\nvar _merge = _interopRequireDefault(require(\\\"../merge\\\"));\\nvar _style = require(\\\"../style\\\");\\nvar _breakpoints = require(\\\"../breakpoints\\\");\\nvar _defaultSxConfig = _interopRequireDefault(require(\\\"./defaultSxConfig\\\"));\\nfunction objectsHaveSameKeys(...objects) {\\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\\n  const union = new Set(allKeys);\\n  return objects.every(object => union.size === Object.keys(object).length);\\n}\\nfunction callIfFn(maybeFn, arg) {\\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\\n}\\n\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\nfunction unstable_createStyleFunctionSx() {\\n  function getThemeValue(prop, val, theme, config) {\\n    const props = {\\n      [prop]: val,\\n      theme\\n    };\\n    const options = config[prop];\\n    if (!options) {\\n      return {\\n        [prop]: val\\n      };\\n    }\\n    const {\\n      cssProperty = prop,\\n      themeKey,\\n      transform,\\n      style\\n    } = options;\\n    if (val == null) {\\n      return null;\\n    }\\n\\n    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123\\n    if (themeKey === 'typography' && val === 'inherit') {\\n      return {\\n        [prop]: val\\n      };\\n    }\\n    const themeMapping = (0, _style.getPath)(theme, themeKey) || {};\\n    if (style) {\\n      return style(props);\\n    }\\n    const styleFromPropValue = propValueFinal => {\\n      let value = (0, _style.getStyleValue)(themeMapping, transform, propValueFinal);\\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\\n        // Haven't found value\\n        value = (0, _style.getStyleValue)(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : (0, _capitalize.default)(propValueFinal)}`, propValueFinal);\\n      }\\n      if (cssProperty === false) {\\n        return value;\\n      }\\n      return {\\n        [cssProperty]: value\\n      };\\n    };\\n    return (0, _breakpoints.handleBreakpoints)(props, val, styleFromPropValue);\\n  }\\n  function styleFunctionSx(props) {\\n    var _theme$unstable_sxCon;\\n    const {\\n      sx,\\n      theme = {}\\n    } = props || {};\\n    if (!sx) {\\n      return null; // Emotion & styled-components will neglect null\\n    }\\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : _defaultSxConfig.default;\\n\\n    /*\\n     * Receive `sxInput` as object or callback\\n     * and then recursively check keys & values to create media query object styles.\\n     * (the result will be used in `styled`)\\n     */\\n    function traverse(sxInput) {\\n      let sxObject = sxInput;\\n      if (typeof sxInput === 'function') {\\n        sxObject = sxInput(theme);\\n      } else if (typeof sxInput !== 'object') {\\n        // value\\n        return sxInput;\\n      }\\n      if (!sxObject) {\\n        return null;\\n      }\\n      const emptyBreakpoints = (0, _breakpoints.createEmptyBreakpointObject)(theme.breakpoints);\\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\\n      let css = emptyBreakpoints;\\n      Object.keys(sxObject).forEach(styleKey => {\\n        const value = callIfFn(sxObject[styleKey], theme);\\n        if (value !== null && value !== undefined) {\\n          if (typeof value === 'object') {\\n            if (config[styleKey]) {\\n              css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme, config));\\n            } else {\\n              const breakpointsValues = (0, _breakpoints.handleBreakpoints)({\\n                theme\\n              }, value, x => ({\\n                [styleKey]: x\\n              }));\\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\\n                css[styleKey] = styleFunctionSx({\\n                  sx: value,\\n                  theme\\n                });\\n              } else {\\n                css = (0, _merge.default)(css, breakpointsValues);\\n              }\\n            }\\n          } else {\\n            css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme, config));\\n          }\\n        }\\n      });\\n      return (0, _breakpoints.removeUnusedBreakpoints)(breakpointsKeys, css);\\n    }\\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\\n  }\\n  return styleFunctionSx;\\n}\\nconst styleFunctionSx = unstable_createStyleFunctionSx();\\nstyleFunctionSx.filterProps = ['sx'];\\nvar _default = exports.default = styleFunctionSx;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"objectsHaveSameKeys\",\"objects\",\"allKeys\",\"reduce\",\"keys\",\"object\",\"concat\",\"Object\",\"union\",\"Set\",\"every\",\"size\",\"length\",\"callIfFn\",\"maybeFn\",\"arg\",\"unstable_createStyleFunctionSx\",\"getThemeValue\",\"prop\",\"val\",\"theme\",\"config\",\"props\",\"options\",\"cssProperty\",\"themeKey\",\"transform\",\"style\",\"themeMapping\",\"_style\",\"getPath\",\"_breakpoints\",\"handleBreakpoints\",\"propValueFinal\",\"styleFromPropValue\",\"value\",\"getStyleValue\",\"_capitalize\",\"default\",\"styleFunctionSx\",\"traverse\",\"sxInput\",\"sxObject\",\"emptyBreakpoints\",\"createEmptyBreakpointObject\",\"breakpoints\",\"breakpointsKeys\",\"css\",\"forEach\",\"styleKey\",\"undefined\",\"_merge\",\"breakpointsValues\",\"x\",\"sx\",\"removeUnusedBreakpoints\",\"_theme$unstable_sxCon\",\"unstable_sxConfig\",\"_defaultSxConfig\",\"Array\",\"isArray\",\"map\",\"_interopRequireDefault\",\"defineProperty\",\"filterProps\"]\n}\n"]