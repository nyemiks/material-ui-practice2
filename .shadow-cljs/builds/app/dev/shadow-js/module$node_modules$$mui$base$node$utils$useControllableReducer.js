["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/base/node/utils/useControllableReducer.js"],"~:js","shadow$provide.module$node_modules$$mui$base$node$utils$useControllableReducer = function(global, require, module, exports) {\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) {\n      return null;\n    }\n    var r = new WeakMap(), t = new WeakMap();\n    return (_getRequireWildcardCache = function(e) {\n      return e ? t : r;\n    })(e);\n  }\n  function areEqual(a, b) {\n    return a === b;\n  }\n  function getControlledState(internalState, controlledProps) {\n    const augmentedState = (0,_extends2.default)({}, internalState);\n    Object.keys(controlledProps).forEach(key => {\n      void 0 !== controlledProps[key] && (augmentedState[key] = controlledProps[key]);\n    });\n    return augmentedState;\n  }\n  function useStateChangeDetection(parameters) {\n    const {nextState, initialState, stateComparers, onStateChange, controlledProps, lastActionRef} = parameters, internalPreviousStateRef = React.useRef(initialState);\n    React.useEffect(() => {\n      if (null !== lastActionRef.current) {\n        var previousState = getControlledState(internalPreviousStateRef.current, controlledProps);\n        Object.keys(nextState).forEach(key => {\n          var _stateComparers$key;\n          const stateComparer = null != (_stateComparers$key = stateComparers[key]) ? _stateComparers$key : areEqual;\n          _stateComparers$key = nextState[key];\n          const previousStateItem = previousState[key];\n          if (null == previousStateItem && null != _stateComparers$key || null != previousStateItem && null == _stateComparers$key || null != previousStateItem && null != _stateComparers$key && !stateComparer(_stateComparers$key, previousStateItem)) {\n            var _event, _type;\n            null == onStateChange || onStateChange(null != (_event = lastActionRef.current.event) ? _event : null, key, _stateComparers$key, null != (_type = lastActionRef.current.type) ? _type : \"\", nextState);\n          }\n        });\n        internalPreviousStateRef.current = nextState;\n        lastActionRef.current = null;\n      }\n    }, [internalPreviousStateRef, nextState, lastActionRef, onStateChange, stateComparers, controlledProps]);\n  }\n  \"use client\";\n  global = require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.useControllableReducer = function(parameters) {\n    const lastActionRef = React.useRef(null), {reducer, initialState, controlledProps = EMPTY_OBJECT, stateComparers = EMPTY_OBJECT, onStateChange = NOOP, actionContext, componentName = \"\"} = parameters, controlledPropsRef = React.useRef(controlledProps);\n    React.useEffect(() => {\n      Object.keys(controlledProps).forEach(key => {\n        void 0 !== controlledPropsRef.current[key] && void 0 === controlledProps[key] && console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : \"A component\"} is changing a controlled prop to be uncontrolled: ${key}`);\n        void 0 === controlledPropsRef.current[key] && void 0 !== controlledProps[key] && console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : \"A component\"} is changing an uncontrolled prop to be controlled: ${key}`);\n      });\n    }, [controlledProps, componentName]);\n    parameters = React.useCallback((state, action) => {\n      lastActionRef.current = action;\n      state = getControlledState(state, controlledProps);\n      return reducer(state, action);\n    }, [controlledProps, reducer]);\n    const [nextState, dispatch] = React.useReducer(parameters, initialState);\n    parameters = React.useCallback(action => {\n      dispatch((0,_extends2.default)({}, action, {context:actionContext}));\n    }, [actionContext]);\n    useStateChangeDetection({nextState, initialState, stateComparers:null != stateComparers ? stateComparers : EMPTY_OBJECT, onStateChange:null != onStateChange ? onStateChange : NOOP, controlledProps, lastActionRef});\n    return [getControlledState(nextState, controlledProps), parameters];\n  };\n  var _extends2 = global(require(\"module$node_modules$$babel$runtime$helpers$extends\")), React = function(e, r) {\n    if (!r && e && e.__esModule) {\n      return e;\n    }\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) {\n      return {default:e};\n    }\n    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {\n      return r.get(e);\n    }\n    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;\n    for (u in e) {\n      if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) {\n        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n      }\n    }\n    return n.default = e, r && r.set(e, n), n;\n  }(require(\"module$node_modules$react$index\"));\n  const EMPTY_OBJECT = {}, NOOP = () => {\n  };\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$base$node$utils$useControllableReducer\"] = function(global,require,module,exports) {\n\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useControllableReducer = useControllableReducer;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction areEqual(a, b) {\n  return a === b;\n}\nconst EMPTY_OBJECT = {};\nconst NOOP = () => {};\n\n/**\n * Gets the current state augmented with controlled values from the outside.\n * If a state item has a corresponding controlled value, it will be used instead of the internal state.\n */\nfunction getControlledState(internalState, controlledProps) {\n  const augmentedState = (0, _extends2.default)({}, internalState);\n  Object.keys(controlledProps).forEach(key => {\n    if (controlledProps[key] !== undefined) {\n      augmentedState[key] = controlledProps[key];\n    }\n  });\n  return augmentedState;\n}\n/**\n * Defines an effect that compares the next state with the previous state and calls\n * the `onStateChange` callback if the state has changed.\n * The comparison is done based on the `stateComparers` parameter.\n */\nfunction useStateChangeDetection(parameters) {\n  const {\n    nextState,\n    initialState,\n    stateComparers,\n    onStateChange,\n    controlledProps,\n    lastActionRef\n  } = parameters;\n  const internalPreviousStateRef = React.useRef(initialState);\n  React.useEffect(() => {\n    if (lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    const previousState = getControlledState(internalPreviousStateRef.current, controlledProps);\n    Object.keys(nextState).forEach(key => {\n      var _stateComparers$key;\n      // go through all state keys and compare them with the previous state\n      const stateComparer = (_stateComparers$key = stateComparers[key]) != null ? _stateComparers$key : areEqual;\n      const nextStateItem = nextState[key];\n      const previousStateItem = previousState[key];\n      if (previousStateItem == null && nextStateItem != null || previousStateItem != null && nextStateItem == null || previousStateItem != null && nextStateItem != null && !stateComparer(nextStateItem, previousStateItem)) {\n        var _event, _type;\n        onStateChange == null || onStateChange((_event = lastActionRef.current.event) != null ? _event : null, key, nextStateItem, (_type = lastActionRef.current.type) != null ? _type : '', nextState);\n      }\n    });\n    internalPreviousStateRef.current = nextState;\n    lastActionRef.current = null;\n  }, [internalPreviousStateRef, nextState, lastActionRef, onStateChange, stateComparers, controlledProps]);\n}\n\n/**\n * The alternative to `React.useReducer` that lets you control the state from the outside.\n *\n * It can be used in an uncontrolled mode, similar to `React.useReducer`, or in a controlled mode, when the state is controlled by the props.\n * It also supports partially controlled state, when some state items are controlled and some are not.\n *\n * The controlled state items are provided via the `controlledProps` parameter.\n * When a reducer action is dispatched, the internal state is updated with the new values.\n * A change event (`onStateChange`) is then triggered (for each changed state item) if the new state is different from the previous state.\n * This event can be used to update the controlled values.\n *\n * The comparison of the previous and next states is done using the `stateComparers` parameter.\n * If a state item has a corresponding comparer, it will be used to determine if the state has changed.\n * This is useful when the state item is an object and you want to compare only a subset of its properties or if it's an array and you want to compare its contents.\n *\n * An additional feature is the `actionContext` parameter. It allows you to add additional properties to every action object,\n * similarly to how React context is implicitly available to every component.\n *\n * @template State - The type of the state calculated by the reducer.\n * @template Action - The type of the actions that can be dispatched.\n * @template ActionContext - The type of the additional properties that will be added to every action object.\n *\n * @ignore - internal hook.\n */\nfunction useControllableReducer(parameters) {\n  const lastActionRef = React.useRef(null);\n  const {\n    reducer,\n    initialState,\n    controlledProps = EMPTY_OBJECT,\n    stateComparers = EMPTY_OBJECT,\n    onStateChange = NOOP,\n    actionContext,\n    componentName = ''\n  } = parameters;\n  const controlledPropsRef = React.useRef(controlledProps);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      Object.keys(controlledProps).forEach(key => {\n        if (controlledPropsRef.current[key] !== undefined && controlledProps[key] === undefined) {\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing a controlled prop to be uncontrolled: ${key}`);\n        }\n        if (controlledPropsRef.current[key] === undefined && controlledProps[key] !== undefined) {\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing an uncontrolled prop to be controlled: ${key}`);\n        }\n      });\n    }, [controlledProps, componentName]);\n  }\n\n  // The reducer that is passed to React.useReducer is wrapped with a function that augments the state with controlled values.\n  const reducerWithControlledState = React.useCallback((state, action) => {\n    lastActionRef.current = action;\n    const controlledState = getControlledState(state, controlledProps);\n    const newState = reducer(controlledState, action);\n    return newState;\n  }, [controlledProps, reducer]);\n  const [nextState, dispatch] = React.useReducer(reducerWithControlledState, initialState);\n\n  // The action that is passed to dispatch is augmented with the actionContext.\n  const dispatchWithContext = React.useCallback(action => {\n    dispatch((0, _extends2.default)({}, action, {\n      context: actionContext\n    }));\n  }, [actionContext]);\n  useStateChangeDetection({\n    nextState,\n    initialState,\n    stateComparers: stateComparers != null ? stateComparers : EMPTY_OBJECT,\n    onStateChange: onStateChange != null ? onStateChange : NOOP,\n    controlledProps,\n    lastActionRef\n  });\n  return [getControlledState(nextState, controlledProps), dispatchWithContext];\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends"]],"~:properties",["^5",["useControllableReducer","__esModule","nextState","value","context","stateComparers","lastActionRef","current","onStateChange","__proto__","initialState","controlledProps","default"]],"~:compiled-at",1712152511053,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$base$node$utils$useControllableReducer.js\",\n\"lineCount\":86,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@mui/base/node/utils/useControllableReducer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$base$node$utils$useControllableReducer\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n'use client';\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.useControllableReducer = useControllableReducer;\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\nvar React = _interopRequireWildcard(require(\\\"react\\\"));\\nfunction _getRequireWildcardCache(e) { if (\\\"function\\\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \\\"object\\\" != typeof e && \\\"function\\\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\\\"default\\\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\\nfunction areEqual(a, b) {\\n  return a === b;\\n}\\nconst EMPTY_OBJECT = {};\\nconst NOOP = () => {};\\n\\n/**\\n * Gets the current state augmented with controlled values from the outside.\\n * If a state item has a corresponding controlled value, it will be used instead of the internal state.\\n */\\nfunction getControlledState(internalState, controlledProps) {\\n  const augmentedState = (0, _extends2.default)({}, internalState);\\n  Object.keys(controlledProps).forEach(key => {\\n    if (controlledProps[key] !== undefined) {\\n      augmentedState[key] = controlledProps[key];\\n    }\\n  });\\n  return augmentedState;\\n}\\n/**\\n * Defines an effect that compares the next state with the previous state and calls\\n * the `onStateChange` callback if the state has changed.\\n * The comparison is done based on the `stateComparers` parameter.\\n */\\nfunction useStateChangeDetection(parameters) {\\n  const {\\n    nextState,\\n    initialState,\\n    stateComparers,\\n    onStateChange,\\n    controlledProps,\\n    lastActionRef\\n  } = parameters;\\n  const internalPreviousStateRef = React.useRef(initialState);\\n  React.useEffect(() => {\\n    if (lastActionRef.current === null) {\\n      // Detect changes only if an action has been dispatched.\\n      return;\\n    }\\n    const previousState = getControlledState(internalPreviousStateRef.current, controlledProps);\\n    Object.keys(nextState).forEach(key => {\\n      var _stateComparers$key;\\n      // go through all state keys and compare them with the previous state\\n      const stateComparer = (_stateComparers$key = stateComparers[key]) != null ? _stateComparers$key : areEqual;\\n      const nextStateItem = nextState[key];\\n      const previousStateItem = previousState[key];\\n      if (previousStateItem == null && nextStateItem != null || previousStateItem != null && nextStateItem == null || previousStateItem != null && nextStateItem != null && !stateComparer(nextStateItem, previousStateItem)) {\\n        var _event, _type;\\n        onStateChange == null || onStateChange((_event = lastActionRef.current.event) != null ? _event : null, key, nextStateItem, (_type = lastActionRef.current.type) != null ? _type : '', nextState);\\n      }\\n    });\\n    internalPreviousStateRef.current = nextState;\\n    lastActionRef.current = null;\\n  }, [internalPreviousStateRef, nextState, lastActionRef, onStateChange, stateComparers, controlledProps]);\\n}\\n\\n/**\\n * The alternative to `React.useReducer` that lets you control the state from the outside.\\n *\\n * It can be used in an uncontrolled mode, similar to `React.useReducer`, or in a controlled mode, when the state is controlled by the props.\\n * It also supports partially controlled state, when some state items are controlled and some are not.\\n *\\n * The controlled state items are provided via the `controlledProps` parameter.\\n * When a reducer action is dispatched, the internal state is updated with the new values.\\n * A change event (`onStateChange`) is then triggered (for each changed state item) if the new state is different from the previous state.\\n * This event can be used to update the controlled values.\\n *\\n * The comparison of the previous and next states is done using the `stateComparers` parameter.\\n * If a state item has a corresponding comparer, it will be used to determine if the state has changed.\\n * This is useful when the state item is an object and you want to compare only a subset of its properties or if it's an array and you want to compare its contents.\\n *\\n * An additional feature is the `actionContext` parameter. It allows you to add additional properties to every action object,\\n * similarly to how React context is implicitly available to every component.\\n *\\n * @template State - The type of the state calculated by the reducer.\\n * @template Action - The type of the actions that can be dispatched.\\n * @template ActionContext - The type of the additional properties that will be added to every action object.\\n *\\n * @ignore - internal hook.\\n */\\nfunction useControllableReducer(parameters) {\\n  const lastActionRef = React.useRef(null);\\n  const {\\n    reducer,\\n    initialState,\\n    controlledProps = EMPTY_OBJECT,\\n    stateComparers = EMPTY_OBJECT,\\n    onStateChange = NOOP,\\n    actionContext,\\n    componentName = ''\\n  } = parameters;\\n  const controlledPropsRef = React.useRef(controlledProps);\\n  if (process.env.NODE_ENV !== 'production') {\\n    // eslint-disable-next-line react-hooks/rules-of-hooks\\n    React.useEffect(() => {\\n      Object.keys(controlledProps).forEach(key => {\\n        if (controlledPropsRef.current[key] !== undefined && controlledProps[key] === undefined) {\\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing a controlled prop to be uncontrolled: ${key}`);\\n        }\\n        if (controlledPropsRef.current[key] === undefined && controlledProps[key] !== undefined) {\\n          console.error(`useControllableReducer: ${componentName ? `The ${componentName} component` : 'A component'} is changing an uncontrolled prop to be controlled: ${key}`);\\n        }\\n      });\\n    }, [controlledProps, componentName]);\\n  }\\n\\n  // The reducer that is passed to React.useReducer is wrapped with a function that augments the state with controlled values.\\n  const reducerWithControlledState = React.useCallback((state, action) => {\\n    lastActionRef.current = action;\\n    const controlledState = getControlledState(state, controlledProps);\\n    const newState = reducer(controlledState, action);\\n    return newState;\\n  }, [controlledProps, reducer]);\\n  const [nextState, dispatch] = React.useReducer(reducerWithControlledState, initialState);\\n\\n  // The action that is passed to dispatch is augmented with the actionContext.\\n  const dispatchWithContext = React.useCallback(action => {\\n    dispatch((0, _extends2.default)({}, action, {\\n      context: actionContext\\n    }));\\n  }, [actionContext]);\\n  useStateChangeDetection({\\n    nextState,\\n    initialState,\\n    stateComparers: stateComparers != null ? stateComparers : EMPTY_OBJECT,\\n    onStateChange: onStateChange != null ? onStateChange : NOOP,\\n    controlledProps,\\n    lastActionRef\\n  });\\n  return [getControlledState(nextState, controlledProps), dispatchWithContext];\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_getRequireWildcardCache\",\"e\",\"WeakMap\",\"r\",\"t\",\"areEqual\",\"a\",\"b\",\"getControlledState\",\"internalState\",\"controlledProps\",\"augmentedState\",\"_extends2\",\"default\",\"Object\",\"keys\",\"forEach\",\"key\",\"undefined\",\"useStateChangeDetection\",\"parameters\",\"nextState\",\"initialState\",\"stateComparers\",\"onStateChange\",\"lastActionRef\",\"internalPreviousStateRef\",\"React\",\"useRef\",\"useEffect\",\"current\",\"previousState\",\"_stateComparers$key\",\"stateComparer\",\"nextStateItem\",\"previousStateItem\",\"_event\",\"_type\",\"event\",\"type\",\"_interopRequireDefault\",\"defineProperty\",\"value\",\"useControllableReducer\",\"reducer\",\"EMPTY_OBJECT\",\"NOOP\",\"actionContext\",\"componentName\",\"controlledPropsRef\",\"console\",\"error\",\"reducerWithControlledState\",\"useCallback\",\"state\",\"action\",\"controlledState\",\"newState\",\"dispatch\",\"useReducer\",\"dispatchWithContext\",\"context\",\"_interopRequireWildcard\",\"__esModule\",\"has\",\"get\",\"n\",\"__proto__\",\"getOwnPropertyDescriptor\",\"u\",\"prototype\",\"hasOwnProperty\",\"call\",\"i\",\"set\"]\n}\n"]