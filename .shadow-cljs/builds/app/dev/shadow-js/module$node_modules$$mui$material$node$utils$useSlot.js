["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/material/node/utils/useSlot.js"],"~:js","shadow$provide.module$node_modules$$mui$material$node$utils$useSlot = function(global, require, module, exports) {\n  \"use client\";\n  global = require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.default = function(name, parameters) {\n    const {className, elementType:initialElementType, ownerState, externalForwardedProps, getSlotOwnerState, internalForwardedProps} = parameters;\n    var useSlotPropsParams = (0,_objectWithoutPropertiesLoose2.default)(parameters, _excluded);\n    const {component:rootComponent, slots = {[name]:void 0}, slotProps = {[name]:void 0}} = externalForwardedProps;\n    var other = (0,_objectWithoutPropertiesLoose2.default)(externalForwardedProps, _excluded2);\n    const elementType = slots[name] || initialElementType;\n    var resolvedComponentsProps = (0,_utils.resolveComponentProps)(slotProps[name], ownerState);\n    useSlotPropsParams = (0,_utils.mergeSlotProps)((0,_extends2.default)({className}, useSlotPropsParams, {externalForwardedProps:\"root\" === name ? other : void 0, externalSlotProps:resolvedComponentsProps}));\n    const {props:{component:slotComponent}, internalRef} = useSlotPropsParams;\n    useSlotPropsParams = (0,_objectWithoutPropertiesLoose2.default)(useSlotPropsParams.props, _excluded3);\n    parameters = (0,_useForkRef.default)(internalRef, null == resolvedComponentsProps ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n    resolvedComponentsProps = getSlotOwnerState ? getSlotOwnerState(useSlotPropsParams) : {};\n    other = (0,_extends2.default)({}, ownerState, resolvedComponentsProps);\n    const LeafComponent = \"root\" === name ? slotComponent || rootComponent : slotComponent, props = (0,_utils.appendOwnerState)(elementType, (0,_extends2.default)({}, \"root\" === name && !rootComponent && !slots[name] && internalForwardedProps, \"root\" !== name && !slots[name] && internalForwardedProps, useSlotPropsParams, LeafComponent && {as:LeafComponent}, {ref:parameters}), other);\n    Object.keys(resolvedComponentsProps).forEach(propName => {\n      delete props[propName];\n    });\n    return [elementType, props];\n  };\n  var _extends2 = global(require(\"module$node_modules$$babel$runtime$helpers$extends\")), _objectWithoutPropertiesLoose2 = global(require(\"module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose\")), _useForkRef = global(require(\"module$node_modules$$mui$utils$node$useForkRef$index\")), _utils = require(\"module$node_modules$$mui$base$node$utils$index\");\n  const _excluded = \"className elementType ownerState externalForwardedProps getSlotOwnerState internalForwardedProps\".split(\" \"), _excluded2 = [\"component\", \"slots\", \"slotProps\"], _excluded3 = [\"component\"];\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$material$node$utils$useSlot\"] = function(global,require,module,exports) {\n\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSlot;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _useForkRef = _interopRequireDefault(require(\"@mui/utils/useForkRef\"));\nvar _utils = require(\"@mui/base/utils\");\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nfunction useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = (0, _objectWithoutPropertiesLoose2.default)(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = (0, _objectWithoutPropertiesLoose2.default)(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = (0, _utils.resolveComponentProps)(slotProps[name], ownerState);\n  const _mergeSlotProps = (0, _utils.mergeSlotProps)((0, _extends2.default)({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = (0, _objectWithoutPropertiesLoose2.default)(_mergeSlotProps.props, _excluded3);\n  const ref = (0, _useForkRef.default)(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = (0, _extends2.default)({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = (0, _utils.appendOwnerState)(elementType, (0, _extends2.default)({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose","~$module$node_modules$$mui$base$node$utils$index","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends","~$module$node_modules$$mui$utils$node$useForkRef$index"]],"~:properties",["^5",["className","__esModule","value","externalForwardedProps","ref","externalSlotProps","default","as"]],"~:compiled-at",1712152510959,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$material$node$utils$useSlot.js\",\n\"lineCount\":27,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@mui/material/node/utils/useSlot.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$material$node$utils$useSlot\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n'use client';\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = useSlot;\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/objectWithoutPropertiesLoose\\\"));\\nvar _useForkRef = _interopRequireDefault(require(\\\"@mui/utils/useForkRef\\\"));\\nvar _utils = require(\\\"@mui/base/utils\\\");\\nconst _excluded = [\\\"className\\\", \\\"elementType\\\", \\\"ownerState\\\", \\\"externalForwardedProps\\\", \\\"getSlotOwnerState\\\", \\\"internalForwardedProps\\\"],\\n  _excluded2 = [\\\"component\\\", \\\"slots\\\", \\\"slotProps\\\"],\\n  _excluded3 = [\\\"component\\\"];\\n/**\\n * An internal function to create a Material UI slot.\\n *\\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\\n * while Base UI does not need to support leaf component customization.\\n *\\n * @param {string} name: name of the slot\\n * @param {object} parameters\\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\\n *\\n * Note: the returned slot's props\\n * - will never contain `component` prop.\\n * - might contain `as` prop.\\n */\\nfunction useSlot(\\n/**\\n * The slot's name. All Material UI components should have `root` slot.\\n *\\n * If the name is `root`, the logic behaves differently from other slots,\\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\\n */\\nname, parameters) {\\n  const {\\n      className,\\n      elementType: initialElementType,\\n      ownerState,\\n      externalForwardedProps,\\n      getSlotOwnerState,\\n      internalForwardedProps\\n    } = parameters,\\n    useSlotPropsParams = (0, _objectWithoutPropertiesLoose2.default)(parameters, _excluded);\\n  const {\\n      component: rootComponent,\\n      slots = {\\n        [name]: undefined\\n      },\\n      slotProps = {\\n        [name]: undefined\\n      }\\n    } = externalForwardedProps,\\n    other = (0, _objectWithoutPropertiesLoose2.default)(externalForwardedProps, _excluded2);\\n  const elementType = slots[name] || initialElementType;\\n\\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\\n  // `resolvedComponentsProps` is always a plain object.\\n  const resolvedComponentsProps = (0, _utils.resolveComponentProps)(slotProps[name], ownerState);\\n  const _mergeSlotProps = (0, _utils.mergeSlotProps)((0, _extends2.default)({\\n      className\\n    }, useSlotPropsParams, {\\n      externalForwardedProps: name === 'root' ? other : undefined,\\n      externalSlotProps: resolvedComponentsProps\\n    })),\\n    {\\n      props: {\\n        component: slotComponent\\n      },\\n      internalRef\\n    } = _mergeSlotProps,\\n    mergedProps = (0, _objectWithoutPropertiesLoose2.default)(_mergeSlotProps.props, _excluded3);\\n  const ref = (0, _useForkRef.default)(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\\n  const finalOwnerState = (0, _extends2.default)({}, ownerState, slotOwnerState);\\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\\n  const props = (0, _utils.appendOwnerState)(elementType, (0, _extends2.default)({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\\n    as: LeafComponent\\n  }, {\\n    ref\\n  }), finalOwnerState);\\n  Object.keys(slotOwnerState).forEach(propName => {\\n    delete props[propName];\\n  });\\n  return [elementType, props];\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"useSlot\",\"name\",\"parameters\",\"className\",\"initialElementType\",\"ownerState\",\"externalForwardedProps\",\"getSlotOwnerState\",\"internalForwardedProps\",\"useSlotPropsParams\",\"_objectWithoutPropertiesLoose2\",\"_excluded\",\"rootComponent\",\"slots\",\"undefined\",\"slotProps\",\"other\",\"_excluded2\",\"elementType\",\"resolvedComponentsProps\",\"_utils\",\"resolveComponentProps\",\"_mergeSlotProps\",\"mergeSlotProps\",\"_extends2\",\"externalSlotProps\",\"slotComponent\",\"internalRef\",\"mergedProps\",\"props\",\"_excluded3\",\"ref\",\"_useForkRef\",\"slotOwnerState\",\"finalOwnerState\",\"LeafComponent\",\"appendOwnerState\",\"as\",\"keys\",\"forEach\",\"propName\"]\n}\n"]