["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/system/spacing.js"],"~:js","shadow$provide.module$node_modules$$mui$system$spacing = function(global, require, module, exports) {\n  function createUnaryUnit(theme, themeKey, defaultValue, propName) {\n    var _getPath;\n    const themeSpacing = null != (_getPath = (0,_style.getPath)(theme, themeKey, !1)) ? _getPath : defaultValue;\n    if (\"number\" === typeof themeSpacing) {\n      return abs => {\n        if (\"string\" === typeof abs) {\n          return abs;\n        }\n        \"number\" !== typeof abs && console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\n        return themeSpacing * abs;\n      };\n    }\n    if (Array.isArray(themeSpacing)) {\n      return abs => {\n        if (\"string\" === typeof abs) {\n          return abs;\n        }\n        Number.isInteger(abs) ? abs > themeSpacing.length - 1 && console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join(\"\\n\")) : console.error([`MUI: The \\`theme.${themeKey}\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\`theme.${themeKey}\\` as a number.`].join(\"\\n\"));\n        return themeSpacing[abs];\n      };\n    }\n    if (\"function\" === typeof themeSpacing) {\n      return themeSpacing;\n    }\n    console.error([`MUI: The \\`theme.${themeKey}\\` value (${themeSpacing}) is invalid.`, \"It should be a number, an array or a function.\"].join(\"\\n\"));\n    return () => {\n    };\n  }\n  function createUnarySpacing(theme) {\n    return createUnaryUnit(theme, \"spacing\", 8, \"spacing\");\n  }\n  function getValue(transformer, propValue) {\n    if (\"string\" === typeof propValue || null == propValue) {\n      return propValue;\n    }\n    transformer = transformer(Math.abs(propValue));\n    return 0 <= propValue ? transformer : \"number\" === typeof transformer ? -transformer : `-${transformer}`;\n  }\n  function getStyleFromPropValue(cssProperties, transformer) {\n    return propValue => cssProperties.reduce((acc, cssProperty) => {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  }\n  function style(props, keys) {\n    const transformer = createUnarySpacing(props.theme);\n    return Object.keys(props).map(prop => {\n      if (-1 === keys.indexOf(prop)) {\n        prop = null;\n      } else {\n        var cssProperties = getCssProperties(prop);\n        cssProperties = getStyleFromPropValue(cssProperties, transformer);\n        prop = (0,_breakpoints.handleBreakpoints)(props, props[prop], cssProperties);\n      }\n      return prop;\n    }).reduce(_merge.default, {});\n  }\n  function margin(props) {\n    return style(props, marginKeys);\n  }\n  function padding(props) {\n    return style(props, paddingKeys);\n  }\n  function spacing(props) {\n    return style(props, spacingKeys);\n  }\n  global = require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.createUnarySpacing = createUnarySpacing;\n  exports.createUnaryUnit = createUnaryUnit;\n  exports.default = void 0;\n  exports.getStyleFromPropValue = getStyleFromPropValue;\n  exports.getValue = getValue;\n  exports.margin = margin;\n  exports.marginKeys = void 0;\n  exports.padding = padding;\n  exports.paddingKeys = void 0;\n  var _responsivePropType = global(require(\"module$node_modules$$mui$system$responsivePropType\")), _breakpoints = require(\"module$node_modules$$mui$system$breakpoints\"), _style = require(\"module$node_modules$$mui$system$style\"), _merge = global(require(\"module$node_modules$$mui$system$merge\"));\n  const properties = {m:\"margin\", p:\"padding\"}, directions = {t:\"Top\", r:\"Right\", b:\"Bottom\", l:\"Left\", x:[\"Left\", \"Right\"], y:[\"Top\", \"Bottom\"]}, aliases = {marginX:\"mx\", marginY:\"my\", paddingX:\"px\", paddingY:\"py\"}, getCssProperties = (0,global(require(\"module$node_modules$$mui$system$memoize\")).default)(prop => {\n    if (2 < prop.length) {\n      if (aliases[prop]) {\n        prop = aliases[prop];\n      } else {\n        return [prop];\n      }\n    }\n    const [a, b] = prop.split(\"\"), property = properties[a];\n    prop = directions[b] || \"\";\n    return Array.isArray(prop) ? prop.map(dir => property + dir) : [property + prop];\n  }), marginKeys = exports.marginKeys = \"m mt mr mb ml mx my margin marginTop marginRight marginBottom marginLeft marginX marginY marginInline marginInlineStart marginInlineEnd marginBlock marginBlockStart marginBlockEnd\".split(\" \"), paddingKeys = exports.paddingKeys = \"p pt pr pb pl px py padding paddingTop paddingRight paddingBottom paddingLeft paddingX paddingY paddingInline paddingInlineStart paddingInlineEnd paddingBlock paddingBlockStart paddingBlockEnd\".split(\" \"), spacingKeys = [...marginKeys, \n  ...paddingKeys];\n  margin.propTypes = marginKeys.reduce((obj, key) => {\n    obj[key] = _responsivePropType.default;\n    return obj;\n  }, {});\n  margin.filterProps = marginKeys;\n  padding.propTypes = paddingKeys.reduce((obj, key) => {\n    obj[key] = _responsivePropType.default;\n    return obj;\n  }, {});\n  padding.filterProps = paddingKeys;\n  spacing.propTypes = spacingKeys.reduce((obj, key) => {\n    obj[key] = _responsivePropType.default;\n    return obj;\n  }, {});\n  spacing.filterProps = spacingKeys;\n  exports.default = spacing;\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$system$spacing\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createUnarySpacing = createUnarySpacing;\nexports.createUnaryUnit = createUnaryUnit;\nexports.default = void 0;\nexports.getStyleFromPropValue = getStyleFromPropValue;\nexports.getValue = getValue;\nexports.margin = margin;\nexports.marginKeys = void 0;\nexports.padding = padding;\nexports.paddingKeys = void 0;\nvar _responsivePropType = _interopRequireDefault(require(\"./responsivePropType\"));\nvar _breakpoints = require(\"./breakpoints\");\nvar _style = require(\"./style\");\nvar _merge = _interopRequireDefault(require(\"./merge\"));\nvar _memoize = _interopRequireDefault(require(\"./memoize\"));\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n};\n\n// memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\nconst getCssProperties = (0, _memoize.default)(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nconst marginKeys = exports.marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\nconst paddingKeys = exports.paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nfunction createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  var _getPath;\n  const themeSpacing = (_getPath = (0, _style.getPath)(theme, themeKey, false)) != null ? _getPath : defaultValue;\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\n        }\n      }\n      return themeSpacing * abs;\n    };\n  }\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error([`MUI: The \\`theme.${themeKey}\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\`theme.${themeKey}\\` as a number.`].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\n'));\n        }\n      }\n      return themeSpacing[abs];\n    };\n  }\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([`MUI: The \\`theme.${themeKey}\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\n'));\n  }\n  return () => undefined;\n}\nfunction createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n  if (propValue >= 0) {\n    return transformed;\n  }\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n  return `-${transformed}`;\n}\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return (0, _breakpoints.handleBreakpoints)(props, propValue, styleFromPropValue);\n}\nfunction style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(_merge.default, {});\n}\nfunction margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\n  obj[key] = _responsivePropType.default;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nfunction padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\n  obj[key] = _responsivePropType.default;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\n  obj[key] = _responsivePropType.default;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nvar _default = exports.default = spacing;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$mui$system$memoize","~$module$node_modules$$mui$system$responsivePropType","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$$mui$system$breakpoints","~$module$node_modules$$mui$system$merge","~$module$node_modules$$mui$system$style"]],"~:properties",["^5",["marginX","marginKeys","margin","marginY","p","paddingY","paddingX","x","__esModule","padding","propTypes","getValue","value","getStyleFromPropValue","t","filterProps","paddingKeys","b","r","y","l","createUnaryUnit","createUnarySpacing","m","default"]],"~:compiled-at",1712152510462,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$system$spacing.js\",\n\"lineCount\":110,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@mui/system/spacing.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$system$spacing\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createUnarySpacing = createUnarySpacing;\\nexports.createUnaryUnit = createUnaryUnit;\\nexports.default = void 0;\\nexports.getStyleFromPropValue = getStyleFromPropValue;\\nexports.getValue = getValue;\\nexports.margin = margin;\\nexports.marginKeys = void 0;\\nexports.padding = padding;\\nexports.paddingKeys = void 0;\\nvar _responsivePropType = _interopRequireDefault(require(\\\"./responsivePropType\\\"));\\nvar _breakpoints = require(\\\"./breakpoints\\\");\\nvar _style = require(\\\"./style\\\");\\nvar _merge = _interopRequireDefault(require(\\\"./merge\\\"));\\nvar _memoize = _interopRequireDefault(require(\\\"./memoize\\\"));\\nconst properties = {\\n  m: 'margin',\\n  p: 'padding'\\n};\\nconst directions = {\\n  t: 'Top',\\n  r: 'Right',\\n  b: 'Bottom',\\n  l: 'Left',\\n  x: ['Left', 'Right'],\\n  y: ['Top', 'Bottom']\\n};\\nconst aliases = {\\n  marginX: 'mx',\\n  marginY: 'my',\\n  paddingX: 'px',\\n  paddingY: 'py'\\n};\\n\\n// memoize() impact:\\n// From 300,000 ops/sec\\n// To 350,000 ops/sec\\nconst getCssProperties = (0, _memoize.default)(prop => {\\n  // It's not a shorthand notation.\\n  if (prop.length > 2) {\\n    if (aliases[prop]) {\\n      prop = aliases[prop];\\n    } else {\\n      return [prop];\\n    }\\n  }\\n  const [a, b] = prop.split('');\\n  const property = properties[a];\\n  const direction = directions[b] || '';\\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\\n});\\nconst marginKeys = exports.marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\\nconst paddingKeys = exports.paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\\nconst spacingKeys = [...marginKeys, ...paddingKeys];\\nfunction createUnaryUnit(theme, themeKey, defaultValue, propName) {\\n  var _getPath;\\n  const themeSpacing = (_getPath = (0, _style.getPath)(theme, themeKey, false)) != null ? _getPath : defaultValue;\\n  if (typeof themeSpacing === 'number') {\\n    return abs => {\\n      if (typeof abs === 'string') {\\n        return abs;\\n      }\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (typeof abs !== 'number') {\\n          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\\n        }\\n      }\\n      return themeSpacing * abs;\\n    };\\n  }\\n  if (Array.isArray(themeSpacing)) {\\n    return abs => {\\n      if (typeof abs === 'string') {\\n        return abs;\\n      }\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (!Number.isInteger(abs)) {\\n          console.error([`MUI: The \\\\`theme.${themeKey}\\\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\\\`theme.${themeKey}\\\\` as a number.`].join('\\\\n'));\\n        } else if (abs > themeSpacing.length - 1) {\\n          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\\\n'));\\n        }\\n      }\\n      return themeSpacing[abs];\\n    };\\n  }\\n  if (typeof themeSpacing === 'function') {\\n    return themeSpacing;\\n  }\\n  if (process.env.NODE_ENV !== 'production') {\\n    console.error([`MUI: The \\\\`theme.${themeKey}\\\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\\\n'));\\n  }\\n  return () => undefined;\\n}\\nfunction createUnarySpacing(theme) {\\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\\n}\\nfunction getValue(transformer, propValue) {\\n  if (typeof propValue === 'string' || propValue == null) {\\n    return propValue;\\n  }\\n  const abs = Math.abs(propValue);\\n  const transformed = transformer(abs);\\n  if (propValue >= 0) {\\n    return transformed;\\n  }\\n  if (typeof transformed === 'number') {\\n    return -transformed;\\n  }\\n  return `-${transformed}`;\\n}\\nfunction getStyleFromPropValue(cssProperties, transformer) {\\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\\n    acc[cssProperty] = getValue(transformer, propValue);\\n    return acc;\\n  }, {});\\n}\\nfunction resolveCssProperty(props, keys, prop, transformer) {\\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\\n  // it's doesn't worth the bundle size.\\n  if (keys.indexOf(prop) === -1) {\\n    return null;\\n  }\\n  const cssProperties = getCssProperties(prop);\\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\\n  const propValue = props[prop];\\n  return (0, _breakpoints.handleBreakpoints)(props, propValue, styleFromPropValue);\\n}\\nfunction style(props, keys) {\\n  const transformer = createUnarySpacing(props.theme);\\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(_merge.default, {});\\n}\\nfunction margin(props) {\\n  return style(props, marginKeys);\\n}\\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\\n  obj[key] = _responsivePropType.default;\\n  return obj;\\n}, {}) : {};\\nmargin.filterProps = marginKeys;\\nfunction padding(props) {\\n  return style(props, paddingKeys);\\n}\\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\\n  obj[key] = _responsivePropType.default;\\n  return obj;\\n}, {}) : {};\\npadding.filterProps = paddingKeys;\\nfunction spacing(props) {\\n  return style(props, spacingKeys);\\n}\\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\\n  obj[key] = _responsivePropType.default;\\n  return obj;\\n}, {}) : {};\\nspacing.filterProps = spacingKeys;\\nvar _default = exports.default = spacing;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"createUnaryUnit\",\"theme\",\"themeKey\",\"defaultValue\",\"propName\",\"_getPath\",\"themeSpacing\",\"_style\",\"getPath\",\"abs\",\"console\",\"error\",\"Array\",\"isArray\",\"Number\",\"isInteger\",\"length\",\"JSON\",\"stringify\",\"join\",\"undefined\",\"createUnarySpacing\",\"getValue\",\"transformer\",\"propValue\",\"transformed\",\"Math\",\"getStyleFromPropValue\",\"cssProperties\",\"reduce\",\"acc\",\"cssProperty\",\"style\",\"props\",\"keys\",\"Object\",\"map\",\"prop\",\"indexOf\",\"getCssProperties\",\"styleFromPropValue\",\"_breakpoints\",\"handleBreakpoints\",\"_merge\",\"default\",\"margin\",\"marginKeys\",\"padding\",\"paddingKeys\",\"spacing\",\"spacingKeys\",\"_interopRequireDefault\",\"defineProperty\",\"value\",\"_responsivePropType\",\"properties\",\"m\",\"p\",\"directions\",\"t\",\"r\",\"b\",\"l\",\"x\",\"y\",\"aliases\",\"marginX\",\"marginY\",\"paddingX\",\"paddingY\",\"_memoize\",\"a\",\"split\",\"property\",\"direction\",\"dir\",\"propTypes\",\"obj\",\"key\",\"filterProps\"]\n}\n"]