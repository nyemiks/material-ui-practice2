["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/base/node/unstable_useNumberInput/numberInputReducer.js"],"~:js","shadow$provide.module$node_modules$$mui$base$node$unstable_useNumberInput$numberInputReducer = function(global, require, module, exports) {\n  function getClampedValues(rawValue, context) {\n    const {min, max, step} = context;\n    rawValue = null === rawValue ? null : (0,_utils.clampStepwise)(rawValue, min, max, step);\n    return {value:rawValue, inputValue:null === rawValue ? \"\" : String(rawValue)};\n  }\n  function handleStep(state, context, applyMultiplier, direction) {\n    applyMultiplier = applyMultiplier ? context.shiftMultiplier : 1;\n    {\n      const {value} = state, {step = 1, min, max} = context;\n      direction = (0,_utils.isNumber)(value) ? {up:value + (null != step ? step : 1) * applyMultiplier, down:value - (null != step ? step : 1) * applyMultiplier}[direction] : {up:null != min ? min : 1, down:null != max ? max : -1}[direction];\n    }\n    context = getClampedValues(direction, context);\n    return (0,_extends2.default)({}, state, context);\n  }\n  function handleToMinOrMax(state, context, to) {\n    context = context[to];\n    return (0,_utils.isNumber)(context) ? (0,_extends2.default)({}, state, {value:context, inputValue:String(context)}) : state;\n  }\n  global = require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.numberInputReducer = function(state, action) {\n    const {type, context} = action;\n    switch(type) {\n      case _numberInputAction.NumberInputActionTypes.clamp:\n        var {getInputValueAsString} = context;\n        action = getInputValueAsString(action.inputValue);\n        action = \"\" === action || \"-\" === action ? null : parseInt(action, 10);\n        action = getClampedValues(action, context);\n        return (0,_extends2.default)({}, state, action);\n      case _numberInputAction.NumberInputActionTypes.inputChange:\n        return {getInputValueAsString} = context, action = getInputValueAsString(action.inputValue), state = action.match(/^-?\\d+?$/) || \"\" === action || \"-\" === action ? (0,_extends2.default)({}, state, {inputValue:action}) : state, state;\n      case _numberInputAction.NumberInputActionTypes.increment:\n        return handleStep(state, context, action.applyMultiplier, \"up\");\n      case _numberInputAction.NumberInputActionTypes.decrement:\n        return handleStep(state, context, action.applyMultiplier, \"down\");\n      case _numberInputAction.NumberInputActionTypes.incrementToMax:\n        return handleToMinOrMax(state, context, \"max\");\n      case _numberInputAction.NumberInputActionTypes.decrementToMin:\n        return handleToMinOrMax(state, context, \"min\");\n      case _numberInputAction.NumberInputActionTypes.resetInputValue:\n        return (0,_extends2.default)({}, state, {inputValue:String(state.value)});\n      default:\n        return state;\n    }\n  };\n  var _extends2 = global(require(\"module$node_modules$$babel$runtime$helpers$extends\")), _numberInputAction = require(\"module$node_modules$$mui$base$node$unstable_useNumberInput$numberInputAction_types\"), _utils = require(\"module$node_modules$$mui$base$node$unstable_useNumberInput$utils\");\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$base$node$unstable_useNumberInput$numberInputReducer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberInputReducer = numberInputReducer;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _numberInputAction = require(\"./numberInputAction.types\");\nvar _utils = require(\"./utils\");\nfunction getClampedValues(rawValue, context) {\n  const {\n    min,\n    max,\n    step\n  } = context;\n  const clampedValue = rawValue === null ? null : (0, _utils.clampStepwise)(rawValue, min, max, step);\n  const newInputValue = clampedValue === null ? '' : String(clampedValue);\n  return {\n    value: clampedValue,\n    inputValue: newInputValue\n  };\n}\nfunction stepValue(state, context, direction, multiplier) {\n  const {\n    value\n  } = state;\n  const {\n    step = 1,\n    min,\n    max\n  } = context;\n  if ((0, _utils.isNumber)(value)) {\n    return {\n      up: value + (step != null ? step : 1) * multiplier,\n      down: value - (step != null ? step : 1) * multiplier\n    }[direction];\n  }\n  return {\n    up: min != null ? min : 1,\n    down: max != null ? max : -1\n  }[direction];\n}\nfunction handleClamp(state, context, inputValue) {\n  const {\n    getInputValueAsString\n  } = context;\n  const numberValueAsString = getInputValueAsString(inputValue);\n  const intermediateValue = numberValueAsString === '' || numberValueAsString === '-' ? null : parseInt(numberValueAsString, 10);\n  const clampedValues = getClampedValues(intermediateValue, context);\n  return (0, _extends2.default)({}, state, clampedValues);\n}\nfunction handleInputChange(state, context, inputValue) {\n  const {\n    getInputValueAsString\n  } = context;\n  const numberValueAsString = getInputValueAsString(inputValue);\n  if (numberValueAsString.match(/^-?\\d+?$/) || numberValueAsString === '' || numberValueAsString === '-') {\n    return (0, _extends2.default)({}, state, {\n      inputValue: numberValueAsString\n    });\n  }\n  return state;\n}\n\n// use this for ArrowUp, ArrowDown, button clicks\n// use this with applyMultiplier: true for PageUp, PageDown, button shift-clicks\nfunction handleStep(state, context, applyMultiplier, direction) {\n  const multiplier = applyMultiplier ? context.shiftMultiplier : 1;\n  const newValue = stepValue(state, context, direction, multiplier);\n  const clampedValues = getClampedValues(newValue, context);\n  return (0, _extends2.default)({}, state, clampedValues);\n}\nfunction handleToMinOrMax(state, context, to) {\n  const newValue = context[to];\n  if (!(0, _utils.isNumber)(newValue)) {\n    return state;\n  }\n  return (0, _extends2.default)({}, state, {\n    value: newValue,\n    inputValue: String(newValue)\n  });\n}\nfunction numberInputReducer(state, action) {\n  const {\n    type,\n    context\n  } = action;\n  switch (type) {\n    case _numberInputAction.NumberInputActionTypes.clamp:\n      return handleClamp(state, context, action.inputValue);\n    case _numberInputAction.NumberInputActionTypes.inputChange:\n      return handleInputChange(state, context, action.inputValue);\n    case _numberInputAction.NumberInputActionTypes.increment:\n      return handleStep(state, context, action.applyMultiplier, 'up');\n    case _numberInputAction.NumberInputActionTypes.decrement:\n      return handleStep(state, context, action.applyMultiplier, 'down');\n    case _numberInputAction.NumberInputActionTypes.incrementToMax:\n      return handleToMinOrMax(state, context, 'max');\n    case _numberInputAction.NumberInputActionTypes.decrementToMin:\n      return handleToMinOrMax(state, context, 'min');\n    case _numberInputAction.NumberInputActionTypes.resetInputValue:\n      return (0, _extends2.default)({}, state, {\n        inputValue: String(state.value)\n      });\n    default:\n      return state;\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$mui$base$node$unstable_useNumberInput$numberInputAction_types","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends","~$module$node_modules$$mui$base$node$unstable_useNumberInput$utils"]],"~:properties",["^5",["up","__esModule","inputValue","value","down","numberInputReducer"]],"~:compiled-at",1712152511266,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$base$node$unstable_useNumberInput$numberInputReducer.js\",\n\"lineCount\":49,\n\"mappings\":\"AAAAA,cAAA,CAAA,6EAAA,GAAkG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAW1IC,UAASA,iBAAgB,CAACC,QAAD,EAAWC,OAAX,CAAoB;AAC3C,UAAM,CACJC,GADI,EAEJC,GAFI,EAGJC,IAHI,CAAA,GAIFH,OAJJ;AAKMI,YAAAA,GAA4B,IAAb,KAAAL,QAAA,GAAoB,IAApB,GAA2B,GAAIM,MAAOC,CAAAA,aAAX,EAA0BP,QAA1B,EAAoCE,GAApC,EAAyCC,GAAzC,EAA8CC,IAA9C,CAA1CC;AAEN,WAAO,CACLG,MAAOH,QADF,EAELI,WAHqC,IAAjBC,KAAAL,QAAAK,GAAwB,EAAxBA,GAA6BC,MAAA,CAAON,QAAP,CAC5C,CAAP;AAR2C;AAyD7CO,UAASA,WAAU,CAACC,KAAD,EAAQZ,OAAR,EAAiBa,eAAjB,EAAkCC,SAAlC,CAA6C;AACxDC,mBAAAA,GAAaF,eAAA,GAAkBb,OAAQgB,CAAAA,eAA1B,GAA4C,CAAzDD;AA7CkD;AACxD,YAAM,CACJR,KADI,CAAA,GA6CqBK,KA7C3B,EAGM,CACJT,IAAA,GAAO,CADH,EAEJF,GAFI,EAGJC,GAHI,CAAA,GA0C4BF,OA7ClC;AASE,eAAA,GADE,GAAIK,MAAOY,CAAAA,QAAX,EAAqBV,KAArB,CAAJ,GACS,CACLW,GAAIX,KAAJW,IAAqB,IAAR,IAAAf,IAAA,GAAeA,IAAf,GAAsB,CAAnCe,IAmCkDH,eApC7C,EAELI,KAAMZ,KAANY,IAAuB,IAAR,IAAAhB,IAAA,GAAeA,IAAf,GAAsB,CAArCgB,IAkCkDJ,eApC7C,CAAA,CAoCkCD,SApClC,CADT,GAMO,CACLI,GAAW,IAAP,IAAAjB,GAAA,GAAcA,GAAd,GAAoB,CADnB,EAELkB,KAAa,IAAP,IAAAjB,GAAA,GAAcA,GAAd,GAAoB,CAAC,CAFtB,CAAA,CA+BoCY,SA/BpC,CALL;AAVsD;AA+ClDM,WAAAA,GAAgBtB,gBAAA,CADLuB,SACK,EAA2BrB,OAA3B,CAAhBoB;AACN,WAAO,GAAIE,SAAUC,CAAAA,OAAd,EAAuB,EAAvB,EAA2BX,KAA3B,EAAkCQ,OAAlC,CAAP;AAJ8D;AAMhEI,UAASA,iBAAgB,CAACZ,KAAD,EAAQZ,OAAR,EAAiByB,EAAjB,CAAqB;AACtCJ,WAAAA,GAAWrB,OAAA,CAAQyB,EAAR,CAAXJ;AACN,WAAK,GAAIhB,MAAOY,CAAAA,QAAX,EAAqBI,OAArB,CAAL,GAGO,GAAIC,SAAUC,CAAAA,OAAd,EAAuB,EAAvB,EAA2BX,KAA3B,EAAkC,CACvCL,MAAOc,OADgC,EAEvCb,WAAYE,MAAA,CAAOW,OAAP,CAF2B,CAAlC,CAHP,GACST,KADT;AAF4C;AAvE1Cc,QAAAA,GAAyB/B,OAAA,CAAQ,kEAAR,CAAzB+B;AACJC,QAAOC,CAAAA,cAAP,CAAsB/B,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CU,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAV,SAAQgC,CAAAA,kBAAR,GA6EAA,QAA2B,CAACjB,KAAD,EAAQkB,MAAR,CAAgB;AACzC,UAAM,CACJC,IADI,EAEJ/B,OAFI,CAAA,GAGF8B,MAHJ;AAIA,WAAQC,IAAR;AACE,WAAKC,kBAAmBC,CAAAA,sBAAuBC,CAAAA,KAA/C;AA7CF,YAAM,CACJC,qBADI,CAAA,GA8CwBnC,OA9C9B;AAGMoC,cAAAA,GAAsBD,qBAAA,CA2CWL,MAAOtB,CAAAA,UA3ClB,CAAtB4B;AACAC,cAAAA,GAA4C,EAAxB,KAAAD,MAAA,IAAsD,GAAtD,KAA8BA,MAA9B,GAA4D,IAA5D,GAAmEE,QAAA,CAASF,MAAT,EAA8B,EAA9B,CAAvFC;AACAjB,cAAAA,GAAgBtB,gBAAA,CAAiBuC,MAAjB,EAyCQrC,OAzCR,CAAhBoB;AAyCF,eAxCG,GAAIE,SAAUC,CAAAA,OAAd,EAAuB,EAAvB,EAwCgBX,KAxChB,EAAkCQ,MAAlC,CAwCH;AACF,WAAKY,kBAAmBC,CAAAA,sBAAuBM,CAAAA,WAA/C;AACE,eAvCE,CACJJ,qBADI,CAuCK,GAAyBnC,OAAzB,EApCLoC,MAoCK,GApCiBD,qBAAA,CAoCiBL,MAAOtB,CAAAA,UApCxB,CAoCjB,EAlCT,KAkCS,GAnCP4B,MAAoBI,CAAAA,KAApB,CAA0B,UAA1B,CAAJ,IAAqE,EAArE,KAA6CJ,MAA7C,IAAmG,GAAnG,KAA2EA,MAA3E,GACS,GAAId,SAAUC,CAAAA,OAAd,EAAuB,EAAvB,EAkCoBX,KAlCpB,EAAkC,CACvCJ,WAAY4B,MAD2B,CAAlC,CADT,GAmC6BxB,KAAlB,EAAA,KAAP;AACF,WAAKoB,kBAAmBC,CAAAA,sBAAuBQ,CAAAA,SAA/C;AACE,eAAO9B,UAAA,CAAWC,KAAX,EAAkBZ,OAAlB,EAA2B8B,MAAOjB,CAAAA,eAAlC,EAAmD,IAAnD,CAAP;AACF,WAAKmB,kBAAmBC,CAAAA,sBAAuBS,CAAAA,SAA/C;AACE,eAAO/B,UAAA,CAAWC,KAAX,EAAkBZ,OAAlB,EAA2B8B,MAAOjB,CAAAA,eAAlC,EAAmD,MAAnD,CAAP;AACF,WAAKmB,kBAAmBC,CAAAA,sBAAuBU,CAAAA,cAA/C;AACE,eAAOnB,gBAAA,CAAiBZ,KAAjB,EAAwBZ,OAAxB,EAAiC,KAAjC,CAAP;AACF,WAAKgC,kBAAmBC,CAAAA,sBAAuBW,CAAAA,cAA/C;AACE,eAAOpB,gBAAA,CAAiBZ,KAAjB,EAAwBZ,OAAxB,EAAiC,KAAjC,CAAP;AACF,WAAKgC,kBAAmBC,CAAAA,sBAAuBY,CAAAA,eAA/C;AACE,eAAO,GAAIvB,SAAUC,CAAAA,OAAd,EAAuB,EAAvB,EAA2BX,KAA3B,EAAkC,CACvCJ,WAAYE,MAAA,CAAOE,KAAML,CAAAA,KAAb,CAD2B,CAAlC,CAAP;AAGF;AACE,eAAOK,KAAP;AAlBJ;AALyC,GA7E3C;AACA,MAAIU,YAAYI,MAAA,CAAuB/B,OAAA,CAAQ,oDAAR,CAAvB,CAAhB,EACIqC,qBAAqBrC,OAAA,CAAQ,oFAAR,CADzB,EAEIU,SAASV,OAAA,CAAQ,kEAAR,CAFb;AAR0I,CAA1I;;\",\n\"sources\":[\"node_modules/@mui/base/node/unstable_useNumberInput/numberInputReducer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$base$node$unstable_useNumberInput$numberInputReducer\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.numberInputReducer = numberInputReducer;\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\nvar _numberInputAction = require(\\\"./numberInputAction.types\\\");\\nvar _utils = require(\\\"./utils\\\");\\nfunction getClampedValues(rawValue, context) {\\n  const {\\n    min,\\n    max,\\n    step\\n  } = context;\\n  const clampedValue = rawValue === null ? null : (0, _utils.clampStepwise)(rawValue, min, max, step);\\n  const newInputValue = clampedValue === null ? '' : String(clampedValue);\\n  return {\\n    value: clampedValue,\\n    inputValue: newInputValue\\n  };\\n}\\nfunction stepValue(state, context, direction, multiplier) {\\n  const {\\n    value\\n  } = state;\\n  const {\\n    step = 1,\\n    min,\\n    max\\n  } = context;\\n  if ((0, _utils.isNumber)(value)) {\\n    return {\\n      up: value + (step != null ? step : 1) * multiplier,\\n      down: value - (step != null ? step : 1) * multiplier\\n    }[direction];\\n  }\\n  return {\\n    up: min != null ? min : 1,\\n    down: max != null ? max : -1\\n  }[direction];\\n}\\nfunction handleClamp(state, context, inputValue) {\\n  const {\\n    getInputValueAsString\\n  } = context;\\n  const numberValueAsString = getInputValueAsString(inputValue);\\n  const intermediateValue = numberValueAsString === '' || numberValueAsString === '-' ? null : parseInt(numberValueAsString, 10);\\n  const clampedValues = getClampedValues(intermediateValue, context);\\n  return (0, _extends2.default)({}, state, clampedValues);\\n}\\nfunction handleInputChange(state, context, inputValue) {\\n  const {\\n    getInputValueAsString\\n  } = context;\\n  const numberValueAsString = getInputValueAsString(inputValue);\\n  if (numberValueAsString.match(/^-?\\\\d+?$/) || numberValueAsString === '' || numberValueAsString === '-') {\\n    return (0, _extends2.default)({}, state, {\\n      inputValue: numberValueAsString\\n    });\\n  }\\n  return state;\\n}\\n\\n// use this for ArrowUp, ArrowDown, button clicks\\n// use this with applyMultiplier: true for PageUp, PageDown, button shift-clicks\\nfunction handleStep(state, context, applyMultiplier, direction) {\\n  const multiplier = applyMultiplier ? context.shiftMultiplier : 1;\\n  const newValue = stepValue(state, context, direction, multiplier);\\n  const clampedValues = getClampedValues(newValue, context);\\n  return (0, _extends2.default)({}, state, clampedValues);\\n}\\nfunction handleToMinOrMax(state, context, to) {\\n  const newValue = context[to];\\n  if (!(0, _utils.isNumber)(newValue)) {\\n    return state;\\n  }\\n  return (0, _extends2.default)({}, state, {\\n    value: newValue,\\n    inputValue: String(newValue)\\n  });\\n}\\nfunction numberInputReducer(state, action) {\\n  const {\\n    type,\\n    context\\n  } = action;\\n  switch (type) {\\n    case _numberInputAction.NumberInputActionTypes.clamp:\\n      return handleClamp(state, context, action.inputValue);\\n    case _numberInputAction.NumberInputActionTypes.inputChange:\\n      return handleInputChange(state, context, action.inputValue);\\n    case _numberInputAction.NumberInputActionTypes.increment:\\n      return handleStep(state, context, action.applyMultiplier, 'up');\\n    case _numberInputAction.NumberInputActionTypes.decrement:\\n      return handleStep(state, context, action.applyMultiplier, 'down');\\n    case _numberInputAction.NumberInputActionTypes.incrementToMax:\\n      return handleToMinOrMax(state, context, 'max');\\n    case _numberInputAction.NumberInputActionTypes.decrementToMin:\\n      return handleToMinOrMax(state, context, 'min');\\n    case _numberInputAction.NumberInputActionTypes.resetInputValue:\\n      return (0, _extends2.default)({}, state, {\\n        inputValue: String(state.value)\\n      });\\n    default:\\n      return state;\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"getClampedValues\",\"rawValue\",\"context\",\"min\",\"max\",\"step\",\"clampedValue\",\"_utils\",\"clampStepwise\",\"value\",\"inputValue\",\"newInputValue\",\"String\",\"handleStep\",\"state\",\"applyMultiplier\",\"direction\",\"multiplier\",\"shiftMultiplier\",\"isNumber\",\"up\",\"down\",\"clampedValues\",\"newValue\",\"_extends2\",\"default\",\"handleToMinOrMax\",\"to\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"numberInputReducer\",\"action\",\"type\",\"_numberInputAction\",\"NumberInputActionTypes\",\"clamp\",\"getInputValueAsString\",\"numberValueAsString\",\"intermediateValue\",\"parseInt\",\"inputChange\",\"match\",\"increment\",\"decrement\",\"incrementToMax\",\"decrementToMin\",\"resetInputValue\"]\n}\n"]