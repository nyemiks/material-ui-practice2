["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/utils/node/deepmerge/deepmerge.js"],"~:js","shadow$provide.module$node_modules$$mui$utils$node$deepmerge$deepmerge = function(global, require, module, exports) {\n  function isPlainObject(item) {\n    if (\"object\" !== typeof item || null === item) {\n      return !1;\n    }\n    const prototype = Object.getPrototypeOf(item);\n    return (null === prototype || prototype === Object.prototype || null === Object.getPrototypeOf(prototype)) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\n  }\n  function deepClone(source) {\n    if (!isPlainObject(source)) {\n      return source;\n    }\n    const output = {};\n    Object.keys(source).forEach(key => {\n      output[key] = deepClone(source[key]);\n    });\n    return output;\n  }\n  function deepmerge(target, source, options = {clone:!0}) {\n    const output = options.clone ? (0,_extends2.default)({}, target) : target;\n    isPlainObject(target) && isPlainObject(source) && Object.keys(source).forEach(key => {\n      \"__proto__\" !== key && (isPlainObject(source[key]) && key in target && isPlainObject(target[key]) ? output[key] = deepmerge(target[key], source[key], options) : output[key] = options.clone ? isPlainObject(source[key]) ? deepClone(source[key]) : source[key] : source[key]);\n    });\n    return output;\n  }\n  global = require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.default = deepmerge;\n  exports.isPlainObject = isPlainObject;\n  var _extends2 = global(require(\"module$node_modules$$babel$runtime$helpers$extends\"));\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$utils$node$deepmerge$deepmerge\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\nfunction isPlainObject(item) {\n  if (typeof item !== 'object' || item === null) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(item);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\n}\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nfunction deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? (0, _extends2.default)({}, target) : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends"]],"~:properties",["^5",["__esModule","value","clone","isPlainObject","default"]],"~:compiled-at",1712152510447,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$utils$node$deepmerge$deepmerge.js\",\n\"lineCount\":32,\n\"mappings\":\"AAAAA,cAAA,CAAA,uDAAA,GAA4E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAWpHC,UAASA,cAAa,CAACC,IAAD,CAAO;AAC3B,QAAoB,QAApB,KAAI,MAAOA,KAAX,IAAyC,IAAzC,KAAgCA,IAAhC;AACE,aAAO,CAAA,CAAP;AADF;AAGA,UAAMC,YAAYC,MAAOC,CAAAA,cAAP,CAAsBH,IAAtB,CAAlB;AACA,YAAsB,IAAtB,KAAQC,SAAR,IAA8BA,SAA9B,KAA4CC,MAAOD,CAAAA,SAAnD,IAAqG,IAArG,KAAgEC,MAAOC,CAAAA,cAAP,CAAsBF,SAAtB,CAAhE,KAA8G,EAAEG,MAAOC,CAAAA,WAAT,IAAwBL,IAAxB,CAA9G,IAA+I,EAAEI,MAAOE,CAAAA,QAAT,IAAqBN,IAArB,CAA/I;AAL2B;AAO7BO,UAASA,UAAS,CAACC,MAAD,CAAS;AACzB,QAAI,CAACT,aAAA,CAAcS,MAAd,CAAL;AACE,aAAOA,MAAP;AADF;AAGA,UAAMC,SAAS,EAAf;AACAP,UAAOQ,CAAAA,IAAP,CAAYF,MAAZ,CAAoBG,CAAAA,OAApB,CAA4BC,GAAA,IAAO;AACjCH,YAAA,CAAOG,GAAP,CAAA,GAAcL,SAAA,CAAUC,MAAA,CAAOI,GAAP,CAAV,CAAd;AADiC,KAAnC,CAAA;AAGA,WAAOH,MAAP;AARyB;AAU3BI,UAASA,UAAS,CAACC,MAAD,EAASN,MAAT,EAAiBO,OAAA,GAAU,CAC3CC,MAAO,CAAA,CADoC,CAA3B,CAEf;AACD,UAAMP,SAASM,OAAQC,CAAAA,KAAR,GAAgB,GAAIC,SAAUC,CAAAA,OAAd,EAAuB,EAAvB,EAA2BJ,MAA3B,CAAhB,GAAqDA,MAApE;AACIf,iBAAA,CAAce,MAAd,CAAJ,IAA6Bf,aAAA,CAAcS,MAAd,CAA7B,IACEN,MAAOQ,CAAAA,IAAP,CAAYF,MAAZ,CAAoBG,CAAAA,OAApB,CAA4BC,GAAA,IAAO;AAErB,iBAAZ,KAAIA,GAAJ,KAGIb,aAAA,CAAcS,MAAA,CAAOI,GAAP,CAAd,CAAJ,IAAkCA,GAAlC,IAAyCE,MAAzC,IAAmDf,aAAA,CAAce,MAAA,CAAOF,GAAP,CAAd,CAAnD,GAEEH,MAAA,CAAOG,GAAP,CAFF,GAEgBC,SAAA,CAAUC,MAAA,CAAOF,GAAP,CAAV,EAAuBJ,MAAA,CAAOI,GAAP,CAAvB,EAAoCG,OAApC,CAFhB,GAIEN,MAAA,CAAOG,GAAP,CAJF,GAGWG,OAAQC,CAAAA,KAAZ,GACSjB,aAAA,CAAcS,MAAA,CAAOI,GAAP,CAAd,CAAA,GAA6BL,SAAA,CAAUC,MAAA,CAAOI,GAAP,CAAV,CAA7B,GAAsDJ,MAAA,CAAOI,GAAP,CAD/D,GAGSJ,MAAA,CAAOI,GAAP,CAThB;AAFiC,KAAnC,CADF;AAgBA,WAAOH,MAAP;AAlBC;AA3BCU,QAAAA,GAAyBvB,OAAA,CAAQ,kEAAR,CAAzBuB;AACJjB,QAAOkB,CAAAA,cAAP,CAAsBtB,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CuB,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAvB,SAAQoB,CAAAA,OAAR,GAAkBL,SAAlB;AACAf,SAAQC,CAAAA,aAAR,GAAwBA,aAAxB;AACA,MAAIkB,YAAYE,MAAA,CAAuBvB,OAAA,CAAQ,oDAAR,CAAvB,CAAhB;AAToH,CAApH;;\",\n\"sources\":[\"node_modules/@mui/utils/node/deepmerge/deepmerge.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$utils$node$deepmerge$deepmerge\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = deepmerge;\\nexports.isPlainObject = isPlainObject;\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\\nfunction isPlainObject(item) {\\n  if (typeof item !== 'object' || item === null) {\\n    return false;\\n  }\\n  const prototype = Object.getPrototypeOf(item);\\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\\n}\\nfunction deepClone(source) {\\n  if (!isPlainObject(source)) {\\n    return source;\\n  }\\n  const output = {};\\n  Object.keys(source).forEach(key => {\\n    output[key] = deepClone(source[key]);\\n  });\\n  return output;\\n}\\nfunction deepmerge(target, source, options = {\\n  clone: true\\n}) {\\n  const output = options.clone ? (0, _extends2.default)({}, target) : target;\\n  if (isPlainObject(target) && isPlainObject(source)) {\\n    Object.keys(source).forEach(key => {\\n      // Avoid prototype pollution\\n      if (key === '__proto__') {\\n        return;\\n      }\\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\\n        output[key] = deepmerge(target[key], source[key], options);\\n      } else if (options.clone) {\\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\\n      } else {\\n        output[key] = source[key];\\n      }\\n    });\\n  }\\n  return output;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isPlainObject\",\"item\",\"prototype\",\"Object\",\"getPrototypeOf\",\"Symbol\",\"toStringTag\",\"iterator\",\"deepClone\",\"source\",\"output\",\"keys\",\"forEach\",\"key\",\"deepmerge\",\"target\",\"options\",\"clone\",\"_extends2\",\"default\",\"_interopRequireDefault\",\"defineProperty\",\"value\"]\n}\n"]