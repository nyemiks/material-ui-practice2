["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/utils/node/elementAcceptingRef/elementAcceptingRef.js"],"~:js","shadow$provide.module$node_modules$$mui$utils$node$elementAcceptingRef$elementAcceptingRef = function(global, require, module, exports) {\n  function acceptingRef(props, propName, componentName, location, propFullName) {\n    props = props[propName];\n    if (null == props || \"undefined\" === typeof window) {\n      return null;\n    }\n    let warningHint;\n    props = props.type;\n    var JSCompiler_temp;\n    if (JSCompiler_temp = \"function\" === typeof props) {\n      ({prototype:props = {}} = props), JSCompiler_temp = !props.isReactComponent;\n    }\n    JSCompiler_temp && (warningHint = \"Did you accidentally use a plain function component for an element instead?\");\n    return void 0 !== warningHint ? Error(`Invalid ${location} \\`${propFullName || propName}\\` supplied to \\`${componentName}\\`. ` + `Expected an element that can hold a ref. ${warningHint} ` + \"For more information see https://mui.com/r/caveat-with-refs-guide\") : null;\n  }\n  module = require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.default = void 0;\n  global = module(require(\"module$node_modules$prop_types$index\"));\n  require = module(require(\"module$node_modules$$mui$utils$node$chainPropTypes$index\"));\n  module = (0,require.default)(global.default.element, acceptingRef);\n  module.isRequired = (0,require.default)(global.default.element.isRequired, acceptingRef);\n  exports.default = module;\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$utils$node$elementAcceptingRef$elementAcceptingRef\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _chainPropTypes = _interopRequireDefault(require(\"../chainPropTypes\"));\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  const {\n    prototype = {}\n  } = elementType;\n  return Boolean(prototype.isReactComponent);\n}\nfunction acceptingRef(props, propName, componentName, location, propFullName) {\n  const element = props[propName];\n  const safePropName = propFullName || propName;\n  if (element == null ||\n  // When server-side rendering React doesn't warn either.\n  // This is not an accurate check for SSR.\n  // This is only in place for Emotion compat.\n  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.\n  typeof window === 'undefined') {\n    return null;\n  }\n  let warningHint;\n  const elementType = element.type;\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n  if (typeof elementType === 'function' && !isClassComponent(elementType)) {\n    warningHint = 'Did you accidentally use a plain function component for an element instead?';\n  }\n  if (warningHint !== undefined) {\n    return new Error(`Invalid ${location} \\`${safePropName}\\` supplied to \\`${componentName}\\`. ` + `Expected an element that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');\n  }\n  return null;\n}\nconst elementAcceptingRef = (0, _chainPropTypes.default)(_propTypes.default.element, acceptingRef);\nelementAcceptingRef.isRequired = (0, _chainPropTypes.default)(_propTypes.default.element.isRequired, acceptingRef);\nvar _default = exports.default = elementAcceptingRef;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$$mui$utils$node$chainPropTypes$index"]],"~:properties",["^5",["__esModule","value","default","isRequired"]],"~:compiled-at",1712152510579,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$utils$node$elementAcceptingRef$elementAcceptingRef.js\",\n\"lineCount\":25,\n\"mappings\":\"AAAAA,cAAA,CAAA,2EAAA,GAAgG,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAiBxIC,UAASA,aAAY,CAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,EAA2CC,YAA3C,CAAyD;AACtEC,SAAAA,GAAUL,KAAA,CAAMC,QAAN,CAAVI;AAEN,QAAe,IAAf,IAAIA,KAAJ,IAKkB,WALlB,KAKA,MAAOC,OALP;AAME,aAAO,IAAP;AANF;AAQA,QAAIC,WAAJ;AACMC,SAAAA,GAAcH,KAAQI,CAAAA,IAAtBD;AAUF,QAAA,eAAA;AAAA,QAAA,eAAA,GAAA,UAAA,KAAA,MAAA,MAAA;AAAqC,OA3BnC,CACJ,UAAAE,KAAA,GAAY,EADR,CA2BmC,GAAAF,KAAA,GAAA,eAAA,GAAA,CAxB1BE,KAAUC,CAAAA,gBAwBgB;AAArC;AAAA,mBAAJ,KACEJ,WADF,GACgB,6EADhB;AAGA,WAAoBK,IAAAA,EAApB,KAAIL,WAAJ,GACaM,KAAJ,CAAW,WAAUV,QAAV,MAxBCC,YAwBD,IAxBiBH,QAwBjB,oBAAwDC,aAAxD,MAAX,GAA0F,4CAA2CK,WAA3C,GAA1F,GAAsJ,mEAAtJ,CADT,GAGO,IAHP;AAzB4E;AAd1EO,QAAAA,GAAyBlB,OAAA,CAAQ,kEAAR,CAAzBkB;AACJC,QAAOC,CAAAA,cAAP,CAAsBlB,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CmB,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAnB,SAAQoB,CAAAA,OAAR,GAAkB,IAAK,EAAvB;AACIC,QAAAA,GAAaL,MAAA,CAAuBlB,OAAA,CAAQ,sCAAR,CAAvB,CAAbuB;AACAC,SAAAA,GAAkBN,MAAA,CAAuBlB,OAAA,CAAQ,0DAAR,CAAvB,CAAlBwB;AAsCEC,QAAAA,GAAsB,GAAID,OAAgBF,CAAAA,OAApB,EAA6BC,MAAWD,CAAAA,OAAQb,CAAAA,OAAhD,EAAyDN,YAAzD,CAAtBsB;AACNA,QAAoBC,CAAAA,UAApB,GAAiC,GAAIF,OAAgBF,CAAAA,OAApB,EAA6BC,MAAWD,CAAAA,OAAQb,CAAAA,OAAQiB,CAAAA,UAAxD,EAAoEvB,YAApE,CAAjC;AACeD,SAAQoB,CAAAA,OAAR,GAAkBG,MAAlB;AAjDyH,CAAxI;;\",\n\"sources\":[\"node_modules/@mui/utils/node/elementAcceptingRef/elementAcceptingRef.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$utils$node$elementAcceptingRef$elementAcceptingRef\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\nvar _chainPropTypes = _interopRequireDefault(require(\\\"../chainPropTypes\\\"));\\nfunction isClassComponent(elementType) {\\n  // elementType.prototype?.isReactComponent\\n  const {\\n    prototype = {}\\n  } = elementType;\\n  return Boolean(prototype.isReactComponent);\\n}\\nfunction acceptingRef(props, propName, componentName, location, propFullName) {\\n  const element = props[propName];\\n  const safePropName = propFullName || propName;\\n  if (element == null ||\\n  // When server-side rendering React doesn't warn either.\\n  // This is not an accurate check for SSR.\\n  // This is only in place for Emotion compat.\\n  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.\\n  typeof window === 'undefined') {\\n    return null;\\n  }\\n  let warningHint;\\n  const elementType = element.type;\\n  /**\\n   * Blacklisting instead of whitelisting\\n   *\\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\\n   * trigger a warning in React.\\n   * We can't whitelist because there is no safe way to detect React.forwardRef\\n   * or class components. \\\"Safe\\\" means there's no public API.\\n   *\\n   */\\n  if (typeof elementType === 'function' && !isClassComponent(elementType)) {\\n    warningHint = 'Did you accidentally use a plain function component for an element instead?';\\n  }\\n  if (warningHint !== undefined) {\\n    return new Error(`Invalid ${location} \\\\`${safePropName}\\\\` supplied to \\\\`${componentName}\\\\`. ` + `Expected an element that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');\\n  }\\n  return null;\\n}\\nconst elementAcceptingRef = (0, _chainPropTypes.default)(_propTypes.default.element, acceptingRef);\\nelementAcceptingRef.isRequired = (0, _chainPropTypes.default)(_propTypes.default.element.isRequired, acceptingRef);\\nvar _default = exports.default = elementAcceptingRef;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"acceptingRef\",\"props\",\"propName\",\"componentName\",\"location\",\"propFullName\",\"element\",\"window\",\"warningHint\",\"elementType\",\"type\",\"prototype\",\"isReactComponent\",\"undefined\",\"Error\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_propTypes\",\"_chainPropTypes\",\"elementAcceptingRef\",\"isRequired\"]\n}\n"]