["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/system/cssVars/useCurrentColorScheme.js"],"~:js","shadow$provide.module$node_modules$$mui$system$cssVars$useCurrentColorScheme = function(global, require, module, exports) {\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) {\n      return null;\n    }\n    var r = new WeakMap(), t = new WeakMap();\n    return (_getRequireWildcardCache = function(e) {\n      return e ? t : r;\n    })(e);\n  }\n  function getSystemMode(mode) {\n    if (\"undefined\" !== typeof window && \"system\" === mode) {\n      return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n    }\n  }\n  function processState(state, callback) {\n    if (\"light\" === state.mode || \"system\" === state.mode && \"light\" === state.systemMode) {\n      return callback(\"light\");\n    }\n    if (\"dark\" === state.mode || \"system\" === state.mode && \"dark\" === state.systemMode) {\n      return callback(\"dark\");\n    }\n  }\n  function getColorScheme(state) {\n    return processState(state, mode => {\n      if (\"light\" === mode) {\n        return state.lightColorScheme;\n      }\n      if (\"dark\" === mode) {\n        return state.darkColorScheme;\n      }\n    });\n  }\n  function initializeValue(key, defaultValue) {\n    if (\"undefined\" !== typeof window) {\n      var value;\n      try {\n        (value = localStorage.getItem(key) || void 0) || localStorage.setItem(key, defaultValue);\n      } catch (e) {\n      }\n      return value || defaultValue;\n    }\n  }\n  \"use client\";\n  global = require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.default = function(options) {\n    const {defaultMode = \"light\", defaultLightColorScheme, defaultDarkColorScheme, supportedColorSchemes = [], modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY, colorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY, storageWindow = \"undefined\" === typeof window ? void 0 : window} = options, joinedColorSchemes = supportedColorSchemes.join(\",\"), [state, setState] = React.useState(() => {\n      const initialMode = initializeValue(modeStorageKey, defaultMode), lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme), darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n      return {mode:initialMode, systemMode:getSystemMode(initialMode), lightColorScheme, darkColorScheme};\n    });\n    options = getColorScheme(state);\n    const setMode = React.useCallback(mode => {\n      setState(currentState => {\n        if (mode === currentState.mode) {\n          return currentState;\n        }\n        const newMode = null != mode ? mode : defaultMode;\n        try {\n          localStorage.setItem(modeStorageKey, newMode);\n        } catch (e) {\n        }\n        return (0,_extends2.default)({}, currentState, {mode:newMode, systemMode:getSystemMode(newMode)});\n      });\n    }, [modeStorageKey, defaultMode]), setColorScheme = React.useCallback(value => {\n      value ? \"string\" === typeof value ? value && !joinedColorSchemes.includes(value) ? console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`) : setState(currentState => {\n        const newState = (0,_extends2.default)({}, currentState);\n        processState(currentState, mode => {\n          try {\n            localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n          } catch (e) {\n          }\n          \"light\" === mode && (newState.lightColorScheme = value);\n          \"dark\" === mode && (newState.darkColorScheme = value);\n        });\n        return newState;\n      }) : setState(currentState => {\n        currentState = (0,_extends2.default)({}, currentState);\n        const newLightColorScheme = null === value.light ? defaultLightColorScheme : value.light, newDarkColorScheme = null === value.dark ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (joinedColorSchemes.includes(newLightColorScheme)) {\n            currentState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n            }\n          } else {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          }\n        }\n        if (newDarkColorScheme) {\n          if (joinedColorSchemes.includes(newDarkColorScheme)) {\n            currentState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n            }\n          } else {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          }\n        }\n        return currentState;\n      }) : setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme), localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n        }\n        return (0,_extends2.default)({}, currentState, {lightColorScheme:defaultLightColorScheme, darkColorScheme:defaultDarkColorScheme});\n      });\n    }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]), handleMediaQuery = React.useCallback(event => {\n      \"system\" === state.mode && setState(currentState => {\n        const systemMode = null != event && event.matches ? \"dark\" : \"light\";\n        return currentState.systemMode === systemMode ? currentState : (0,_extends2.default)({}, currentState, {systemMode});\n      });\n    }, [state.mode]), mediaListener = React.useRef(handleMediaQuery);\n    mediaListener.current = handleMediaQuery;\n    React.useEffect(() => {\n      const handler = (...args) => mediaListener.current(...args), media = window.matchMedia(\"(prefers-color-scheme: dark)\");\n      media.addListener(handler);\n      mediaListener.current(media);\n      return () => {\n        media.removeListener(handler);\n      };\n    }, []);\n    React.useEffect(() => {\n      if (storageWindow) {\n        const handleStorage = event => {\n          const value = event.newValue;\n          \"string\" !== typeof event.key || !event.key.startsWith(colorSchemeStorageKey) || value && !joinedColorSchemes.match(value) || (event.key.endsWith(\"light\") && setColorScheme({light:value}), event.key.endsWith(\"dark\") && setColorScheme({dark:value}));\n          event.key !== modeStorageKey || value && ![\"light\", \"dark\", \"system\"].includes(value) || setMode(value || defaultMode);\n        };\n        storageWindow.addEventListener(\"storage\", handleStorage);\n        return () => {\n          storageWindow.removeEventListener(\"storage\", handleStorage);\n        };\n      }\n    }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n    return (0,_extends2.default)({}, state, {colorScheme:options, setMode, setColorScheme});\n  };\n  exports.getColorScheme = getColorScheme;\n  exports.getSystemMode = getSystemMode;\n  var _extends2 = global(require(\"module$node_modules$$babel$runtime$helpers$extends\")), React = function(e, r) {\n    if (!r && e && e.__esModule) {\n      return e;\n    }\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) {\n      return {default:e};\n    }\n    if ((r = _getRequireWildcardCache(r)) && r.has(e)) {\n      return r.get(e);\n    }\n    var n = {__proto__:null}, a = Object.defineProperty && Object.getOwnPropertyDescriptor, u;\n    for (u in e) {\n      if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) {\n        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n      }\n    }\n    return n.default = e, r && r.set(e, n), n;\n  }(require(\"module$node_modules$react$index\")), _getInitColorSchemeScript = require(\"module$node_modules$$mui$system$cssVars$getInitColorSchemeScript\");\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$system$cssVars$useCurrentColorScheme\"] = function(global,require,module,exports) {\n\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCurrentColorScheme;\nexports.getColorScheme = getColorScheme;\nexports.getSystemMode = getSystemMode;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _getInitColorSchemeScript = require(\"./getInitColorSchemeScript\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nfunction getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nfunction useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode != null ? mode : defaultMode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return (0, _extends2.default)({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return (0, _extends2.default)({}, currentState, {\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        });\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = (0, _extends2.default)({}, currentState);\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = (0, _extends2.default)({}, currentState);\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event != null && event.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return (0, _extends2.default)({}, currentState, {\n          systemMode\n        });\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, []);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (storageWindow) {\n      const handleStorage = event => {\n        const value = event.newValue;\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n          // If the key is deleted, value will be null then reset color scheme to the default one.\n          if (event.key.endsWith('light')) {\n            setColorScheme({\n              light: value\n            });\n          }\n          if (event.key.endsWith('dark')) {\n            setColorScheme({\n              dark: value\n            });\n          }\n        }\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n          setMode(value || defaultMode);\n        }\n      };\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => {\n        storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return (0, _extends2.default)({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$$mui$system$cssVars$getInitColorSchemeScript","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends"]],"~:properties",["^5",["light","getSystemMode","setMode","__esModule","systemMode","mode","value","lightColorScheme","current","colorScheme","setColorScheme","getColorScheme","darkColorScheme","dark","__proto__","default"]],"~:compiled-at",1712152510730,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$system$cssVars$useCurrentColorScheme.js\",\n\"lineCount\":162,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@mui/system/cssVars/useCurrentColorScheme.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$system$cssVars$useCurrentColorScheme\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n'use client';\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = useCurrentColorScheme;\\nexports.getColorScheme = getColorScheme;\\nexports.getSystemMode = getSystemMode;\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\nvar React = _interopRequireWildcard(require(\\\"react\\\"));\\nvar _getInitColorSchemeScript = require(\\\"./getInitColorSchemeScript\\\");\\nfunction _getRequireWildcardCache(e) { if (\\\"function\\\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \\\"object\\\" != typeof e && \\\"function\\\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\\\"default\\\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\\nfunction getSystemMode(mode) {\\n  if (typeof window !== 'undefined' && mode === 'system') {\\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\\n    if (mql.matches) {\\n      return 'dark';\\n    }\\n    return 'light';\\n  }\\n  return undefined;\\n}\\nfunction processState(state, callback) {\\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\\n    return callback('light');\\n  }\\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\\n    return callback('dark');\\n  }\\n  return undefined;\\n}\\nfunction getColorScheme(state) {\\n  return processState(state, mode => {\\n    if (mode === 'light') {\\n      return state.lightColorScheme;\\n    }\\n    if (mode === 'dark') {\\n      return state.darkColorScheme;\\n    }\\n    return undefined;\\n  });\\n}\\nfunction initializeValue(key, defaultValue) {\\n  if (typeof window === 'undefined') {\\n    return undefined;\\n  }\\n  let value;\\n  try {\\n    value = localStorage.getItem(key) || undefined;\\n    if (!value) {\\n      // the first time that user enters the site.\\n      localStorage.setItem(key, defaultValue);\\n    }\\n  } catch (e) {\\n    // Unsupported\\n  }\\n  return value || defaultValue;\\n}\\nfunction useCurrentColorScheme(options) {\\n  const {\\n    defaultMode = 'light',\\n    defaultLightColorScheme,\\n    defaultDarkColorScheme,\\n    supportedColorSchemes = [],\\n    modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\\n    colorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\\n    storageWindow = typeof window === 'undefined' ? undefined : window\\n  } = options;\\n  const joinedColorSchemes = supportedColorSchemes.join(',');\\n  const [state, setState] = React.useState(() => {\\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\\n    return {\\n      mode: initialMode,\\n      systemMode: getSystemMode(initialMode),\\n      lightColorScheme,\\n      darkColorScheme\\n    };\\n  });\\n  const colorScheme = getColorScheme(state);\\n  const setMode = React.useCallback(mode => {\\n    setState(currentState => {\\n      if (mode === currentState.mode) {\\n        // do nothing if mode does not change\\n        return currentState;\\n      }\\n      const newMode = mode != null ? mode : defaultMode;\\n      try {\\n        localStorage.setItem(modeStorageKey, newMode);\\n      } catch (e) {\\n        // Unsupported\\n      }\\n      return (0, _extends2.default)({}, currentState, {\\n        mode: newMode,\\n        systemMode: getSystemMode(newMode)\\n      });\\n    });\\n  }, [modeStorageKey, defaultMode]);\\n  const setColorScheme = React.useCallback(value => {\\n    if (!value) {\\n      setState(currentState => {\\n        try {\\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\\n        } catch (e) {\\n          // Unsupported\\n        }\\n        return (0, _extends2.default)({}, currentState, {\\n          lightColorScheme: defaultLightColorScheme,\\n          darkColorScheme: defaultDarkColorScheme\\n        });\\n      });\\n    } else if (typeof value === 'string') {\\n      if (value && !joinedColorSchemes.includes(value)) {\\n        console.error(`\\\\`${value}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n      } else {\\n        setState(currentState => {\\n          const newState = (0, _extends2.default)({}, currentState);\\n          processState(currentState, mode => {\\n            try {\\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\\n            } catch (e) {\\n              // Unsupported\\n            }\\n            if (mode === 'light') {\\n              newState.lightColorScheme = value;\\n            }\\n            if (mode === 'dark') {\\n              newState.darkColorScheme = value;\\n            }\\n          });\\n          return newState;\\n        });\\n      }\\n    } else {\\n      setState(currentState => {\\n        const newState = (0, _extends2.default)({}, currentState);\\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\\n        if (newLightColorScheme) {\\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\\n            console.error(`\\\\`${newLightColorScheme}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n          } else {\\n            newState.lightColorScheme = newLightColorScheme;\\n            try {\\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\\n            } catch (error) {\\n              // Unsupported\\n            }\\n          }\\n        }\\n        if (newDarkColorScheme) {\\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\\n            console.error(`\\\\`${newDarkColorScheme}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n          } else {\\n            newState.darkColorScheme = newDarkColorScheme;\\n            try {\\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\\n            } catch (error) {\\n              // Unsupported\\n            }\\n          }\\n        }\\n        return newState;\\n      });\\n    }\\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\\n  const handleMediaQuery = React.useCallback(event => {\\n    if (state.mode === 'system') {\\n      setState(currentState => {\\n        const systemMode = event != null && event.matches ? 'dark' : 'light';\\n\\n        // Early exit, nothing changed.\\n        if (currentState.systemMode === systemMode) {\\n          return currentState;\\n        }\\n        return (0, _extends2.default)({}, currentState, {\\n          systemMode\\n        });\\n      });\\n    }\\n  }, [state.mode]);\\n\\n  // Ref hack to avoid adding handleMediaQuery as a dep\\n  const mediaListener = React.useRef(handleMediaQuery);\\n  mediaListener.current = handleMediaQuery;\\n  React.useEffect(() => {\\n    const handler = (...args) => mediaListener.current(...args);\\n\\n    // Always listen to System preference\\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\\n\\n    // Intentionally use deprecated listener methods to support iOS & old browsers\\n    media.addListener(handler);\\n    handler(media);\\n    return () => {\\n      media.removeListener(handler);\\n    };\\n  }, []);\\n\\n  // Handle when localStorage has changed\\n  React.useEffect(() => {\\n    if (storageWindow) {\\n      const handleStorage = event => {\\n        const value = event.newValue;\\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\\n          // If the key is deleted, value will be null then reset color scheme to the default one.\\n          if (event.key.endsWith('light')) {\\n            setColorScheme({\\n              light: value\\n            });\\n          }\\n          if (event.key.endsWith('dark')) {\\n            setColorScheme({\\n              dark: value\\n            });\\n          }\\n        }\\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\\n          setMode(value || defaultMode);\\n        }\\n      };\\n      // For syncing color-scheme changes between iframes\\n      storageWindow.addEventListener('storage', handleStorage);\\n      return () => {\\n        storageWindow.removeEventListener('storage', handleStorage);\\n      };\\n    }\\n    return undefined;\\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\\n  return (0, _extends2.default)({}, state, {\\n    colorScheme,\\n    setMode,\\n    setColorScheme\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_getRequireWildcardCache\",\"e\",\"WeakMap\",\"r\",\"t\",\"getSystemMode\",\"mode\",\"window\",\"matchMedia\",\"mql\",\"matches\",\"processState\",\"state\",\"callback\",\"systemMode\",\"getColorScheme\",\"lightColorScheme\",\"darkColorScheme\",\"initializeValue\",\"key\",\"defaultValue\",\"value\",\"localStorage\",\"getItem\",\"undefined\",\"setItem\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"default\",\"useCurrentColorScheme\",\"options\",\"defaultMode\",\"defaultLightColorScheme\",\"defaultDarkColorScheme\",\"supportedColorSchemes\",\"modeStorageKey\",\"_getInitColorSchemeScript\",\"DEFAULT_MODE_STORAGE_KEY\",\"colorSchemeStorageKey\",\"DEFAULT_COLOR_SCHEME_STORAGE_KEY\",\"storageWindow\",\"joinedColorSchemes\",\"join\",\"setState\",\"React\",\"useState\",\"initialMode\",\"colorScheme\",\"setMode\",\"useCallback\",\"currentState\",\"newMode\",\"_extends2\",\"setColorScheme\",\"includes\",\"console\",\"error\",\"newState\",\"newLightColorScheme\",\"light\",\"newDarkColorScheme\",\"dark\",\"handleMediaQuery\",\"event\",\"mediaListener\",\"useRef\",\"current\",\"useEffect\",\"handler\",\"args\",\"media\",\"addListener\",\"removeListener\",\"handleStorage\",\"newValue\",\"startsWith\",\"match\",\"endsWith\",\"addEventListener\",\"removeEventListener\",\"_interopRequireWildcard\",\"__esModule\",\"has\",\"get\",\"n\",\"__proto__\",\"a\",\"getOwnPropertyDescriptor\",\"u\",\"prototype\",\"hasOwnProperty\",\"call\",\"i\",\"set\"]\n}\n"]