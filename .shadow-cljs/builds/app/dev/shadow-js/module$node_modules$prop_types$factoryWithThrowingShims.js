["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/prop-types/factoryWithThrowingShims.js"],"~:js","shadow$provide.module$node_modules$prop_types$factoryWithThrowingShims = function(global, require, module, exports) {\n  function emptyFunction() {\n  }\n  function emptyFunctionWithReset() {\n  }\n  var ReactPropTypesSecret = require(\"module$node_modules$prop_types$lib$ReactPropTypesSecret\");\n  emptyFunctionWithReset.resetWarningCache = emptyFunction;\n  module.exports = function() {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret !== ReactPropTypesSecret) {\n        throw props = Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\"), props.name = \"Invariant Violation\", props;\n      }\n    }\n    function getShim() {\n      return shim;\n    }\n    shim.isRequired = shim;\n    var ReactPropTypes = {array:shim, bigint:shim, bool:shim, func:shim, number:shim, object:shim, string:shim, symbol:shim, any:shim, arrayOf:getShim, element:shim, elementType:shim, instanceOf:getShim, node:shim, objectOf:getShim, oneOf:getShim, oneOfType:getShim, shape:getShim, exact:getShim, checkPropTypes:emptyFunctionWithReset, resetWarningCache:emptyFunction};\n    return ReactPropTypes.PropTypes = ReactPropTypes;\n  };\n};\n","~:source","shadow$provide[\"module$node_modules$prop_types$factoryWithThrowingShims\"] = function(global,require,module,exports) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]],"~:properties",["^5",["func","arrayOf","instanceOf","object","string","exact","shape","elementType","oneOfType","any","element","name","bool","checkPropTypes","number","symbol","objectOf","oneOf","bigint","array","PropTypes","node","resetWarningCache","isRequired"]],"~:compiled-at",1712152510415,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$prop_types$factoryWithThrowingShims.js\",\n\"lineCount\":22,\n\"mappings\":\"AAAAA,cAAA,CAAA,uDAAA,GAA4E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAYpHC,UAASA,cAAa,EAAG;;AACzBC,UAASA,uBAAsB,EAAG;;AAHlC,MAAIC,uBAAuBL,OAAA,CAAQ,yDAAR,CAA3B;AAIAI,wBAAuBE,CAAAA,iBAAvB,GAA2CH,aAA3C;AAEAF,QAAOC,CAAAA,OAAP,GAAiBK,QAAQ,EAAG;AAC1BC,YAASA,KAAI,CAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDC,MAAzD,CAAiE;AAC5E,UAAIA,MAAJ,KAAeT,oBAAf;AAUA,cANIU,KAMEA,GANQC,KAAJ,CACR,iLADQ,CAMJD,EADNA,KAAIE,CAAAA,IACEF,GADK,qBACLA,EAAAA,KAAN;AAVA;AAD4E;AAc9EG,YAASA,QAAO,EAAG;AACjB,aAAOV,IAAP;AADiB;AADnBA,QAAKW,CAAAA,UAAL,GAAkBX,IAAlB;AAMA,QAAIY,iBAAiB,CACnBC,MAAOb,IADY,EAEnBc,OAAQd,IAFW,EAGnBe,KAAMf,IAHa,EAInBgB,KAAMhB,IAJa,EAKnBiB,OAAQjB,IALW,EAMnBkB,OAAQlB,IANW,EAOnBmB,OAAQnB,IAPW,EAQnBoB,OAAQpB,IARW,EAUnBqB,IAAKrB,IAVc,EAWnBsB,QAASZ,OAXU,EAYnBa,QAASvB,IAZU,EAanBwB,YAAaxB,IAbM,EAcnByB,WAAYf,OAdO,EAenBgB,KAAM1B,IAfa,EAgBnB2B,SAAUjB,OAhBS,EAiBnBkB,MAAOlB,OAjBY,EAkBnBmB,UAAWnB,OAlBQ,EAmBnBoB,MAAOpB,OAnBY,EAoBnBqB,MAAOrB,OApBY,EAsBnBsB,eAAgBpC,sBAtBG,EAuBnBE,kBAAmBH,aAvBA,CAArB;AA4BA,WAFAiB,cAAeqB,CAAAA,SAEf,GAF2BrB,cAE3B;AAhD0B,GAA5B;AAhBoH,CAApH;;\",\n\"sources\":[\"node_modules/prop-types/factoryWithThrowingShims.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$prop_types$factoryWithThrowingShims\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n'use strict';\\n\\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\\n\\nfunction emptyFunction() {}\\nfunction emptyFunctionWithReset() {}\\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\\n\\nmodule.exports = function() {\\n  function shim(props, propName, componentName, location, propFullName, secret) {\\n    if (secret === ReactPropTypesSecret) {\\n      // It is still safe when called from React.\\n      return;\\n    }\\n    var err = new Error(\\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\\n      'Use PropTypes.checkPropTypes() to call them. ' +\\n      'Read more at http://fb.me/use-check-prop-types'\\n    );\\n    err.name = 'Invariant Violation';\\n    throw err;\\n  };\\n  shim.isRequired = shim;\\n  function getShim() {\\n    return shim;\\n  };\\n  // Important!\\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\\n  var ReactPropTypes = {\\n    array: shim,\\n    bigint: shim,\\n    bool: shim,\\n    func: shim,\\n    number: shim,\\n    object: shim,\\n    string: shim,\\n    symbol: shim,\\n\\n    any: shim,\\n    arrayOf: getShim,\\n    element: shim,\\n    elementType: shim,\\n    instanceOf: getShim,\\n    node: shim,\\n    objectOf: getShim,\\n    oneOf: getShim,\\n    oneOfType: getShim,\\n    shape: getShim,\\n    exact: getShim,\\n\\n    checkPropTypes: emptyFunctionWithReset,\\n    resetWarningCache: emptyFunction\\n  };\\n\\n  ReactPropTypes.PropTypes = ReactPropTypes;\\n\\n  return ReactPropTypes;\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"emptyFunction\",\"emptyFunctionWithReset\",\"ReactPropTypesSecret\",\"resetWarningCache\",\"module.exports\",\"shim\",\"props\",\"propName\",\"componentName\",\"location\",\"propFullName\",\"secret\",\"err\",\"Error\",\"name\",\"getShim\",\"isRequired\",\"ReactPropTypes\",\"array\",\"bigint\",\"bool\",\"func\",\"number\",\"object\",\"string\",\"symbol\",\"any\",\"arrayOf\",\"element\",\"elementType\",\"instanceOf\",\"node\",\"objectOf\",\"oneOf\",\"oneOfType\",\"shape\",\"exact\",\"checkPropTypes\",\"PropTypes\"]\n}\n"]