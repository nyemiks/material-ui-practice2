["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/base/node/utils/combineHooksSlotProps.js"],"~:js","shadow$provide.module$node_modules$$mui$base$node$utils$combineHooksSlotProps = function(global, require, module, exports) {\n  global = require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.combineHooksSlotProps = function(getFirstProps, getSecondProps) {\n    return function(external = {}) {\n      external = (0,_extends2.default)({}, external, getFirstProps(external));\n      return (0,_extends2.default)({}, external, getSecondProps(external));\n    };\n  };\n  var _extends2 = global(require(\"module$node_modules$$babel$runtime$helpers$extends\"));\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$base$node$utils$combineHooksSlotProps\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.combineHooksSlotProps = combineHooksSlotProps;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n/**\n * Combines the two get*Props functions from Base UI hooks into one.\n * Useful when a hook uses two other hooks behind the scenes\n * (such as useSelect that depends on useList and useButton for its root slot).\n *\n * The resulting function will return the combined props.\n * They are merged from left to right, similarly to how Object.assign works.\n *\n * The getSecondProps function will receive the result of the getFirstProps function as its argument,\n * so its event handlers can call the previous handlers and act depending on its result.\n *\n * @param getFirstProps - A getter function that returns the props for the first slot. It receives the external event handlers as its argument.\n * @param getSecondProps - A getter function that returns the props for the second slot. It receives the result of the getFirstProps function as its argument.\n */\nfunction combineHooksSlotProps(getFirstProps, getSecondProps) {\n  return function getCombinedProps(external = {}) {\n    const firstResult = (0, _extends2.default)({}, external, getFirstProps(external));\n    const result = (0, _extends2.default)({}, firstResult, getSecondProps(firstResult));\n    return result;\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends"]],"~:properties",["^5",["__esModule","combineHooksSlotProps","value"]],"~:compiled-at",1712152511084,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$base$node$utils$combineHooksSlotProps.js\",\n\"lineCount\":12,\n\"mappings\":\"AAAAA,cAAA,CAAA,8DAAA,GAAmF,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAGvHC,QAAAA,GAAyBH,OAAA,CAAQ,kEAAR,CAAzBG;AACJC,QAAOC,CAAAA,cAAP,CAAsBH,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAJ,SAAQK,CAAAA,qBAAR,GAgBAA,QAA8B,CAACC,aAAD,EAAgBC,cAAhB,CAAgC;AAC5D,WAAOC,QAAyB,CAACC,QAAA,GAAW,EAAZ,CAAgB;AACxCC,cAAAA,GAAc,GAAIC,SAAUC,CAAAA,OAAd,EAAuB,EAAvB,EAA2BH,QAA3B,EAAqCH,aAAA,CAAcG,QAAd,CAArC,CAAdC;AAEN,aADeG,GAAIF,SAAUC,CAAAA,OAAdC,EAAuB,EAAvBA,EAA2BH,QAA3BG,EAAwCN,cAAA,CAAeG,QAAf,CAAxCG,CACf;AAH8C,KAAhD;AAD4D,GAhB9D;AACA,MAAIF,YAAYV,MAAA,CAAuBH,OAAA,CAAQ,oDAAR,CAAvB,CAAhB;AAR2H,CAA3H;;\",\n\"sources\":[\"node_modules/@mui/base/node/utils/combineHooksSlotProps.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$base$node$utils$combineHooksSlotProps\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.combineHooksSlotProps = combineHooksSlotProps;\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n/**\\n * Combines the two get*Props functions from Base UI hooks into one.\\n * Useful when a hook uses two other hooks behind the scenes\\n * (such as useSelect that depends on useList and useButton for its root slot).\\n *\\n * The resulting function will return the combined props.\\n * They are merged from left to right, similarly to how Object.assign works.\\n *\\n * The getSecondProps function will receive the result of the getFirstProps function as its argument,\\n * so its event handlers can call the previous handlers and act depending on its result.\\n *\\n * @param getFirstProps - A getter function that returns the props for the first slot. It receives the external event handlers as its argument.\\n * @param getSecondProps - A getter function that returns the props for the second slot. It receives the result of the getFirstProps function as its argument.\\n */\\nfunction combineHooksSlotProps(getFirstProps, getSecondProps) {\\n  return function getCombinedProps(external = {}) {\\n    const firstResult = (0, _extends2.default)({}, external, getFirstProps(external));\\n    const result = (0, _extends2.default)({}, firstResult, getSecondProps(firstResult));\\n    return result;\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"combineHooksSlotProps\",\"getFirstProps\",\"getSecondProps\",\"getCombinedProps\",\"external\",\"firstResult\",\"_extends2\",\"default\",\"result\"]\n}\n"]