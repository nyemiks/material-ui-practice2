["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-transition-group/cjs/SwitchTransition.js"],"~:js","shadow$provide.module$node_modules$react_transition_group$cjs$SwitchTransition = function(global, require, module, exports) {\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {default:obj};\n  }\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n  exports.__esModule = !0;\n  exports.default = exports.modes = void 0;\n  var _react = _interopRequireDefault(require(\"module$node_modules$react$index\"));\n  global = _interopRequireDefault(require(\"module$node_modules$prop_types$index\"));\n  var _Transition = require(\"module$node_modules$react_transition_group$cjs$Transition\"), _TransitionGroupContext = _interopRequireDefault(require(\"module$node_modules$react_transition_group$cjs$TransitionGroupContext\")), _leaveRenders, _enterRenders, modes = {out:\"out-in\", in:\"in-out\"};\n  exports.modes = modes;\n  var callHook = function(element, name, cb) {\n    return function() {\n      var _element$props;\n      element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n      cb();\n    };\n  }, leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref) {\n    var current = _ref.current, changeState = _ref.changeState;\n    return _react.default.cloneElement(current, {in:!1, onExited:callHook(current, \"onExited\", function() {\n      changeState(_Transition.ENTERING, null);\n    })});\n  }, _leaveRenders[modes.in] = function(_ref2) {\n    var changeState = _ref2.changeState, children = _ref2.children;\n    return [_ref2.current, _react.default.cloneElement(children, {in:!0, onEntered:callHook(children, \"onEntered\", function() {\n      changeState(_Transition.ENTERING);\n    })})];\n  }, _leaveRenders), enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {\n    var children = _ref3.children, changeState = _ref3.changeState;\n    return _react.default.cloneElement(children, {in:!0, onEntered:callHook(children, \"onEntered\", function() {\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {in:!0}));\n    })});\n  }, _enterRenders[modes.in] = function(_ref4) {\n    var current = _ref4.current, children = _ref4.children, changeState = _ref4.changeState;\n    return [_react.default.cloneElement(current, {in:!1, onExited:callHook(current, \"onExited\", function() {\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {in:!0}));\n    })}), _react.default.cloneElement(children, {in:!0})];\n  }, _enterRenders);\n  require = function(_React$Component) {\n    function SwitchTransition() {\n      for (var _this, _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n      _this.state = {status:_Transition.ENTERED, current:null};\n      _this.appeared = !1;\n      _this.changeState = function(status, current) {\n        void 0 === current && (current = _this.state.current);\n        _this.setState({status, current});\n      };\n      return _this;\n    }\n    _inheritsLoose(SwitchTransition, _React$Component);\n    var _proto = SwitchTransition.prototype;\n    _proto.componentDidMount = function() {\n      this.appeared = !0;\n    };\n    SwitchTransition.getDerivedStateFromProps = function(props, state) {\n      if (null == props.children) {\n        return {current:null};\n      }\n      if (state.status === _Transition.ENTERING && props.mode === modes.in) {\n        return {status:_Transition.ENTERING};\n      }\n      var JSCompiler_temp;\n      if (JSCompiler_temp = state.current) {\n        state = state.current, JSCompiler_temp = props.children, JSCompiler_temp = state === JSCompiler_temp ? !1 : _react.default.isValidElement(state) && _react.default.isValidElement(JSCompiler_temp) && null != state.key && state.key === JSCompiler_temp.key ? !1 : !0;\n      }\n      return JSCompiler_temp ? {status:_Transition.EXITING} : {current:_react.default.cloneElement(props.children, {in:!0})};\n    };\n    _proto.render = function() {\n      var _this$props = this.props, mode = _this$props.mode, _this$state = this.state, status = _this$state.status;\n      _this$state = _this$state.current;\n      _this$props = {children:_this$props.children, current:_this$state, changeState:this.changeState, status};\n      switch(status) {\n        case _Transition.ENTERING:\n          var component = enterRenders[mode](_this$props);\n          break;\n        case _Transition.EXITING:\n          component = leaveRenders[mode](_this$props);\n          break;\n        case _Transition.ENTERED:\n          component = _this$state;\n      }\n      return _react.default.createElement(_TransitionGroupContext.default.Provider, {value:{isMounting:!this.appeared}}, component);\n    };\n    return SwitchTransition;\n  }(_react.default.Component);\n  require.propTypes = {mode:global.default.oneOf([modes.in, modes.out]), children:global.default.oneOfType([global.default.element.isRequired])};\n  require.defaultProps = {mode:modes.out};\n  exports.default = require;\n};\n","~:source","shadow$provide[\"module$node_modules$react_transition_group$cjs$SwitchTransition\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.modes = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Transition = require(\"./Transition\");\n\nvar _TransitionGroupContext = _interopRequireDefault(require(\"./TransitionGroupContext\"));\n\nvar _leaveRenders, _enterRenders;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (_react.default.isValidElement(oldChildren) && _react.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nvar modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\nexports.modes = modes;\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return _react.default.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(_Transition.ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, _react.default.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(_Transition.ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return _react.default.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [_react.default.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), _react.default.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: _Transition.ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === _Transition.ENTERING && props.mode === modes.in) {\n      return {\n        status: _Transition.ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: _Transition.EXITING\n      };\n    }\n\n    return {\n      current: _react.default.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case _Transition.ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case _Transition.EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case _Transition.ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/_react.default.createElement(_TransitionGroupContext.default.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(_react.default.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: _propTypes.default.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: _propTypes.default.oneOfType([_propTypes.default.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nvar _default = SwitchTransition;\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$react_transition_group$cjs$TransitionGroupContext","~$module$node_modules$react_transition_group$cjs$Transition"]],"~:properties",["^5",["getDerivedStateFromProps","appeared","onExited","prototype","children","__esModule","isMounting","propTypes","mode","value","changeState","status","onEntered","current","componentDidMount","out","defaultProps","render","state","__proto__","modes","default","constructor","in"]],"~:compiled-at",1712152510928,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_transition_group$cjs$SwitchTransition.js\",\n\"lineCount\":97,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-transition-group/cjs/SwitchTransition.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_transition_group$cjs$SwitchTransition\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.default = exports.modes = void 0;\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _Transition = require(\\\"./Transition\\\");\\n\\nvar _TransitionGroupContext = _interopRequireDefault(require(\\\"./TransitionGroupContext\\\"));\\n\\nvar _leaveRenders, _enterRenders;\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\\n\\nfunction areChildrenDifferent(oldChildren, newChildren) {\\n  if (oldChildren === newChildren) return false;\\n\\n  if (_react.default.isValidElement(oldChildren) && _react.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\\n    return false;\\n  }\\n\\n  return true;\\n}\\n/**\\n * Enum of modes for SwitchTransition component\\n * @enum { string }\\n */\\n\\n\\nvar modes = {\\n  out: 'out-in',\\n  in: 'in-out'\\n};\\nexports.modes = modes;\\n\\nvar callHook = function callHook(element, name, cb) {\\n  return function () {\\n    var _element$props;\\n\\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\\n    cb();\\n  };\\n};\\n\\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\\n  var current = _ref.current,\\n      changeState = _ref.changeState;\\n  return _react.default.cloneElement(current, {\\n    in: false,\\n    onExited: callHook(current, 'onExited', function () {\\n      changeState(_Transition.ENTERING, null);\\n    })\\n  });\\n}, _leaveRenders[modes.in] = function (_ref2) {\\n  var current = _ref2.current,\\n      changeState = _ref2.changeState,\\n      children = _ref2.children;\\n  return [current, _react.default.cloneElement(children, {\\n    in: true,\\n    onEntered: callHook(children, 'onEntered', function () {\\n      changeState(_Transition.ENTERING);\\n    })\\n  })];\\n}, _leaveRenders);\\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\\n  var children = _ref3.children,\\n      changeState = _ref3.changeState;\\n  return _react.default.cloneElement(children, {\\n    in: true,\\n    onEntered: callHook(children, 'onEntered', function () {\\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {\\n        in: true\\n      }));\\n    })\\n  });\\n}, _enterRenders[modes.in] = function (_ref4) {\\n  var current = _ref4.current,\\n      children = _ref4.children,\\n      changeState = _ref4.changeState;\\n  return [_react.default.cloneElement(current, {\\n    in: false,\\n    onExited: callHook(current, 'onExited', function () {\\n      changeState(_Transition.ENTERED, _react.default.cloneElement(children, {\\n        in: true\\n      }));\\n    })\\n  }), _react.default.cloneElement(children, {\\n    in: true\\n  })];\\n}, _enterRenders);\\n/**\\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\\n * You can use it when you want to control the render between state transitions.\\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\\n *\\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\\n *\\n * **Note**: If you want the animation to happen simultaneously\\n * (that is, to have the old child removed and a new child inserted **at the same time**),\\n * you should use\\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\\n * instead.\\n *\\n * ```jsx\\n * function App() {\\n *  const [state, setState] = useState(false);\\n *  return (\\n *    <SwitchTransition>\\n *      <CSSTransition\\n *        key={state ? \\\"Goodbye, world!\\\" : \\\"Hello, world!\\\"}\\n *        addEndListener={(node, done) => node.addEventListener(\\\"transitionend\\\", done, false)}\\n *        classNames='fade'\\n *      >\\n *        <button onClick={() => setState(state => !state)}>\\n *          {state ? \\\"Goodbye, world!\\\" : \\\"Hello, world!\\\"}\\n *        </button>\\n *      </CSSTransition>\\n *    </SwitchTransition>\\n *  );\\n * }\\n * ```\\n *\\n * ```css\\n * .fade-enter{\\n *    opacity: 0;\\n * }\\n * .fade-exit{\\n *    opacity: 1;\\n * }\\n * .fade-enter-active{\\n *    opacity: 1;\\n * }\\n * .fade-exit-active{\\n *    opacity: 0;\\n * }\\n * .fade-enter-active,\\n * .fade-exit-active{\\n *    transition: opacity 500ms;\\n * }\\n * ```\\n */\\n\\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\\n  _inheritsLoose(SwitchTransition, _React$Component);\\n\\n  function SwitchTransition() {\\n    var _this;\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\\n    _this.state = {\\n      status: _Transition.ENTERED,\\n      current: null\\n    };\\n    _this.appeared = false;\\n\\n    _this.changeState = function (status, current) {\\n      if (current === void 0) {\\n        current = _this.state.current;\\n      }\\n\\n      _this.setState({\\n        status: status,\\n        current: current\\n      });\\n    };\\n\\n    return _this;\\n  }\\n\\n  var _proto = SwitchTransition.prototype;\\n\\n  _proto.componentDidMount = function componentDidMount() {\\n    this.appeared = true;\\n  };\\n\\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\\n    if (props.children == null) {\\n      return {\\n        current: null\\n      };\\n    }\\n\\n    if (state.status === _Transition.ENTERING && props.mode === modes.in) {\\n      return {\\n        status: _Transition.ENTERING\\n      };\\n    }\\n\\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\\n      return {\\n        status: _Transition.EXITING\\n      };\\n    }\\n\\n    return {\\n      current: _react.default.cloneElement(props.children, {\\n        in: true\\n      })\\n    };\\n  };\\n\\n  _proto.render = function render() {\\n    var _this$props = this.props,\\n        children = _this$props.children,\\n        mode = _this$props.mode,\\n        _this$state = this.state,\\n        status = _this$state.status,\\n        current = _this$state.current;\\n    var data = {\\n      children: children,\\n      current: current,\\n      changeState: this.changeState,\\n      status: status\\n    };\\n    var component;\\n\\n    switch (status) {\\n      case _Transition.ENTERING:\\n        component = enterRenders[mode](data);\\n        break;\\n\\n      case _Transition.EXITING:\\n        component = leaveRenders[mode](data);\\n        break;\\n\\n      case _Transition.ENTERED:\\n        component = current;\\n    }\\n\\n    return /*#__PURE__*/_react.default.createElement(_TransitionGroupContext.default.Provider, {\\n      value: {\\n        isMounting: !this.appeared\\n      }\\n    }, component);\\n  };\\n\\n  return SwitchTransition;\\n}(_react.default.Component);\\n\\nSwitchTransition.propTypes = process.env.NODE_ENV !== \\\"production\\\" ? {\\n  /**\\n   * Transition modes.\\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\\n   *\\n   * @type {'out-in'|'in-out'}\\n   */\\n  mode: _propTypes.default.oneOf([modes.in, modes.out]),\\n\\n  /**\\n   * Any `Transition` or `CSSTransition` component.\\n   */\\n  children: _propTypes.default.oneOfType([_propTypes.default.element.isRequired])\\n} : {};\\nSwitchTransition.defaultProps = {\\n  mode: modes.out\\n};\\nvar _default = SwitchTransition;\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"_inheritsLoose\",\"subClass\",\"superClass\",\"prototype\",\"Object\",\"create\",\"constructor\",\"__proto__\",\"modes\",\"_react\",\"_propTypes\",\"_Transition\",\"_TransitionGroupContext\",\"_leaveRenders\",\"_enterRenders\",\"out\",\"in\",\"callHook\",\"element\",\"name\",\"cb\",\"_element$props\",\"props\",\"apply\",\"arguments\",\"leaveRenders\",\"_ref\",\"current\",\"changeState\",\"cloneElement\",\"onExited\",\"ENTERING\",\"_ref2\",\"children\",\"onEntered\",\"enterRenders\",\"_ref3\",\"ENTERED\",\"_ref4\",\"SwitchTransition\",\"_React$Component\",\"_this\",\"_len\",\"length\",\"args\",\"Array\",\"_key\",\"call\",\"concat\",\"state\",\"status\",\"appeared\",\"_this.changeState\",\"setState\",\"_proto\",\"componentDidMount\",\"_proto.componentDidMount\",\"getDerivedStateFromProps\",\"SwitchTransition.getDerivedStateFromProps\",\"mode\",\"oldChildren\",\"newChildren\",\"isValidElement\",\"key\",\"EXITING\",\"render\",\"_proto.render\",\"_this$props\",\"_this$state\",\"data\",\"component\",\"createElement\",\"Provider\",\"value\",\"isMounting\",\"Component\",\"propTypes\",\"oneOf\",\"oneOfType\",\"isRequired\",\"defaultProps\"]\n}\n"]