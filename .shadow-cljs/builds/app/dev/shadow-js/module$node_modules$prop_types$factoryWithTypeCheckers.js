["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/prop-types/factoryWithTypeCheckers.js"],"~:js","shadow$provide.module$node_modules$prop_types$factoryWithTypeCheckers = function(global, require, module, exports) {\n  function emptyFunctionThatReturnsNull() {\n    return null;\n  }\n  var ReactIs = require(\"module$node_modules$prop_types$node_modules$react_is$index\"), assign = require(\"module$node_modules$object_assign$index\"), ReactPropTypesSecret = require(\"module$node_modules$prop_types$lib$ReactPropTypesSecret\"), has = require(\"module$node_modules$prop_types$lib$has\"), checkPropTypes = require(\"module$node_modules$prop_types$checkPropTypes\"), printWarning = function() {\n  };\n  printWarning = function(text) {\n    text = \"Warning: \" + text;\n    \"undefined\" !== typeof console && console.error(text);\n    try {\n      throw Error(text);\n    } catch (x) {\n    }\n  };\n  module.exports = function(isValidElement, throwOnDirectAccess) {\n    function is(x, y) {\n      return x === y ? 0 !== x || 1 / x === 1 / y : x !== x && y !== y;\n    }\n    function PropTypeError(message, data) {\n      this.message = message;\n      this.data = data && \"object\" === typeof data ? data : {};\n      this.stack = \"\";\n    }\n    function createChainableTypeChecker(validate) {\n      function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n        componentName = componentName || \"\\x3c\\x3canonymous\\x3e\\x3e\";\n        propFullName = propFullName || propName;\n        if (secret !== ReactPropTypesSecret) {\n          if (throwOnDirectAccess) {\n            throw isRequired = Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types\"), isRequired.name = \"Invariant Violation\", isRequired;\n          }\n          \"undefined\" !== typeof console && (secret = componentName + \":\" + propName, !manualPropTypeCallCache[secret] && 3 > manualPropTypeWarningCount && (printWarning(\"You are manually calling a React.PropTypes validation function for the `\" + propFullName + \"` prop on `\" + componentName + \"`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.\"), \n          manualPropTypeCallCache[secret] = !0, manualPropTypeWarningCount++));\n        }\n        return null == props[propName] ? isRequired ? null === props[propName] ? new PropTypeError(\"The \" + location + \" `\" + propFullName + \"` is marked as required in `\" + (componentName + \"`, but its value is `null`.\")) : new PropTypeError(\"The \" + location + \" `\" + propFullName + \"` is marked as required in `\" + (componentName + \"`, but its value is `undefined`.\")) : null : validate(props, propName, componentName, location, propFullName);\n      }\n      var manualPropTypeCallCache = {}, manualPropTypeWarningCount = 0, chainedCheckType = checkType.bind(null, !1);\n      chainedCheckType.isRequired = checkType.bind(null, !0);\n      return chainedCheckType;\n    }\n    function createPrimitiveTypeChecker(expectedType) {\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName, secret) {\n        props = props[propName];\n        return getPropType(props) !== expectedType ? (props = getPreciseType(props), new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + (props + \"` supplied to `\" + componentName + \"`, expected `\") + (expectedType + \"`.\"), {expectedType})) : null;\n      });\n    }\n    function invalidValidatorError(componentName, location, propFullName, key, type) {\n      return new PropTypeError((componentName || \"React class\") + \": \" + location + \" type `\" + propFullName + \".\" + key + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + type + \"`.\");\n    }\n    function isNode(propValue) {\n      switch(typeof propValue) {\n        case \"number\":\n        case \"string\":\n        case \"undefined\":\n          return !0;\n        case \"boolean\":\n          return !propValue;\n        case \"object\":\n          if (Array.isArray(propValue)) {\n            return propValue.every(isNode);\n          }\n          if (null === propValue || isValidElement(propValue)) {\n            return !0;\n          }\n          var iteratorFn = propValue && (ITERATOR_SYMBOL && propValue[ITERATOR_SYMBOL] || propValue[\"@@iterator\"]);\n          var iteratorFn$jscomp$0 = \"function\" === typeof iteratorFn ? iteratorFn : void 0;\n          if (iteratorFn$jscomp$0) {\n            if (iteratorFn = iteratorFn$jscomp$0.call(propValue), iteratorFn$jscomp$0 !== propValue.entries) {\n              for (; !(propValue = iteratorFn.next()).done;) {\n                if (!isNode(propValue.value)) {\n                  return !1;\n                }\n              }\n            } else {\n              for (; !(propValue = iteratorFn.next()).done;) {\n                if ((propValue = propValue.value) && !isNode(propValue[1])) {\n                  return !1;\n                }\n              }\n            }\n          } else {\n            return !1;\n          }\n          return !0;\n        default:\n          return !1;\n      }\n    }\n    function getPropType(propValue) {\n      var propType = typeof propValue;\n      return Array.isArray(propValue) ? \"array\" : propValue instanceof RegExp ? \"object\" : \"symbol\" === propType || propValue && (\"Symbol\" === propValue[\"@@toStringTag\"] || \"function\" === typeof Symbol && propValue instanceof Symbol) ? \"symbol\" : propType;\n    }\n    function getPreciseType(propValue) {\n      if (\"undefined\" === typeof propValue || null === propValue) {\n        return \"\" + propValue;\n      }\n      var propType = getPropType(propValue);\n      if (\"object\" === propType) {\n        if (propValue instanceof Date) {\n          return \"date\";\n        }\n        if (propValue instanceof RegExp) {\n          return \"regexp\";\n        }\n      }\n      return propType;\n    }\n    function getPostfixForTypeWarning(value) {\n      value = getPreciseType(value);\n      switch(value) {\n        case \"array\":\n        case \"object\":\n          return \"an \" + value;\n        case \"boolean\":\n        case \"date\":\n        case \"regexp\":\n          return \"a \" + value;\n        default:\n          return value;\n      }\n    }\n    var ITERATOR_SYMBOL = \"function\" === typeof Symbol && Symbol.iterator, ReactPropTypes = {array:createPrimitiveTypeChecker(\"array\"), bigint:createPrimitiveTypeChecker(\"bigint\"), bool:createPrimitiveTypeChecker(\"boolean\"), func:createPrimitiveTypeChecker(\"function\"), number:createPrimitiveTypeChecker(\"number\"), object:createPrimitiveTypeChecker(\"object\"), string:createPrimitiveTypeChecker(\"string\"), symbol:createPrimitiveTypeChecker(\"symbol\"), any:createChainableTypeChecker(emptyFunctionThatReturnsNull), \n    arrayOf:function(typeChecker) {\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        if (\"function\" !== typeof typeChecker) {\n          return new PropTypeError(\"Property `\" + propFullName + \"` of component `\" + componentName + \"` has invalid PropType notation inside arrayOf.\");\n        }\n        props = props[propName];\n        if (!Array.isArray(props)) {\n          return props = getPropType(props), new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + (props + \"` supplied to `\" + componentName + \"`, expected an array.\"));\n        }\n        for (propName = 0; propName < props.length; propName++) {\n          var error = typeChecker(props, propName, componentName, location, propFullName + \"[\" + propName + \"]\", ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n        return null;\n      });\n    }, element:function() {\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        props = props[propName];\n        return isValidElement(props) ? null : (props = getPropType(props), new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + (props + \"` supplied to `\" + componentName + \"`, expected a single ReactElement.\")));\n      });\n    }(), elementType:function() {\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        props = props[propName];\n        return ReactIs.isValidElementType(props) ? null : (props = getPropType(props), new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + (props + \"` supplied to `\" + componentName + \"`, expected a single ReactElement type.\")));\n      });\n    }(), instanceOf:function(expectedClass) {\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        if (!(props[propName] instanceof expectedClass)) {\n          var expectedClassName = expectedClass.name || \"\\x3c\\x3canonymous\\x3e\\x3e\";\n          props = props[propName];\n          props = props.constructor && props.constructor.name ? props.constructor.name : \"\\x3c\\x3canonymous\\x3e\\x3e\";\n          return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + (props + \"` supplied to `\" + componentName + \"`, expected instance of `\") + (expectedClassName + \"`.\"));\n        }\n        return null;\n      });\n    }, node:function() {\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        return isNode(props[propName]) ? null : new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` supplied to `\" + (componentName + \"`, expected a ReactNode.\"));\n      });\n    }(), objectOf:function(typeChecker) {\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        if (\"function\" !== typeof typeChecker) {\n          return new PropTypeError(\"Property `\" + propFullName + \"` of component `\" + componentName + \"` has invalid PropType notation inside objectOf.\");\n        }\n        props = props[propName];\n        propName = getPropType(props);\n        if (\"object\" !== propName) {\n          return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + (propName + \"` supplied to `\" + componentName + \"`, expected an object.\"));\n        }\n        for (var key in props) {\n          if (has(props, key) && (propName = typeChecker(props, key, componentName, location, propFullName + \".\" + key, ReactPropTypesSecret), propName instanceof Error)) {\n            return propName;\n          }\n        }\n        return null;\n      });\n    }, oneOf:function(expectedValues) {\n      return Array.isArray(expectedValues) ? createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        props = props[propName];\n        for (propName = 0; propName < expectedValues.length; propName++) {\n          if (is(props, expectedValues[propName])) {\n            return null;\n          }\n        }\n        propName = JSON.stringify(expectedValues, function(key, value) {\n          return \"symbol\" === getPreciseType(value) ? String(value) : value;\n        });\n        return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of value `\" + String(props) + \"` supplied to `\" + (componentName + \"`, expected one of \" + propName + \".\"));\n      }) : (1 < arguments.length ? printWarning(\"Invalid arguments supplied to oneOf, expected an array, got \" + arguments.length + \" arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).\") : printWarning(\"Invalid argument supplied to oneOf, expected an array.\"), emptyFunctionThatReturnsNull);\n    }, oneOfType:function(arrayOfTypeCheckers) {\n      if (!Array.isArray(arrayOfTypeCheckers)) {\n        return printWarning(\"Invalid argument supplied to oneOfType, expected an instance of array.\"), emptyFunctionThatReturnsNull;\n      }\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (\"function\" !== typeof checker) {\n          return printWarning(\"Invalid argument supplied to oneOfType. Expected an array of check functions, but received \" + getPostfixForTypeWarning(checker) + \" at index \" + i + \".\"), emptyFunctionThatReturnsNull;\n        }\n      }\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        for (var expectedTypes = [], i = 0; i < arrayOfTypeCheckers.length; i++) {\n          var checkerResult = (0,arrayOfTypeCheckers[i])(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n          if (null == checkerResult) {\n            return null;\n          }\n          checkerResult.data && has(checkerResult.data, \"expectedType\") && expectedTypes.push(checkerResult.data.expectedType);\n        }\n        props = 0 < expectedTypes.length ? \", expected one of type [\" + expectedTypes.join(\", \") + \"]\" : \"\";\n        return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` supplied to `\" + (componentName + \"`\" + props + \".\"));\n      });\n    }, shape:function(shapeTypes) {\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        props = props[propName];\n        propName = getPropType(props);\n        if (\"object\" !== propName) {\n          return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + propName + \"` supplied to `\" + (componentName + \"`, expected `object`.\"));\n        }\n        for (var key in shapeTypes) {\n          propName = shapeTypes[key];\n          if (\"function\" !== typeof propName) {\n            return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(propName));\n          }\n          if (propName = propName(props, key, componentName, location, propFullName + \".\" + key, ReactPropTypesSecret)) {\n            return propName;\n          }\n        }\n        return null;\n      });\n    }, exact:function(shapeTypes) {\n      return createChainableTypeChecker(function(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName], propType = getPropType(propValue);\n        if (\"object\" !== propType) {\n          return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + propType + \"` supplied to `\" + (componentName + \"`, expected `object`.\"));\n        }\n        propType = assign({}, props[propName], shapeTypes);\n        for (var key in propType) {\n          propType = shapeTypes[key];\n          if (has(shapeTypes, key) && \"function\" !== typeof propType) {\n            return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(propType));\n          }\n          if (!propType) {\n            return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` key `\" + key + \"` supplied to `\" + componentName + \"`.\\nBad object: \" + JSON.stringify(props[propName], null, \"  \") + \"\\nValid keys: \" + JSON.stringify(Object.keys(shapeTypes), null, \"  \"));\n          }\n          if (propType = propType(propValue, key, componentName, location, propFullName + \".\" + key, ReactPropTypesSecret)) {\n            return propType;\n          }\n        }\n        return null;\n      });\n    }};\n    PropTypeError.prototype = Error.prototype;\n    ReactPropTypes.checkPropTypes = checkPropTypes;\n    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n    return ReactPropTypes.PropTypes = ReactPropTypes;\n  };\n};\n","~:source","shadow$provide[\"module$node_modules$prop_types$factoryWithTypeCheckers\"] = function(global,require,module,exports) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$prop_types$lib$has","~$module$node_modules$object_assign$index","~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret","~$module$node_modules$prop_types$node_modules$react_is$index","~$module$node_modules$prop_types$checkPropTypes"]],"~:properties",["^5",["func","arrayOf","message","instanceOf","object","string","exact","prototype","shape","elementType","oneOfType","any","element","name","bool","checkPropTypes","number","symbol","objectOf","oneOf","bigint","data","expectedType","array","PropTypes","node","stack","resetWarningCache","isRequired"]],"~:compiled-at",1712152510415,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$prop_types$factoryWithTypeCheckers.js\",\n\"lineCount\":261,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/prop-types/factoryWithTypeCheckers.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$prop_types$factoryWithTypeCheckers\\\"] = function(global,require,module,exports) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n'use strict';\\n\\nvar ReactIs = require('react-is');\\nvar assign = require('object-assign');\\n\\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\\nvar has = require('./lib/has');\\nvar checkPropTypes = require('./checkPropTypes');\\n\\nvar printWarning = function() {};\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  printWarning = function(text) {\\n    var message = 'Warning: ' + text;\\n    if (typeof console !== 'undefined') {\\n      console.error(message);\\n    }\\n    try {\\n      // --- Welcome to debugging React ---\\n      // This error was thrown as a convenience so that you can use this stack\\n      // to find the callsite that caused this warning to fire.\\n      throw new Error(message);\\n    } catch (x) {}\\n  };\\n}\\n\\nfunction emptyFunctionThatReturnsNull() {\\n  return null;\\n}\\n\\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\\n  /* global Symbol */\\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\\n\\n  /**\\n   * Returns the iterator method function contained on the iterable object.\\n   *\\n   * Be sure to invoke the function with the iterable as context:\\n   *\\n   *     var iteratorFn = getIteratorFn(myIterable);\\n   *     if (iteratorFn) {\\n   *       var iterator = iteratorFn.call(myIterable);\\n   *       ...\\n   *     }\\n   *\\n   * @param {?object} maybeIterable\\n   * @return {?function}\\n   */\\n  function getIteratorFn(maybeIterable) {\\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\\n    if (typeof iteratorFn === 'function') {\\n      return iteratorFn;\\n    }\\n  }\\n\\n  /**\\n   * Collection of methods that allow declaration and validation of props that are\\n   * supplied to React components. Example usage:\\n   *\\n   *   var Props = require('ReactPropTypes');\\n   *   var MyArticle = React.createClass({\\n   *     propTypes: {\\n   *       // An optional string prop named \\\"description\\\".\\n   *       description: Props.string,\\n   *\\n   *       // A required enum prop named \\\"category\\\".\\n   *       category: Props.oneOf(['News','Photos']).isRequired,\\n   *\\n   *       // A prop named \\\"dialog\\\" that requires an instance of Dialog.\\n   *       dialog: Props.instanceOf(Dialog).isRequired\\n   *     },\\n   *     render: function() { ... }\\n   *   });\\n   *\\n   * A more formal specification of how these methods are used:\\n   *\\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\\n   *   decl := ReactPropTypes.{type}(.isRequired)?\\n   *\\n   * Each and every declaration produces a function with the same signature. This\\n   * allows the creation of custom validation functions. For example:\\n   *\\n   *  var MyLink = React.createClass({\\n   *    propTypes: {\\n   *      // An optional string or URI prop named \\\"href\\\".\\n   *      href: function(props, propName, componentName) {\\n   *        var propValue = props[propName];\\n   *        if (propValue != null && typeof propValue !== 'string' &&\\n   *            !(propValue instanceof URI)) {\\n   *          return new Error(\\n   *            'Expected a string or an URI for ' + propName + ' in ' +\\n   *            componentName\\n   *          );\\n   *        }\\n   *      }\\n   *    },\\n   *    render: function() {...}\\n   *  });\\n   *\\n   * @internal\\n   */\\n\\n  var ANONYMOUS = '<<anonymous>>';\\n\\n  // Important!\\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\\n  var ReactPropTypes = {\\n    array: createPrimitiveTypeChecker('array'),\\n    bigint: createPrimitiveTypeChecker('bigint'),\\n    bool: createPrimitiveTypeChecker('boolean'),\\n    func: createPrimitiveTypeChecker('function'),\\n    number: createPrimitiveTypeChecker('number'),\\n    object: createPrimitiveTypeChecker('object'),\\n    string: createPrimitiveTypeChecker('string'),\\n    symbol: createPrimitiveTypeChecker('symbol'),\\n\\n    any: createAnyTypeChecker(),\\n    arrayOf: createArrayOfTypeChecker,\\n    element: createElementTypeChecker(),\\n    elementType: createElementTypeTypeChecker(),\\n    instanceOf: createInstanceTypeChecker,\\n    node: createNodeChecker(),\\n    objectOf: createObjectOfTypeChecker,\\n    oneOf: createEnumTypeChecker,\\n    oneOfType: createUnionTypeChecker,\\n    shape: createShapeTypeChecker,\\n    exact: createStrictShapeTypeChecker,\\n  };\\n\\n  /**\\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\\n   */\\n  /*eslint-disable no-self-compare*/\\n  function is(x, y) {\\n    // SameValue algorithm\\n    if (x === y) {\\n      // Steps 1-5, 7-10\\n      // Steps 6.b-6.e: +0 != -0\\n      return x !== 0 || 1 / x === 1 / y;\\n    } else {\\n      // Step 6.a: NaN == NaN\\n      return x !== x && y !== y;\\n    }\\n  }\\n  /*eslint-enable no-self-compare*/\\n\\n  /**\\n   * We use an Error-like object for backward compatibility as people may call\\n   * PropTypes directly and inspect their output. However, we don't use real\\n   * Errors anymore. We don't inspect their stack anyway, and creating them\\n   * is prohibitively expensive if they are created too often, such as what\\n   * happens in oneOfType() for any type before the one that matched.\\n   */\\n  function PropTypeError(message, data) {\\n    this.message = message;\\n    this.data = data && typeof data === 'object' ? data: {};\\n    this.stack = '';\\n  }\\n  // Make `instanceof Error` still work for returned errors.\\n  PropTypeError.prototype = Error.prototype;\\n\\n  function createChainableTypeChecker(validate) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      var manualPropTypeCallCache = {};\\n      var manualPropTypeWarningCount = 0;\\n    }\\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\\n      componentName = componentName || ANONYMOUS;\\n      propFullName = propFullName || propName;\\n\\n      if (secret !== ReactPropTypesSecret) {\\n        if (throwOnDirectAccess) {\\n          // New behavior only for users of `prop-types` package\\n          var err = new Error(\\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\\n            'Read more at http://fb.me/use-check-prop-types'\\n          );\\n          err.name = 'Invariant Violation';\\n          throw err;\\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\\n          // Old behavior for people using React.PropTypes\\n          var cacheKey = componentName + ':' + propName;\\n          if (\\n            !manualPropTypeCallCache[cacheKey] &&\\n            // Avoid spamming the console because they are often not actionable except for lib authors\\n            manualPropTypeWarningCount < 3\\n          ) {\\n            printWarning(\\n              'You are manually calling a React.PropTypes validation ' +\\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\\n              'and will throw in the standalone `prop-types` package. ' +\\n              'You may be seeing this warning due to a third-party PropTypes ' +\\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\\n            );\\n            manualPropTypeCallCache[cacheKey] = true;\\n            manualPropTypeWarningCount++;\\n          }\\n        }\\n      }\\n      if (props[propName] == null) {\\n        if (isRequired) {\\n          if (props[propName] === null) {\\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\\n          }\\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\\n        }\\n        return null;\\n      } else {\\n        return validate(props, propName, componentName, location, propFullName);\\n      }\\n    }\\n\\n    var chainedCheckType = checkType.bind(null, false);\\n    chainedCheckType.isRequired = checkType.bind(null, true);\\n\\n    return chainedCheckType;\\n  }\\n\\n  function createPrimitiveTypeChecker(expectedType) {\\n    function validate(props, propName, componentName, location, propFullName, secret) {\\n      var propValue = props[propName];\\n      var propType = getPropType(propValue);\\n      if (propType !== expectedType) {\\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\\n        // check, but we can offer a more precise error message here rather than\\n        // 'of type `object`'.\\n        var preciseType = getPreciseType(propValue);\\n\\n        return new PropTypeError(\\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\\n          {expectedType: expectedType}\\n        );\\n      }\\n      return null;\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function createAnyTypeChecker() {\\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\\n  }\\n\\n  function createArrayOfTypeChecker(typeChecker) {\\n    function validate(props, propName, componentName, location, propFullName) {\\n      if (typeof typeChecker !== 'function') {\\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\\n      }\\n      var propValue = props[propName];\\n      if (!Array.isArray(propValue)) {\\n        var propType = getPropType(propValue);\\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\\n      }\\n      for (var i = 0; i < propValue.length; i++) {\\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\\n        if (error instanceof Error) {\\n          return error;\\n        }\\n      }\\n      return null;\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function createElementTypeChecker() {\\n    function validate(props, propName, componentName, location, propFullName) {\\n      var propValue = props[propName];\\n      if (!isValidElement(propValue)) {\\n        var propType = getPropType(propValue);\\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\\n      }\\n      return null;\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function createElementTypeTypeChecker() {\\n    function validate(props, propName, componentName, location, propFullName) {\\n      var propValue = props[propName];\\n      if (!ReactIs.isValidElementType(propValue)) {\\n        var propType = getPropType(propValue);\\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\\n      }\\n      return null;\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function createInstanceTypeChecker(expectedClass) {\\n    function validate(props, propName, componentName, location, propFullName) {\\n      if (!(props[propName] instanceof expectedClass)) {\\n        var expectedClassName = expectedClass.name || ANONYMOUS;\\n        var actualClassName = getClassName(props[propName]);\\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\\n      }\\n      return null;\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function createEnumTypeChecker(expectedValues) {\\n    if (!Array.isArray(expectedValues)) {\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (arguments.length > 1) {\\n          printWarning(\\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\\n          );\\n        } else {\\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\\n        }\\n      }\\n      return emptyFunctionThatReturnsNull;\\n    }\\n\\n    function validate(props, propName, componentName, location, propFullName) {\\n      var propValue = props[propName];\\n      for (var i = 0; i < expectedValues.length; i++) {\\n        if (is(propValue, expectedValues[i])) {\\n          return null;\\n        }\\n      }\\n\\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\\n        var type = getPreciseType(value);\\n        if (type === 'symbol') {\\n          return String(value);\\n        }\\n        return value;\\n      });\\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function createObjectOfTypeChecker(typeChecker) {\\n    function validate(props, propName, componentName, location, propFullName) {\\n      if (typeof typeChecker !== 'function') {\\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\\n      }\\n      var propValue = props[propName];\\n      var propType = getPropType(propValue);\\n      if (propType !== 'object') {\\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\\n      }\\n      for (var key in propValue) {\\n        if (has(propValue, key)) {\\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\\n          if (error instanceof Error) {\\n            return error;\\n          }\\n        }\\n      }\\n      return null;\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\\n    if (!Array.isArray(arrayOfTypeCheckers)) {\\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\\n      return emptyFunctionThatReturnsNull;\\n    }\\n\\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\\n      var checker = arrayOfTypeCheckers[i];\\n      if (typeof checker !== 'function') {\\n        printWarning(\\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\\n        );\\n        return emptyFunctionThatReturnsNull;\\n      }\\n    }\\n\\n    function validate(props, propName, componentName, location, propFullName) {\\n      var expectedTypes = [];\\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\\n        var checker = arrayOfTypeCheckers[i];\\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\\n        if (checkerResult == null) {\\n          return null;\\n        }\\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\\n          expectedTypes.push(checkerResult.data.expectedType);\\n        }\\n      }\\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function createNodeChecker() {\\n    function validate(props, propName, componentName, location, propFullName) {\\n      if (!isNode(props[propName])) {\\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\\n      }\\n      return null;\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\\n    return new PropTypeError(\\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\\n    );\\n  }\\n\\n  function createShapeTypeChecker(shapeTypes) {\\n    function validate(props, propName, componentName, location, propFullName) {\\n      var propValue = props[propName];\\n      var propType = getPropType(propValue);\\n      if (propType !== 'object') {\\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\\n      }\\n      for (var key in shapeTypes) {\\n        var checker = shapeTypes[key];\\n        if (typeof checker !== 'function') {\\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\\n        }\\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\\n        if (error) {\\n          return error;\\n        }\\n      }\\n      return null;\\n    }\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function createStrictShapeTypeChecker(shapeTypes) {\\n    function validate(props, propName, componentName, location, propFullName) {\\n      var propValue = props[propName];\\n      var propType = getPropType(propValue);\\n      if (propType !== 'object') {\\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\\n      }\\n      // We need to check all keys in case some are required but missing from props.\\n      var allKeys = assign({}, props[propName], shapeTypes);\\n      for (var key in allKeys) {\\n        var checker = shapeTypes[key];\\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\\n        }\\n        if (!checker) {\\n          return new PropTypeError(\\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\\n            '\\\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\\n            '\\\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\\n          );\\n        }\\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\\n        if (error) {\\n          return error;\\n        }\\n      }\\n      return null;\\n    }\\n\\n    return createChainableTypeChecker(validate);\\n  }\\n\\n  function isNode(propValue) {\\n    switch (typeof propValue) {\\n      case 'number':\\n      case 'string':\\n      case 'undefined':\\n        return true;\\n      case 'boolean':\\n        return !propValue;\\n      case 'object':\\n        if (Array.isArray(propValue)) {\\n          return propValue.every(isNode);\\n        }\\n        if (propValue === null || isValidElement(propValue)) {\\n          return true;\\n        }\\n\\n        var iteratorFn = getIteratorFn(propValue);\\n        if (iteratorFn) {\\n          var iterator = iteratorFn.call(propValue);\\n          var step;\\n          if (iteratorFn !== propValue.entries) {\\n            while (!(step = iterator.next()).done) {\\n              if (!isNode(step.value)) {\\n                return false;\\n              }\\n            }\\n          } else {\\n            // Iterator will provide entry [k,v] tuples rather than values.\\n            while (!(step = iterator.next()).done) {\\n              var entry = step.value;\\n              if (entry) {\\n                if (!isNode(entry[1])) {\\n                  return false;\\n                }\\n              }\\n            }\\n          }\\n        } else {\\n          return false;\\n        }\\n\\n        return true;\\n      default:\\n        return false;\\n    }\\n  }\\n\\n  function isSymbol(propType, propValue) {\\n    // Native Symbol.\\n    if (propType === 'symbol') {\\n      return true;\\n    }\\n\\n    // falsy value can't be a Symbol\\n    if (!propValue) {\\n      return false;\\n    }\\n\\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\\n    if (propValue['@@toStringTag'] === 'Symbol') {\\n      return true;\\n    }\\n\\n    // Fallback for non-spec compliant Symbols which are polyfilled.\\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\\n      return true;\\n    }\\n\\n    return false;\\n  }\\n\\n  // Equivalent of `typeof` but with special handling for array and regexp.\\n  function getPropType(propValue) {\\n    var propType = typeof propValue;\\n    if (Array.isArray(propValue)) {\\n      return 'array';\\n    }\\n    if (propValue instanceof RegExp) {\\n      // Old webkits (at least until Android 4.0) return 'function' rather than\\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\\n      // passes PropTypes.object.\\n      return 'object';\\n    }\\n    if (isSymbol(propType, propValue)) {\\n      return 'symbol';\\n    }\\n    return propType;\\n  }\\n\\n  // This handles more types than `getPropType`. Only used for error messages.\\n  // See `createPrimitiveTypeChecker`.\\n  function getPreciseType(propValue) {\\n    if (typeof propValue === 'undefined' || propValue === null) {\\n      return '' + propValue;\\n    }\\n    var propType = getPropType(propValue);\\n    if (propType === 'object') {\\n      if (propValue instanceof Date) {\\n        return 'date';\\n      } else if (propValue instanceof RegExp) {\\n        return 'regexp';\\n      }\\n    }\\n    return propType;\\n  }\\n\\n  // Returns a string that is postfixed to a warning about an invalid type.\\n  // For example, \\\"undefined\\\" or \\\"of type array\\\"\\n  function getPostfixForTypeWarning(value) {\\n    var type = getPreciseType(value);\\n    switch (type) {\\n      case 'array':\\n      case 'object':\\n        return 'an ' + type;\\n      case 'boolean':\\n      case 'date':\\n      case 'regexp':\\n        return 'a ' + type;\\n      default:\\n        return type;\\n    }\\n  }\\n\\n  // Returns class name of the object, if any.\\n  function getClassName(propValue) {\\n    if (!propValue.constructor || !propValue.constructor.name) {\\n      return ANONYMOUS;\\n    }\\n    return propValue.constructor.name;\\n  }\\n\\n  ReactPropTypes.checkPropTypes = checkPropTypes;\\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\\n  ReactPropTypes.PropTypes = ReactPropTypes;\\n\\n  return ReactPropTypes;\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"emptyFunctionThatReturnsNull\",\"ReactIs\",\"assign\",\"ReactPropTypesSecret\",\"has\",\"checkPropTypes\",\"printWarning\",\"text\",\"message\",\"console\",\"error\",\"Error\",\"x\",\"module.exports\",\"isValidElement\",\"throwOnDirectAccess\",\"is\",\"y\",\"PropTypeError\",\"data\",\"stack\",\"createChainableTypeChecker\",\"validate\",\"checkType\",\"isRequired\",\"props\",\"propName\",\"componentName\",\"location\",\"propFullName\",\"secret\",\"ANONYMOUS\",\"err\",\"name\",\"cacheKey\",\"manualPropTypeCallCache\",\"manualPropTypeWarningCount\",\"chainedCheckType\",\"bind\",\"createPrimitiveTypeChecker\",\"expectedType\",\"propValue\",\"getPropType\",\"propType\",\"preciseType\",\"getPreciseType\",\"invalidValidatorError\",\"key\",\"type\",\"isNode\",\"Array\",\"isArray\",\"every\",\"iteratorFn\",\"ITERATOR_SYMBOL\",\"FAUX_ITERATOR_SYMBOL\",\"iterator\",\"call\",\"entries\",\"done\",\"step\",\"next\",\"value\",\"entry\",\"RegExp\",\"Symbol\",\"Date\",\"getPostfixForTypeWarning\",\"ReactPropTypes\",\"array\",\"bigint\",\"bool\",\"func\",\"number\",\"object\",\"string\",\"symbol\",\"any\",\"arrayOf\",\"createArrayOfTypeChecker\",\"typeChecker\",\"i\",\"length\",\"element\",\"createElementTypeChecker\",\"elementType\",\"createElementTypeTypeChecker\",\"isValidElementType\",\"instanceOf\",\"createInstanceTypeChecker\",\"expectedClass\",\"expectedClassName\",\"constructor\",\"actualClassName\",\"node\",\"createNodeChecker\",\"objectOf\",\"createObjectOfTypeChecker\",\"oneOf\",\"createEnumTypeChecker\",\"expectedValues\",\"valuesString\",\"JSON\",\"stringify\",\"replacer\",\"String\",\"arguments\",\"oneOfType\",\"createUnionTypeChecker\",\"arrayOfTypeCheckers\",\"checker\",\"expectedTypes\",\"checkerResult\",\"push\",\"expectedTypesMessage\",\"join\",\"shape\",\"createShapeTypeChecker\",\"shapeTypes\",\"exact\",\"createStrictShapeTypeChecker\",\"allKeys\",\"Object\",\"keys\",\"prototype\",\"resetWarningCache\",\"PropTypes\"]\n}\n"]