["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/material/node/InputBase/utils.js"],"~:js","shadow$provide.module$node_modules$$mui$material$node$InputBase$utils = function(global, require, module, exports) {\n  function hasValue(value) {\n    return null != value && !(Array.isArray(value) && 0 === value.length);\n  }\n  Object.defineProperty(exports, \"__esModule\", {value:!0});\n  exports.hasValue = hasValue;\n  exports.isAdornedStart = function(obj) {\n    return obj.startAdornment;\n  };\n  exports.isFilled = function(obj, SSR = !1) {\n    return obj && (hasValue(obj.value) && \"\" !== obj.value || SSR && hasValue(obj.defaultValue) && \"\" !== obj.defaultValue);\n  };\n};\n","~:source","shadow$provide[\"module$node_modules$$mui$material$node$InputBase$utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasValue = hasValue;\nexports.isAdornedStart = isAdornedStart;\nexports.isFilled = isFilled;\n// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n}\n\n// Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\nfunction isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n}\n\n// Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\nfunction isAdornedStart(obj) {\n  return obj.startAdornment;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["hasValue","__esModule","isAdornedStart","isFilled","value"]],"~:compiled-at",1712152511392,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$material$node$InputBase$utils.js\",\n\"lineCount\":14,\n\"mappings\":\"AAAAA,cAAA,CAAA,sDAAA,GAA2E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAenHC,UAASA,SAAQ,CAACC,KAAD,CAAQ;AACvB,WAAgB,IAAhB,IAAOA,KAAP,IAAwB,EAAEC,KAAMC,CAAAA,OAAN,CAAcF,KAAd,CAAF,IAA2C,CAA3C,KAA0BA,KAAMG,CAAAA,MAAhC,CAAxB;AADuB;AAZzBC,QAAOC,CAAAA,cAAP,CAAsBP,OAAtB,EAA+B,YAA/B,EAA6C,CAC3CE,MAAO,CAAA,CADoC,CAA7C,CAAA;AAGAF,SAAQC,CAAAA,QAAR,GAAmBA,QAAnB;AACAD,SAAQQ,CAAAA,cAAR,GA6BAA,QAAuB,CAACC,GAAD,CAAM;AAC3B,WAAOA,GAAIC,CAAAA,cAAX;AAD2B,GA7B7B;AACAV,SAAQW,CAAAA,QAAR,GAkBAA,QAAiB,CAACF,GAAD,EAAMG,GAAA,GAAM,CAAA,CAAZ,CAAmB;AAClC,WAAOH,GAAP,KAAeR,QAAA,CAASQ,GAAIP,CAAAA,KAAb,CAAf,IAAoD,EAApD,KAAsCO,GAAIP,CAAAA,KAA1C,IAA0DU,GAA1D,IAAiEX,QAAA,CAASQ,GAAII,CAAAA,YAAb,CAAjE,IAAoH,EAApH,KAA+FJ,GAAII,CAAAA,YAAnG;AADkC,GAlBpC;AARmH,CAAnH;;\",\n\"sources\":[\"node_modules/@mui/material/node/InputBase/utils.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$material$node$InputBase$utils\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.hasValue = hasValue;\\nexports.isAdornedStart = isAdornedStart;\\nexports.isFilled = isFilled;\\n// Supports determination of isControlled().\\n// Controlled input accepts its current value as a prop.\\n//\\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\\n// @param value\\n// @returns {boolean} true if string (including '') or number (including zero)\\nfunction hasValue(value) {\\n  return value != null && !(Array.isArray(value) && value.length === 0);\\n}\\n\\n// Determine if field is empty or filled.\\n// Response determines if label is presented above field or as placeholder.\\n//\\n// @param obj\\n// @param SSR\\n// @returns {boolean} False when not present or empty string.\\n//                    True when any number or string with length.\\nfunction isFilled(obj, SSR = false) {\\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\\n}\\n\\n// Determine if an Input is adorned on start.\\n// It's corresponding to the left with LTR.\\n//\\n// @param obj\\n// @returns {boolean} False when no adornments.\\n//                    True when adorned at the start.\\nfunction isAdornedStart(obj) {\\n  return obj.startAdornment;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"hasValue\",\"value\",\"Array\",\"isArray\",\"length\",\"Object\",\"defineProperty\",\"isAdornedStart\",\"obj\",\"startAdornment\",\"isFilled\",\"SSR\",\"defaultValue\"]\n}\n"]